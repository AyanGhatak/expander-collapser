{"version":3,"sources":["webpack:///webpack/bootstrap b238fc168c9eead9da79","webpack:///./src/index.js","webpack:///./src/fcts-ext-expandercollapser.js"],"names":[],"mappings":"YACA,cAMA,MACA,eAGA,mBACA,CACA,cACA,EAIA,kDAGA,KAGA,YACA,OAIA,IAzBA,iBA4BA,MAGA,MAGA,0BCtCA,CACA,uBACA,GAAC,cACD,uBACA,oBACA,yBACA,OACA,yBAEA,6CACA,KAEA,uBAEA,KAAC,qDACD,SACA,iBACA,gFACA,kBACA,0EACA,cACA,oBAEA,IACA,GAAC,eCxBD,CACA,kCAIA,CAsaA,YApaA,cAIA,IACA,iFAEA,gCAEA,0CACA,CACA,iBAEA,sDACA,mDACA,oBACA,oBAEA,qBACA,CACA,4DACA,CACA,gBACA,4BAGA,2DAEA,eAA6B,cAA0B,OACvD,mBAEA,GACA,oBAEA,0CACA,YAKA,UACA,EAEA,EAEA,mBACA,IACA,GACA,EACA,EACA,EACA,EACA,EACA,iBACA,uBACA,yBACA,KAEA,gBACA,cACA,OACA,SACA,cAA8B,YAC9B,6CACA,eACA,iCACA,mFACA,OACA,OACA,uEAGA,4CACA,mCAEA,uBACA,EACA,CAEA,kBACA,IACA,GACA,EACA,EACA,iBACA,QACA,OACA,kBACA,cACA,mBACA,qCAGA,mBACA,OACA,OACA,SACA,oCAGA,mEACA,uBAEA,GAKA,QACA,OACA,cACA,CACA,WACA,QACA,eACA,gBACA,gBACA,sBACA,uBACA,aACA,UACA,gBACA,SACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IACA,YACA,UACA,kBACA,iBACA,kBACA,wBACA,yBACA,eACA,gBACA,kBACA,CAEA,cACA,CACA,6BACA,MACA,gBACA,uBACA,oCACA,qBACA,eACA,kBACA,gBACA,mBACA,aASA,8IACA,SACA,QACA,UACA,YACA,qCACA,OACA,MACA,yBACA,aACA,oBACA,sBAKA,aACA,CAQA,0IACA,OACA,WACA,iDACA,OACA,QACA,eAMA,qBACA,QACA,aACA,sCACA,CAUA,yHACA,kCACA,eACA,sCAEA,iBACA,CAGA,gBACA,IAEA,GACA,EACA,EACA,EACA,IALA,OAMA,kBACA,cACA,mBACA,qCAEA,aACA,MACA,uBAIA,6BACA,eAGA,kCAGA,2CAEA,qCACA,SACA,cACA,QACA,cACA,aACA,MACA,aACA,oCACA,oBACA,SAGA,WAGA,eACA,eAGA,KACA,MACA,MACA,cAGA,qBAGA,KACA,cAEA,CAIA,KAEA,kBAAqB,EAAQ,KAC7B,uBACA,MACA,aACA,UACA,aACA,OACA,OAGA,UACA,iBACA,SAMA,6BACA,aACA,EACA,CAEA,iBACA,IACA,GACA,kBACA,cACA,OACA,GAEA,cADA,8CAGA,OACA,6CAGA,aAEA,qBACA,0CACA,mCACA,gCACA,mBACA,SACA,kCAEA,UACA,SACA,kCAEA,QAEA,gBACA,OACA,iCACA,gBACA,OACA,mBACA,iBACA,OACA,KACA,iBACA,OACA,EACA,qBACA,OACA,EACA,oBACA,mBACA,OACA,eACA,iBACA,mBACA,YACA,YACA,iBACA,mBACA,SACA,aACA,iBACA,mBACA,UACA,wBACA,YACA,kEACA,YAKA,WAEA,mCACA,mBACA,cACA,uBACA,MACA,UACA,WAEA,mBAEA,EACA,IAEA,gBACA,IAIA,GACA,EACA,IALA,SACA,gBACA,aAKA,wCACA,mBACA,uBACA,wBACA,6BACA,KACA,cAAyC,SAAQ,EACjD,QACA,cAGA,EAEA","file":"expander-collapser.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b238fc168c9eead9da79","'use strict';\nconst DateRange = require('./fcts-ext-expandercollapser');\n;(function (env, factory) {\n  if (typeof module === 'object' && module.exports) {\n    module.exports = env.document\n       ? factory(env) : function (win) {\n         if (!win.document) {\n           throw new Error('Window with document not present');\n         }\n         return factory(win, true);\n       };\n  } else {\n    env.DateRangeChooser = factory(env, true);\n  }\n})(typeof window !== 'undefined' ? window : this, function (_window, windowExists) {\n  var FC = _window.FusionCharts,\n    FusionCalendar = _window.FusionCalendar;\n  FC.register('extension', ['private', 'expander-collapser', function () {\n    var DateTimeFormatter = this.hcLib.DateTimeFormatter;\n    FC.registerComponent('extensions', 'expander-collapser', DateRange({\n      FusionCharts: FC,\n      DateTimeFormatter: DateTimeFormatter\n    }));\n  }]);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 0\n// module chunks = 0","'use strict';\nmodule.exports = function (dep) {\n  /**\n   * Class representing the DateRange.\n   */\n  class DateRange {\n\n    constructor() {\n      /**\n      * @private\n      */\n      if (typeof dep.FusionCharts === 'function') {\n        this.toolbox = dep.FusionCharts.getComponent('api', 'toolbox');\n      } else {\n        throw new Error('Unable to find FusionCharts.');\n      }\n      this.btns = {\n        contextualObj: {},\n        calculatedObj: {}\n      };\n      this.HorizontalToolbar = this.toolbox.HorizontalToolbar;\n      this.ComponentGroup = this.toolbox.ComponentGroup;\n      this.createObjectAssign();\n    }\n\n    createObjectAssign () {\n      if (typeof Object.assign !== 'function') {\n        Object.assign = function (target, varArgs) {\n          'use strict';\n          if (target == null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n          }\n\n          var to = Object(target);\n\n          for (let index = 1; index < arguments.length; index++) {\n            let nextSource = arguments[index];\n\n            if (nextSource != null) {\n              for (let nextKey in nextSource) {\n                // Avoid bugs when hasOwnProperty is shadowed\n                if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                  to[nextKey] = nextSource[nextKey];\n                }\n              }\n            }\n          }\n          return to;\n        };\n      }\n    }\n\n    createD3Buttons (store) {\n      var key,\n        inputButton,\n        text,\n        config,\n        states,\n        state,\n        btn,\n        styles = this.extData.button,\n        paper = this.graphics.paper,\n        d3 = paper.getInstances().d3,\n        self = this;\n\n      for (key in store) {\n        inputButton = store[key];\n        text = inputButton.text;\n        config = inputButton.config;\n        if (!self.btns[key]) { self.btns[key] = {}; }\n        btn = self.btns[key].btn = d3.button(text).setConfig(config);\n        btn.namespace('fusioncharts');\n        btn.appendSelector('standarperiodselector');\n        self.addCssRules(btn.getIndividualClassNames(btn.getClassName()), styles);\n        states = styles.states;\n        for (state in states) {\n          self.addCssRules(btn.getIndividualClassNames(btn.config.states[state]), styles.states[state]);\n        }\n\n        inputButton.eventListeners && btn.attachEventHandlers({\n          click: inputButton.eventListeners.click.bind(btn)\n        });\n        inputButton.group.addSymbol(btn);\n      }\n    };\n\n    createD3Labels (store) {\n      var key,\n        label,\n        text,\n        config,\n        styles = this.extData.label,\n        self = this,\n        dependencies = {\n          paper: self.graphics.paper,\n          chart: self.chart,\n          smartLabel: self.smartLabel,\n          chartContainer: self.graphics.container\n        };\n\n      for (key in store) {\n        label = store[key];\n        text = label.text;\n        config = label.config;\n        self[key] = new self.toolbox.Label(text, dependencies, config);\n        // self[key].namespace('fusioncharts');\n        // self[key].appendSelector('daterange');\n        self.addCssRules(self[key].getIndividualClassNames(self[key].getClassName()), styles);\n        label.group.addSymbol(self[key]);\n      }\n    };\n\n    /**\n     * Fusioncharts life cycle method for extension\n     */\n    init (require) {\n      var instance = this;\n      require([\n        'graphics',\n        'chart',\n        'canvasConfig',\n        'MarkerManager',\n        'reactiveModel',\n        'globalReactiveModel',\n        'spaceManagerInstance',\n        'smartLabel',\n        'extData',\n        'chartInstance',\n        function (\n              graphics,\n              chart,\n              canvasConfig,\n              markerManager,\n              reactiveModel,\n              globalReactiveModel,\n              spaceManagerInstance,\n              smartLabel,\n              extData,\n              chartInstance) {\n          instance.graphics = graphics;\n          instance.chart = chart;\n          instance.markerManager = markerManager;\n          instance.canvasConfig = canvasConfig;\n          instance.reactiveModel = reactiveModel;\n          instance.globalReactiveModel = globalReactiveModel;\n          instance.spaceManagerInstance = spaceManagerInstance;\n          instance.smartLabel = smartLabel;\n          instance.extDataUser = extData;\n          instance.chartInstance = chartInstance;\n        }\n      ]);\n      instance.extData = {\n        'disabled': false,\n        'default-select': 'ALL',\n        'all-button': true,\n        'contextual-button': true,\n        'calculated-button': true,\n        'posWrtCanvas': 'top',\n        'anchor-align': 'right',\n        'layout': 'inline',\n        'position': 'top',\n        'alignment': 'left',\n        'orientation': 'horizontal',\n        'customMultipliers': {\n          'millisecond': [1, 500],\n          'second': [1, 5, 15, 30],\n          'minute': [1, 5, 15, 30],\n          'hour': [1, 3, 6, 12],\n          'day': [1, 7, 15],\n          'month': [1, 3, 6],\n          'year': [1, 3, 5]\n        },\n        padding: 0,\n        button: {\n          height: 22,\n          radius: 1,\n          className: 'standard-period-selector',\n          container: {\n            style: {\n              fill: '#FFFFFF',\n              'stroke-width': '1px',\n              stroke: '#CED5D4',\n              labelFill: '#4b4b4b',\n              strokeWidth: '1px'\n              // 'input-shadow-fill': '#000000',\n              // 'input-shadow-opacity': 0.35,\n            }\n          },\n          text: {\n            style: {\n              'fontFamily': '\"Lucida Grande\", sans-serif',\n              'font-size': '13px',\n              'fill': '#4b4b4b',\n              'line-height': '1px',\n              'letter-spacing': '-0.04em'\n            }\n          },\n          states: {\n            hover: {\n              className: 'standard-period-selector-state-hover',\n              container: {\n                style: {\n                  cursor: 'pointer',\n                  fill: '#f7f7f7'\n                }\n              }\n            }\n          }\n        },\n        label: {\n          height: 22,\n          className: 'standard-period-selector-label',\n          text: {\n            style: {\n              'font-weight': 'bold',\n              'font-family': '\"Lucida Grande\", sans-serif',\n              'font-size': '13px',\n              'fill': '#4b4b4b'\n            }\n          }\n        }\n      };\n\n      instance.config = instance.extData;\n      Object.assign(instance.extData, instance.extDataUser);\n      instance.measurement = {};\n      (instance.toolbars = []).push(instance.createToolbar());\n\n      return instance;\n    };\n\n    // creates toolbar\n    createToolbar () {\n      var self = this,\n        buttonGroup,\n        toolbar,\n        allButton,\n        label,\n        group,\n        dependencies = {\n          paper: self.graphics.paper,\n          chart: self.chart,\n          smartLabel: self.smartLabel,\n          chartContainer: self.graphics.container\n        },\n        obj = {\n          fill: '#fff',\n          borderThickness: 0\n        };\n\n      // initiating the toolbar\n      toolbar = new self.HorizontalToolbar(dependencies);\n      toolbar.setConfig(obj);\n\n      // making group for the extension label\n      group = new self.toolbox.ComponentGroup(dependencies);\n\n      // making buttonGroup for the buttons\n      buttonGroup = new self.toolbox.UniSelectComponentGroup(dependencies);\n\n      buttonGroup.defineStateIndicator(function (symbol) {\n        var bBox = symbol.getBBox(),\n          x1 = bBox.x,\n          x2 = x1 + bBox.width,\n          y2 = bBox.y + bBox.height;\n        return {\n          type: 'path',\n          attrs: {\n            d: ['M', x1 + 1, y2 - 1.2, 'L', x2, y2 - 1.2].join(' '),\n            'stroke-width': 2,\n            stroke: '#c95a5a'\n          }\n        };\n      });\n\n      // making buttonGroup for the buttons\n      buttonGroup.setConfig(obj);\n      group.setConfig(obj);\n\n      // extension label\n      label = {\n        'ZOOM': {\n          text: 'Zoom:',\n          group: group\n        }\n      };\n      self.createD3Labels(label);\n\n      // 'ALL' button created\n      allButton = {\n        fn: function () {\n\n        }\n      };\n\n\n      self.btns = {};\n      // adding dummyButton\n      for (let i = 0; i < 10; i++) {\n        self.createD3Buttons([{\n          text: 'ALL',\n          config: {\n            toolText: 'ALL',\n            margin: {\n              right: 2,\n              left: 2\n            }\n          },\n          group: group,\n          eventListeners: {\n            'click': allButton.fn\n          }\n        }]);\n      }\n\n      // adding group and button group to toolbar\n      toolbar.addComponent(group);\n      self.toolbar = toolbar;\n      return toolbar;\n    };\n\n    addCssRules (classNames, styles) {\n      var key,\n        className,\n        paper = this.graphics.paper;\n      for (key in classNames) {\n        className = classNames[key];\n        switch (key) {\n          case 'container':\n            styles.container && paper.cssAddRule('.' + className, styles.container.style);\n            break;\n          case 'text':\n            styles.text && paper.cssAddRule('.' + className, styles.text.style);\n        }\n      }\n    };\n\n    getLogicalSpace (availableWidth, availableHeight) {\n      var logicalSpace = this.toolbars[0].getLogicalSpace(availableWidth, availableHeight);\n      this.toolbars[0].width = logicalSpace.width;\n      this.toolbars[0].height = logicalSpace.height;\n      console.log({\n        width: logicalSpace.width,\n        height: logicalSpace.height + this.config.padding\n      });\n      return {\n        width: logicalSpace.width,\n        height: logicalSpace.height + this.config.padding\n      };\n    };\n\n    placeInCanvas () {\n      var self = this;\n      self.spaceManagerInstance.add([{\n        name: function () {\n          return 'ExpanderCollapser';\n        },\n        ref: function (obj) {\n          return obj['0'];\n        },\n        self: function () {\n          return self;\n        },\n        priority: function () {\n          return 2;\n        },\n        layout: function (obj) {\n          return obj[self.config.layout];\n        },\n        orientation: [{\n          type: function (obj) {\n            return obj[self.config.orientation];\n          },\n          position: [{\n            type: function (obj) {\n              return obj[self.config.position];\n            },\n            alignment: [{\n              type: function (obj) {\n                return obj[self.config.alignment];\n              },\n              dimensions: [function () {\n                var parent = this.getParentComponentGroup();\n                return self.getLogicalSpace(parent.getWidth(), parent.getHeight());\n              }]\n            }]\n          }]\n        }]\n      }]);\n    };\n\n    setDrawingConfiguration (x, y, width, height, group) {\n      console.log(x, y, width, height)\n      var mes = this.measurement;\n      mes.x = x;\n      mes.y = y;\n      mes.width = width;\n      mes.height = height;\n\n      this.parentGroup = group;\n\n      return this;\n    };\n\n    draw (x, y, width, height, group) {\n      let self = this,\n        measurement = self.measurement,\n        toolbars = self.toolbars,\n        ln,\n        i,\n        toolbar,\n        model = self.globalReactiveModel;\n\n      x = x === undefined ? measurement.x : x;\n      y = y === undefined ? measurement.y : y;\n      width = width === undefined ? measurement.width : width;\n      height = height === undefined ? measurement.height : height;\n      group = group === undefined ? self.parentGroup : group;\n      if (width && height) {\n        for (i = 0, ln = toolbars.length; i < ln; i++) {\n          toolbar = toolbars[i];\n          toolbar.draw(x, y, group);\n        }\n      }\n    };\n  }\n  return DateRange;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/fcts-ext-expandercollapser.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}