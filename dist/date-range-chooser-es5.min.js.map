{"version":3,"sources":["webpack:///date-range-chooser-es5.min.js","webpack:///webpack/bootstrap 289ab20525abcb95ca59","webpack:///./src/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/fcts-ext-daterange.js","webpack:///./~/moment/moment.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_typeof","Symbol","iterator","obj","constructor","prototype","DateRange","window","dr","env","factory","document","win","Error","DateRangeChooser","undefined","_window","windowExists","FC","FusionCharts","register","registerComponent","webpackPolyfill","deprecate","paths","children","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","moment","dep","this","startDt","endDt","startDataset","endDataset","toolbox","getComponent","HorizontalToolbar","ComponentGroup","SymbolStore","isDrawn","startText","attr","endText","value","epoch","separator","Date","formattedDate","getUTCDate","getUTCMonth","getUTCFullYear","join","temp","dateRange","startDate","endDate","timestamp","chart","getFormattedDate","dateString","getTimestamp","configObj","calendarVisible","require","xAxis","yAxis","graphics","dataset","plotManager","canvasConfig","markerManager","reactiveModel","globalReactiveModel","spaceManagerInstance","extData","smartLabel","model","toolbars","measurement","push","createToolbar","toolbar","fromDateLabel","toDateLabel","group","fromFormattedDate","toFormattedDate","self","fromDate","toDate","format","paper","chartContainer","container","setConfig","fill","borderThickness","Label","text","style","font-size","font-family","InputTextBoxSymbol","width","height","strokeWidth","stroke","symbolStrokeWidth","radius","margin","right","btnTextStyle","fontSize","label","labelFill","setStateConfig","pressed","config","stroke-width","normal","hover","attachEventHandlers","click","fn","edit","updateVisual","textOnBlur","blur","getText","x","y","rad","w","h","padX","padY","x1","x2","y1","y2","addSymbol","addComponent","availableWidth","availableHeight","logicalSpace","ln","getLogicalSpace","Math","max","padding","add","name","ref","priority","layout","orientation","type","position","alignment","dimensions","parent","getParentComponentGroup","getWidth","getHeight","mes","parentGroup","draw","onPropsChange","start","end","get","set","startTimestamp","parseInt","absoluteStart","console","error","endTimestamp","absoluteEnd","global","hooks","hookCallback","apply","arguments","setHookCallback","callback","isArray","input","Array","toString","isObject","isObjectEmpty","k","isNumber","isDate","map","arr","res","hasOwnProp","a","b","hasOwnProperty","extend","valueOf","createUTC","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","getParsingFlags","_pf","isValid","_isValid","flags","parsedParts","some$1","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","NaN","isUndefined","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","updateInProgress","updateOffset","isMoment","absFloor","number","ceil","floor","toInt","argumentForCoercion","coercedNumber","isFinite","compareArrays","array1","array2","dontConvert","len","min","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","arg","args","slice","stack","deprecateSimple","deprecations","isFunction","Function","_config","_ordinalParseLenient","RegExp","_ordinalParse","source","mergeConfigs","parentConfig","childConfig","Locale","calendar","mom","now","output","_calendar","longDateFormat","_longDateFormat","formatUpper","toUpperCase","replace","invalidDate","_invalidDate","ordinal","_ordinal","relativeTime","withoutSuffix","string","isFuture","_relativeTime","pastFuture","diff","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","addUnitPriority","priorities","getPrioritizedUnits","unitsObj","u","sort","makeGetSet","keepTime","set$1","stringGet","stringSet","prioritized","zeroFill","targetLength","forceSign","absNumber","zerosToFill","sign","pow","substr","addFormatToken","token","padded","func","formatTokenFunctions","localeData","removeFormattingTokens","match","makeFormatFunction","array","formattingTokens","formatMoment","expandFormat","formatFunctions","replaceLongDateFormatTokens","localFormattingTokens","lastIndex","test","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","s","regexEscape","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInMonth","year","month","UTC","localeMonths","_months","isFormat","MONTHS_IN_FORMAT","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","monthsShort","months","indexOf$1","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","monthsParse","date","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","defaultMonthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","daysInYear","isLeapYear","getIsLeapYear","createDate","d","M","ms","getFullYear","setFullYear","createUTCDate","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","parseWeekday","weekdaysParse","parseIsoWeekday","localeWeekdays","_weekdays","day","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","weekdaysMin","weekdaysShort","weekdays","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","defaultWeekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","normalizeLocale","chooseLocale","names","j","next","split","loadLocale","oldLocale","locales","globalLocale","_abbr","e","code","getSetGlobalLocale","values","data","getLocale","defineLocale","baseConfig","abbr","parentLocale","localeFamilies","forEach","updateLocale","listLocales","keys$1","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","extendedIsoRegex","exec","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","configFromString","aspNetJsonRegex","createFromInputFallback","defaults","currentDateArray","nowValue","_useUTC","getMonth","getDate","configFromArray","currentDate","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","weekYear","weekdayOverflow","GG","W","E","createLocal","curWeek","gg","ISO_8601","parsedInput","skipped","stringLength","totalParsedInputLength","indexOf","_meridiem","meridiemFixWrap","hour","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","Duration","duration","years","quarters","quarter","weeks","days","seconds","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","offset","utcOffset","offsetFromString","matcher","matches","chunk","parts","chunkOffset","cloneWithOffset","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","localAdjust","matchShortOffset","_changeInProgress","addSubtract","createDuration","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","other","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","parseFloat","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","period","dur","tmp","isAdding","getCalendarFormat","myMoment","calendar$1","time","formats","sod","startOf","calendarFormat","localInput","endOf","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","delta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","toISOString","inspect","zone","prefix","datetime","suffix","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","isoWeekday","unix","toObject","toJSON","isValid$1","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfYear","parseMs","getZoneAbbr","getZoneName","createUnix","createInZone","parseZone","preParsePostFormat","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","get$2","makeGetter","substituteTimeAgo","relativeTime$1","posNegDuration","thresholds","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","withSuffix","toISOString$1","abs$1","Y","D","total","asSeconds","some","fun","t","keys","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultInvalidDate","defaultOrdinal","defaultOrdinalParse","defaultRelativeTime","future","past","mm","hh","dd","MM","yy","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","o","defaultLocaleMonths","defaultLocaleMonthsShort","parseTwoDigitYear","getSetYear","defaultLocaleWeek","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","_isPm","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","ordinalParse","meridiemParse","prototypeMin","prototypeMax","lang","isoWeekYear","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","proto","isoWeeks","isoWeeksInYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","firstDayOfYear","firstDayOfWeek","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","proto$2","toIsoString","version","invalid","relativeTimeRounding","relativeTimeThreshold"],"mappings":"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","file":"date-range-chooser-es5.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar DateRange = __webpack_require__(2);\n\t\n\twindow.dr = new DateRange();\n\t\n\t;(function (env, factory) {\n\t  if (( false ? 'undefined' : _typeof(module)) === 'object' && module.exports) {\n\t    module.exports = env.document ? factory(env) : function (win) {\n\t      if (!win.document) {\n\t        throw new Error('Window with document not present');\n\t      }\n\t      return factory(win, true);\n\t    };\n\t  } else {\n\t    env.DateRangeChooser = factory(env, true);\n\t  }\n\t})(typeof window !== 'undefined' ? window : undefined, function (_window, windowExists) {\n\t  var FC = _window.FusionCharts;\n\t  FC.register('extension', ['private', 'date-range-chooser', function () {\n\t    FC.registerComponent('extensions', 'date-range-chooser', DateRange({ FusionCharts: FC }));\n\t  }]);\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\n\t\tif(!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function() {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * @private\n\t */\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar moment = __webpack_require__(3);\n\t\n\tmodule.exports = function (dep) {\n\t  /**\n\t   * Class representing the DateRange.\n\t   */\n\t  var DateRange = function () {\n\t    function DateRange() {\n\t      _classCallCheck(this, DateRange);\n\t\n\t      /**\n\t       * @private\n\t       */\n\t      this.startDt = 0;\n\t      this.endDt = 0;\n\t      this.startDataset = 0;\n\t      this.endDataset = 0;\n\t      this.toolbox = dep.FusionCharts.getComponent('api', 'toolbox');\n\t      this.HorizontalToolbar = this.toolbox.HorizontalToolbar;\n\t      this.ComponentGroup = this.toolbox.ComponentGroup;\n\t      this.SymbolStore = this.toolbox.SymbolStore;\n\t      this.isDrawn = false;\n\t      this.startText = {\n\t        attr: function attr() {}\n\t      };\n\t      this.endText = {\n\t        attr: function attr() {}\n\t      };\n\t    }\n\t\n\t    /**\n\t     * An object representing the start and end dates.\n\t     * @type {DateRange.range}\n\t     */\n\t\n\t\n\t    _createClass(DateRange, [{\n\t      key: 'dateFormatter',\n\t      value: function dateFormatter(epoch, separator) {\n\t        epoch = new Date(epoch);\n\t        var formattedDate = [epoch.getUTCDate(), epoch.getUTCMonth() + 1, epoch.getUTCFullYear()];\n\t        formattedDate = formattedDate.join(separator);\n\t        return formattedDate;\n\t      }\n\t    }, {\n\t      key: 'swapDates',\n\t\n\t\n\t      /**\n\t       * Swaps the start date and the end date of the date range\n\t       * @private\n\t       */\n\t      value: function swapDates() {\n\t        var temp = this.dateRange.startDate;\n\t        this.dateRange.startDate = this.dateRange.endDate;\n\t        this.dateRange.endDate = temp;\n\t      }\n\t\n\t      /**\n\t       * Syncs the daterange shown by the FusionCharts time series chart and the Date Range Chooser\n\t       * @private\n\t       */\n\t\n\t    }, {\n\t      key: 'syncRange',\n\t      value: function syncRange() {}\n\t\n\t      /**\n\t       * Returns a formatted date string from FusionCharts when given a UNIX timestamp\n\t       * @param  {number} timestamp - A UNIX timestamp to be converted to a date string\n\t       * @return {string} - A date string which is equivalent to the given timestamp\n\t       */\n\t\n\t    }, {\n\t      key: 'getFormattedDate',\n\t      value: function getFormattedDate(timestamp) {\n\t        return this.chart.getFormattedDate(timestamp);\n\t      }\n\t\n\t      /**\n\t       * Returns a UNIX timestamp from FusionCharts when given a formatted date string\n\t       * @param  {string} dateString - A date string to be converted to a UNIX timestamp\n\t       * @return {number} A UNIX timestamp which is equivalent to the given date string\n\t       */\n\t\n\t    }, {\n\t      key: 'getTimestamp',\n\t      value: function getTimestamp(dateString) {\n\t        return this.chart.getTimestamp(dateString);\n\t      }\n\t\n\t      /**\n\t       * Sets the configurable options of the extension (e.g. cosmetics)\n\t       * @param {Object} configObj The configuration object containing various extension options\n\t       */\n\t\n\t    }, {\n\t      key: 'setConfig',\n\t      value: function setConfig(configObj) {}\n\t\n\t      /**\n\t       * Gets the configurable options of the extension (e.g. cosmetics)\n\t       * @return {object} configObj The configuration object containing various extension options\n\t       */\n\t\n\t    }, {\n\t      key: 'getConfig',\n\t      value: function getConfig() {\n\t        return {\n\t          calendarVisible: 'false'\n\t        };\n\t      }\n\t\n\t      /**\n\t       * Fusioncharts life cycle method for extension\n\t       */\n\t\n\t    }, {\n\t      key: 'init',\n\t      value: function init(require) {\n\t        var instance = this;\n\t        require(['xAxis', 'yAxis', 'graphics', 'chart', 'dataset', 'PlotManager', 'canvasConfig', 'MarkerManager', 'reactiveModel', 'globalReactiveModel', 'spaceManagerInstance', 'extData', 'smartLabel', function (xAxis, yAxis, graphics, chart, dataset, plotManager, canvasConfig, markerManager, reactiveModel, globalReactiveModel, spaceManagerInstance, extData, smartLabel) {\n\t          instance.extData = extData;\n\t          instance.xAxis = xAxis;\n\t          instance.yAxis = yAxis;\n\t          instance.graphics = graphics;\n\t          instance.chart = chart;\n\t          instance.dataset = dataset;\n\t          instance.plotManager = plotManager;\n\t          instance.markerManager = markerManager;\n\t          instance.canvasConfig = canvasConfig;\n\t          instance.reactiveModel = reactiveModel;\n\t          instance.globalReactiveModel = globalReactiveModel;\n\t          instance.spaceManagerInstance = spaceManagerInstance;\n\t          instance.smartLabel = smartLabel;\n\t        }]);\n\t        this.spaceManagerInstance = instance.spaceManagerInstance;\n\t        this.globalReactiveModel = instance.globalReactiveModel;\n\t        this.startDt = instance.globalReactiveModel.model['x-axis-visible-range-start'];\n\t        this.endDt = instance.globalReactiveModel.model['x-axis-visible-range-end'];\n\t        this.startDataset = instance.globalReactiveModel.model['x-axis-absolute-range-start'];\n\t        this.endDataset = instance.globalReactiveModel.model['x-axis-absolute-range-end'];\n\t        this.toolbars = [];\n\t        this.measurement = {};\n\t        this.toolbars.push(this.createToolbar());\n\t        return this;\n\t      }\n\t    }, {\n\t      key: 'createToolbar',\n\t      value: function createToolbar() {\n\t        var toolbar,\n\t            self = this,\n\t            fromDateLabel,\n\t            toDateLabel,\n\t            group,\n\t            fromFormattedDate,\n\t            toFormattedDate;\n\t\n\t        self.fromDate = {};\n\t        self.toDate = {};\n\t\n\t        fromFormattedDate = moment(this.startDt, 'x').format('DD-MM-YYYY');\n\t\n\t        toFormattedDate = moment(this.endDt, 'x').format('DD-MM-YYYY');\n\t        toolbar = new this.HorizontalToolbar({\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        });\n\t\n\t        toolbar.setConfig({\n\t          'fill': '#FFFFFF',\n\t          'borderThickness': 0\n\t        });\n\t\n\t        group = new this.toolbox.ComponentGroup({\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        });\n\t\n\t        group.setConfig({\n\t          'fill': '#FFFFFF',\n\t          'borderThickness': 0\n\t        });\n\t\n\t        fromDateLabel = new this.toolbox.Label('From:', {\n\t          smartLabel: this.smartLabel,\n\t          paper: this.graphics.paper\n\t        }, {\n\t          text: {\n\t            style: {\n\t              'font-size': '13',\n\t              'font-family': '\"Lucida Grande\", sans-serif',\n\t              // 'font-weight': 'bold',\n\t              'fill': '#4B4B4B'\n\t            }\n\t          }\n\t        });\n\t\n\t        toDateLabel = new this.toolbox.Label('To:', {\n\t          smartLabel: this.smartLabel,\n\t          paper: this.graphics.paper\n\t        }, {\n\t          text: {\n\t            style: {\n\t              'font-size': '13',\n\t              'font-family': '\"Lucida Grande\", sans-serif',\n\t              // 'font-weight': 'bold',\n\t              'fill': '#4B4B4B'\n\t            }\n\t          }\n\t        });\n\t\n\t        self.fromDate = new this.toolbox.InputTextBoxSymbol({\n\t          width: 120,\n\t          height: 22\n\t        }, {\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        }, {\n\t          'strokeWidth': 1,\n\t          'stroke': '#ced5d4',\n\t          'symbolStrokeWidth': 0,\n\t          'radius': 2,\n\t          'margin': {\n\t            'right': 22\n\t          },\n\t          'btnTextStyle': {\n\t            'font-family': '\"Lucida Grande\", sans-serif',\n\t            'fontSize': 13\n\t          },\n\t          'label': fromFormattedDate,\n\t          // 'customConfig': {\n\t          //   'errored': {\n\t          //     'hover': {\n\t          //       'fill': '#FFEFEF',\n\t          //       'stroke-width': 1,\n\t          //       'stroke': '#D25353'\n\t          //     },\n\t          //     'normal': {\n\t          //       'fill': '#FFEFEF',\n\t          //       'stroke-width': 1,\n\t          //       'stroke': '#D25353'\n\t          //     },\n\t          //     'pressed': {\n\t          //       'fill': '#FFEFEF',\n\t          //       'stroke-width': 1,\n\t          //       'stroke': '#D25353'\n\t          //     }\n\t          //   }\n\t          // },\n\t          'labelFill': '#696969'\n\t        });\n\t\n\t        self.fromDate.setStateConfig({\n\t          pressed: {\n\t            config: {\n\t              pressed: {\n\t                'fill': '#FFFFFF',\n\t                'stroke-width': 1,\n\t                'stroke': '#1E1F1F'\n\t              },\n\t              normal: {\n\t                'fill': '#FFFFFF',\n\t                'stroke-width': 1,\n\t                'stroke': '#1E1F1F'\n\t              },\n\t              hover: {\n\t                'fill': '#FFFFFF',\n\t                'stroke-width': 1,\n\t                // 'stroke': '#1E1F1F'\n\t                'stroke': '#0000FF'\n\t              }\n\t            }\n\t          }\n\t        });\n\t\n\t        self.toDate = new this.toolbox.InputTextBoxSymbol({\n\t          width: 120,\n\t          height: 22\n\t        }, {\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        }, {\n\t          'strokeWidth': 1,\n\t          'stroke': '#ced5d4',\n\t          'symbolStrokeWidth': 0,\n\t          'radius': 2,\n\t          'btnTextStyle': {\n\t            'font-family': '\"Lucida Grande\", sans-serif',\n\t            'fontSize': 13\n\t          },\n\t          'label': toFormattedDate,\n\t          // 'customConfig': {\n\t          //   'errored': {\n\t          //     'hover': {\n\t          //       'fill': '#FFEFEF',\n\t          //       'stroke-width': 1,\n\t          //       'stroke': '#D25353'\n\t          //     },\n\t          //     'normal': {\n\t          //       'fill': '#FFEFEF',\n\t          //       'stroke-width': 1,\n\t          //       'stroke': '#D25353'\n\t          //     },\n\t          //     'pressed': {\n\t          //       'fill': '#FFEFEF',\n\t          //       'stroke-width': 1,\n\t          //       'stroke': '#D25353'\n\t          //     }\n\t          //   }\n\t          // },\n\t          'labelFill': '#696969'\n\t        });\n\t\n\t        self.toDate.setStateConfig({\n\t          pressed: {\n\t            config: {\n\t              pressed: {\n\t                'fill': '#FFFFFF',\n\t                'stroke-width': 1,\n\t                'stroke': '#1E1F1F'\n\t              },\n\t              normal: {\n\t                'fill': '#FFFFFF',\n\t                'stroke-width': 1,\n\t                'stroke': '#1E1F1F'\n\t              },\n\t              hover: {\n\t                'fill': '#FFFFFF',\n\t                'stroke-width': 1,\n\t                'stroke': '#1E1F1F'\n\t              }\n\t            }\n\t          }\n\t        });\n\t\n\t        self.fromDate.attachEventHandlers({\n\t          click: {\n\t            fn: function fn() {\n\t              self.fromDate.edit();\n\t              self.fromDate.updateVisual('pressed');\n\t            }\n\t          },\n\t          textOnBlur: function textOnBlur() {\n\t            self.fromDate.blur();\n\t            self.startDate = self.fromDate.getText();\n\t            self.fromDate.updateVisual('enabled');\n\t          }\n\t        });\n\t\n\t        self.toDate.attachEventHandlers({\n\t          click: {\n\t            fn: function fn() {\n\t              self.toDate.edit();\n\t              self.toDate.updateVisual('pressed');\n\t            }\n\t          },\n\t          textOnBlur: function textOnBlur() {\n\t            self.toDate.blur();\n\t            self.endDate = self.toDate.getText();\n\t            self.toDate.updateVisual('enabled');\n\t          }\n\t        });\n\t\n\t        // Temporary. Required to render the text box correctly. Commenting this out distorts toolbox.\n\t        this.SymbolStore.register('textBoxIcon', function (x, y, rad, w, h, padX, padY) {\n\t          var x1 = x - w / 2 + padX / 2,\n\t              x2 = x + w / 2 - padX / 2,\n\t              y1 = y - h / 2 + padY / 2,\n\t              y2 = y + h / 2 - padY / 2;\n\t\n\t          return ['M', x1, y1, 'L', x2, y1, 'L', x2, y2, 'L', x1, y2, 'Z'];\n\t        });\n\t\n\t        group.addSymbol(fromDateLabel);\n\t        group.addSymbol(self.fromDate);\n\t        group.addSymbol(toDateLabel);\n\t        group.addSymbol(self.toDate);\n\t        toolbar.addComponent(group);\n\t        return toolbar;\n\t      }\n\t    }, {\n\t      key: 'getLogicalSpace',\n\t      value: function getLogicalSpace(availableWidth, availableHeight) {\n\t        var logicalSpace,\n\t            width = 0,\n\t            height = 0,\n\t            i,\n\t            ln;\n\t\n\t        availableWidth /= 2;\n\t\n\t        for (i = 0, ln = this.toolbars.length; i < ln; i++) {\n\t          logicalSpace = this.toolbars[i].getLogicalSpace(availableWidth, availableHeight);\n\t          width = Math.max(logicalSpace.width, width);\n\t          height += logicalSpace.height;\n\t          this.toolbars[i].width = logicalSpace.width;\n\t          this.toolbars[i].height = logicalSpace.height;\n\t        }\n\t        height += this.padding;\n\t        return {\n\t          width: width,\n\t          height: height\n\t        };\n\t      }\n\t    }, {\n\t      key: 'placeInCanvas',\n\t      value: function placeInCanvas() {\n\t        var _self = this;\n\t        _self.padding = 5;\n\t        _self.spaceManagerInstance.add([{\n\t          name: function name() {\n\t            return 'DateRangeChooserToolbox';\n\t          },\n\t          ref: function ref(obj) {\n\t            return obj['0'];\n\t          },\n\t          self: function self() {\n\t            return _self;\n\t          },\n\t          priority: function priority() {\n\t            return 2;\n\t          },\n\t          layout: function layout(obj) {\n\t            return obj[_self.extData.layout] || obj['inline'];\n\t          },\n\t          orientation: [{\n\t            type: function type(obj) {\n\t              return obj[_self.extData.orientation] || obj['horizontal'];\n\t            },\n\t            position: [{\n\t              type: function type(obj) {\n\t                return obj[_self.extData.position] || obj['top'];\n\t              },\n\t              alignment: [{\n\t                type: function type(obj) {\n\t                  return obj[_self.extData.alignment] || obj['right'];\n\t                },\n\t                dimensions: [function () {\n\t                  var parent = this.getParentComponentGroup();\n\t                  return _self.getLogicalSpace(parent.getWidth(), parent.getHeight());\n\t                }]\n\t              }]\n\t            }]\n\t          }]\n\t        }]);\n\t      }\n\t    }, {\n\t      key: 'setDrawingConfiguration',\n\t      value: function setDrawingConfiguration(x, y, width, height, group) {\n\t        var mes = this.measurement;\n\t        mes.x = x;\n\t        mes.y = y;\n\t        mes.width = width;\n\t        mes.height = height;\n\t\n\t        this.parentGroup = group;\n\t\n\t        return this;\n\t      }\n\t    }, {\n\t      key: 'draw',\n\t      value: function draw(x, y, width, height, group) {\n\t        var measurement = this.measurement,\n\t            toolbars = this.toolbars,\n\t            ln,\n\t            i,\n\t            toolbar,\n\t            model = this.globalReactiveModel,\n\t            self = this;\n\t\n\t        x = x === undefined ? measurement.x : x;\n\t        y = y === undefined ? measurement.y : y;\n\t        width = width === undefined ? measurement.width : width;\n\t        height = height === undefined ? measurement.height : height;\n\t        group = group === undefined ? this.parentGroup : group;\n\t        if (width && height) {\n\t          this.isDrawn = true;\n\t          for (i = 0, ln = toolbars.length; i < ln; i++) {\n\t            toolbar = toolbars[i];\n\t            toolbar.draw(x, y, group);\n\t          }\n\t          model.onPropsChange(['x-axis-visible-range-start', 'x-axis-visible-range-end'], function (start, end) {\n\t            // self.fromDate.blur(new Date(start[1]).toLocaleDateString());\n\t            // self.toDate.blur(new Date(end[1]).toLocaleDateString());\n\t            self.fromDate.blur(moment(start[1], 'x').format('DD-MM-YYYY'));\n\t            self.toDate.blur(moment(end[1], 'x').format('DD-MM-YYYY'));\n\t          });\n\t        }\n\t      }\n\t    }, {\n\t      key: 'startDate',\n\t      get: function get() {\n\t        return this.startDt;\n\t      },\n\t      set: function set(startDt) {\n\t        var startTimestamp = parseInt(moment(startDt, 'DD-MM-YYYY').format('x')),\n\t            absoluteStart = this.globalReactiveModel.model['x-axis-absolute-range-start'];\n\t        if (startTimestamp <= this.endDt && startTimestamp >= absoluteStart) {\n\t          this.startDt = startTimestamp;\n\t          this.globalReactiveModel.model['x-axis-visible-range-start'] = this.startDt;\n\t        } else {\n\t          // this.fromDate.updateVisual('errored');\n\t          console.error('From Date error state!');\n\t        }\n\t      }\n\t    }, {\n\t      key: 'endDate',\n\t      get: function get() {\n\t        return this.endDt;\n\t      },\n\t      set: function set(endDt) {\n\t        var endTimestamp = parseInt(moment(endDt, 'DD-MM-YYYY').format('x')),\n\t            absoluteEnd = this.globalReactiveModel.model['x-axis-absolute-range-end'];\n\t        if (endTimestamp >= this.startDt && endTimestamp <= absoluteEnd) {\n\t          this.endDt = endTimestamp;\n\t          this.globalReactiveModel.model['x-axis-visible-range-end'] = this.endDt;\n\t        } else {\n\t          // this.toDate.updateVisual('errored');\n\t          console.error('To Date error state!');\n\t        }\n\t      }\n\t    }]);\n\t\n\t    return DateRange;\n\t  }();\n\t\n\t  return DateRange;\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {//! moment.js\n\t//! version : 2.17.0\n\t//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n\t//! license : MIT\n\t//! momentjs.com\n\t\n\t;(function (global, factory) {\n\t     true ? module.exports = factory() :\n\t    typeof define === 'function' && define.amd ? define(factory) :\n\t    global.moment = factory()\n\t}(this, (function () { 'use strict';\n\t\n\tvar hookCallback;\n\t\n\tfunction hooks () {\n\t    return hookCallback.apply(null, arguments);\n\t}\n\t\n\t// This is done to register the method called with moment()\n\t// without creating circular dependencies.\n\tfunction setHookCallback (callback) {\n\t    hookCallback = callback;\n\t}\n\t\n\tfunction isArray(input) {\n\t    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n\t}\n\t\n\tfunction isObject(input) {\n\t    // IE8 will treat undefined and null as object if it wasn't for\n\t    // input != null\n\t    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n\t}\n\t\n\tfunction isObjectEmpty(obj) {\n\t    var k;\n\t    for (k in obj) {\n\t        // even if its not own property I'd still call it non-empty\n\t        return false;\n\t    }\n\t    return true;\n\t}\n\t\n\tfunction isNumber(input) {\n\t    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n\t}\n\t\n\tfunction isDate(input) {\n\t    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n\t}\n\t\n\tfunction map(arr, fn) {\n\t    var res = [], i;\n\t    for (i = 0; i < arr.length; ++i) {\n\t        res.push(fn(arr[i], i));\n\t    }\n\t    return res;\n\t}\n\t\n\tfunction hasOwnProp(a, b) {\n\t    return Object.prototype.hasOwnProperty.call(a, b);\n\t}\n\t\n\tfunction extend(a, b) {\n\t    for (var i in b) {\n\t        if (hasOwnProp(b, i)) {\n\t            a[i] = b[i];\n\t        }\n\t    }\n\t\n\t    if (hasOwnProp(b, 'toString')) {\n\t        a.toString = b.toString;\n\t    }\n\t\n\t    if (hasOwnProp(b, 'valueOf')) {\n\t        a.valueOf = b.valueOf;\n\t    }\n\t\n\t    return a;\n\t}\n\t\n\tfunction createUTC (input, format, locale, strict) {\n\t    return createLocalOrUTC(input, format, locale, strict, true).utc();\n\t}\n\t\n\tfunction defaultParsingFlags() {\n\t    // We need to deep clone this object.\n\t    return {\n\t        empty           : false,\n\t        unusedTokens    : [],\n\t        unusedInput     : [],\n\t        overflow        : -2,\n\t        charsLeftOver   : 0,\n\t        nullInput       : false,\n\t        invalidMonth    : null,\n\t        invalidFormat   : false,\n\t        userInvalidated : false,\n\t        iso             : false,\n\t        parsedDateParts : [],\n\t        meridiem        : null\n\t    };\n\t}\n\t\n\tfunction getParsingFlags(m) {\n\t    if (m._pf == null) {\n\t        m._pf = defaultParsingFlags();\n\t    }\n\t    return m._pf;\n\t}\n\t\n\tvar some;\n\tif (Array.prototype.some) {\n\t    some = Array.prototype.some;\n\t} else {\n\t    some = function (fun) {\n\t        var t = Object(this);\n\t        var len = t.length >>> 0;\n\t\n\t        for (var i = 0; i < len; i++) {\n\t            if (i in t && fun.call(this, t[i], i, t)) {\n\t                return true;\n\t            }\n\t        }\n\t\n\t        return false;\n\t    };\n\t}\n\t\n\tvar some$1 = some;\n\t\n\tfunction isValid(m) {\n\t    if (m._isValid == null) {\n\t        var flags = getParsingFlags(m);\n\t        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\n\t            return i != null;\n\t        });\n\t        var isNowValid = !isNaN(m._d.getTime()) &&\n\t            flags.overflow < 0 &&\n\t            !flags.empty &&\n\t            !flags.invalidMonth &&\n\t            !flags.invalidWeekday &&\n\t            !flags.nullInput &&\n\t            !flags.invalidFormat &&\n\t            !flags.userInvalidated &&\n\t            (!flags.meridiem || (flags.meridiem && parsedParts));\n\t\n\t        if (m._strict) {\n\t            isNowValid = isNowValid &&\n\t                flags.charsLeftOver === 0 &&\n\t                flags.unusedTokens.length === 0 &&\n\t                flags.bigHour === undefined;\n\t        }\n\t\n\t        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n\t            m._isValid = isNowValid;\n\t        }\n\t        else {\n\t            return isNowValid;\n\t        }\n\t    }\n\t    return m._isValid;\n\t}\n\t\n\tfunction createInvalid (flags) {\n\t    var m = createUTC(NaN);\n\t    if (flags != null) {\n\t        extend(getParsingFlags(m), flags);\n\t    }\n\t    else {\n\t        getParsingFlags(m).userInvalidated = true;\n\t    }\n\t\n\t    return m;\n\t}\n\t\n\tfunction isUndefined(input) {\n\t    return input === void 0;\n\t}\n\t\n\t// Plugins that add properties should also add the key here (null value),\n\t// so we can properly clone ourselves.\n\tvar momentProperties = hooks.momentProperties = [];\n\t\n\tfunction copyConfig(to, from) {\n\t    var i, prop, val;\n\t\n\t    if (!isUndefined(from._isAMomentObject)) {\n\t        to._isAMomentObject = from._isAMomentObject;\n\t    }\n\t    if (!isUndefined(from._i)) {\n\t        to._i = from._i;\n\t    }\n\t    if (!isUndefined(from._f)) {\n\t        to._f = from._f;\n\t    }\n\t    if (!isUndefined(from._l)) {\n\t        to._l = from._l;\n\t    }\n\t    if (!isUndefined(from._strict)) {\n\t        to._strict = from._strict;\n\t    }\n\t    if (!isUndefined(from._tzm)) {\n\t        to._tzm = from._tzm;\n\t    }\n\t    if (!isUndefined(from._isUTC)) {\n\t        to._isUTC = from._isUTC;\n\t    }\n\t    if (!isUndefined(from._offset)) {\n\t        to._offset = from._offset;\n\t    }\n\t    if (!isUndefined(from._pf)) {\n\t        to._pf = getParsingFlags(from);\n\t    }\n\t    if (!isUndefined(from._locale)) {\n\t        to._locale = from._locale;\n\t    }\n\t\n\t    if (momentProperties.length > 0) {\n\t        for (i in momentProperties) {\n\t            prop = momentProperties[i];\n\t            val = from[prop];\n\t            if (!isUndefined(val)) {\n\t                to[prop] = val;\n\t            }\n\t        }\n\t    }\n\t\n\t    return to;\n\t}\n\t\n\tvar updateInProgress = false;\n\t\n\t// Moment prototype object\n\tfunction Moment(config) {\n\t    copyConfig(this, config);\n\t    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\t    if (!this.isValid()) {\n\t        this._d = new Date(NaN);\n\t    }\n\t    // Prevent infinite loop in case updateOffset creates new moment\n\t    // objects.\n\t    if (updateInProgress === false) {\n\t        updateInProgress = true;\n\t        hooks.updateOffset(this);\n\t        updateInProgress = false;\n\t    }\n\t}\n\t\n\tfunction isMoment (obj) {\n\t    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n\t}\n\t\n\tfunction absFloor (number) {\n\t    if (number < 0) {\n\t        // -0 -> 0\n\t        return Math.ceil(number) || 0;\n\t    } else {\n\t        return Math.floor(number);\n\t    }\n\t}\n\t\n\tfunction toInt(argumentForCoercion) {\n\t    var coercedNumber = +argumentForCoercion,\n\t        value = 0;\n\t\n\t    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n\t        value = absFloor(coercedNumber);\n\t    }\n\t\n\t    return value;\n\t}\n\t\n\t// compare two arrays, return the number of differences\n\tfunction compareArrays(array1, array2, dontConvert) {\n\t    var len = Math.min(array1.length, array2.length),\n\t        lengthDiff = Math.abs(array1.length - array2.length),\n\t        diffs = 0,\n\t        i;\n\t    for (i = 0; i < len; i++) {\n\t        if ((dontConvert && array1[i] !== array2[i]) ||\n\t            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n\t            diffs++;\n\t        }\n\t    }\n\t    return diffs + lengthDiff;\n\t}\n\t\n\tfunction warn(msg) {\n\t    if (hooks.suppressDeprecationWarnings === false &&\n\t            (typeof console !==  'undefined') && console.warn) {\n\t        console.warn('Deprecation warning: ' + msg);\n\t    }\n\t}\n\t\n\tfunction deprecate(msg, fn) {\n\t    var firstTime = true;\n\t\n\t    return extend(function () {\n\t        if (hooks.deprecationHandler != null) {\n\t            hooks.deprecationHandler(null, msg);\n\t        }\n\t        if (firstTime) {\n\t            var args = [];\n\t            var arg;\n\t            for (var i = 0; i < arguments.length; i++) {\n\t                arg = '';\n\t                if (typeof arguments[i] === 'object') {\n\t                    arg += '\\n[' + i + '] ';\n\t                    for (var key in arguments[0]) {\n\t                        arg += key + ': ' + arguments[0][key] + ', ';\n\t                    }\n\t                    arg = arg.slice(0, -2); // Remove trailing comma and space\n\t                } else {\n\t                    arg = arguments[i];\n\t                }\n\t                args.push(arg);\n\t            }\n\t            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n\t            firstTime = false;\n\t        }\n\t        return fn.apply(this, arguments);\n\t    }, fn);\n\t}\n\t\n\tvar deprecations = {};\n\t\n\tfunction deprecateSimple(name, msg) {\n\t    if (hooks.deprecationHandler != null) {\n\t        hooks.deprecationHandler(name, msg);\n\t    }\n\t    if (!deprecations[name]) {\n\t        warn(msg);\n\t        deprecations[name] = true;\n\t    }\n\t}\n\t\n\thooks.suppressDeprecationWarnings = false;\n\thooks.deprecationHandler = null;\n\t\n\tfunction isFunction(input) {\n\t    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n\t}\n\t\n\tfunction set (config) {\n\t    var prop, i;\n\t    for (i in config) {\n\t        prop = config[i];\n\t        if (isFunction(prop)) {\n\t            this[i] = prop;\n\t        } else {\n\t            this['_' + i] = prop;\n\t        }\n\t    }\n\t    this._config = config;\n\t    // Lenient ordinal parsing accepts just a number in addition to\n\t    // number + (possibly) stuff coming from _ordinalParseLenient.\n\t    this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\\d{1,2}/).source);\n\t}\n\t\n\tfunction mergeConfigs(parentConfig, childConfig) {\n\t    var res = extend({}, parentConfig), prop;\n\t    for (prop in childConfig) {\n\t        if (hasOwnProp(childConfig, prop)) {\n\t            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n\t                res[prop] = {};\n\t                extend(res[prop], parentConfig[prop]);\n\t                extend(res[prop], childConfig[prop]);\n\t            } else if (childConfig[prop] != null) {\n\t                res[prop] = childConfig[prop];\n\t            } else {\n\t                delete res[prop];\n\t            }\n\t        }\n\t    }\n\t    for (prop in parentConfig) {\n\t        if (hasOwnProp(parentConfig, prop) &&\n\t                !hasOwnProp(childConfig, prop) &&\n\t                isObject(parentConfig[prop])) {\n\t            // make sure changes to properties don't modify parent config\n\t            res[prop] = extend({}, res[prop]);\n\t        }\n\t    }\n\t    return res;\n\t}\n\t\n\tfunction Locale(config) {\n\t    if (config != null) {\n\t        this.set(config);\n\t    }\n\t}\n\t\n\tvar keys;\n\t\n\tif (Object.keys) {\n\t    keys = Object.keys;\n\t} else {\n\t    keys = function (obj) {\n\t        var i, res = [];\n\t        for (i in obj) {\n\t            if (hasOwnProp(obj, i)) {\n\t                res.push(i);\n\t            }\n\t        }\n\t        return res;\n\t    };\n\t}\n\t\n\tvar keys$1 = keys;\n\t\n\tvar defaultCalendar = {\n\t    sameDay : '[Today at] LT',\n\t    nextDay : '[Tomorrow at] LT',\n\t    nextWeek : 'dddd [at] LT',\n\t    lastDay : '[Yesterday at] LT',\n\t    lastWeek : '[Last] dddd [at] LT',\n\t    sameElse : 'L'\n\t};\n\t\n\tfunction calendar (key, mom, now) {\n\t    var output = this._calendar[key] || this._calendar['sameElse'];\n\t    return isFunction(output) ? output.call(mom, now) : output;\n\t}\n\t\n\tvar defaultLongDateFormat = {\n\t    LTS  : 'h:mm:ss A',\n\t    LT   : 'h:mm A',\n\t    L    : 'MM/DD/YYYY',\n\t    LL   : 'MMMM D, YYYY',\n\t    LLL  : 'MMMM D, YYYY h:mm A',\n\t    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n\t};\n\t\n\tfunction longDateFormat (key) {\n\t    var format = this._longDateFormat[key],\n\t        formatUpper = this._longDateFormat[key.toUpperCase()];\n\t\n\t    if (format || !formatUpper) {\n\t        return format;\n\t    }\n\t\n\t    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n\t        return val.slice(1);\n\t    });\n\t\n\t    return this._longDateFormat[key];\n\t}\n\t\n\tvar defaultInvalidDate = 'Invalid date';\n\t\n\tfunction invalidDate () {\n\t    return this._invalidDate;\n\t}\n\t\n\tvar defaultOrdinal = '%d';\n\tvar defaultOrdinalParse = /\\d{1,2}/;\n\t\n\tfunction ordinal (number) {\n\t    return this._ordinal.replace('%d', number);\n\t}\n\t\n\tvar defaultRelativeTime = {\n\t    future : 'in %s',\n\t    past   : '%s ago',\n\t    s  : 'a few seconds',\n\t    m  : 'a minute',\n\t    mm : '%d minutes',\n\t    h  : 'an hour',\n\t    hh : '%d hours',\n\t    d  : 'a day',\n\t    dd : '%d days',\n\t    M  : 'a month',\n\t    MM : '%d months',\n\t    y  : 'a year',\n\t    yy : '%d years'\n\t};\n\t\n\tfunction relativeTime (number, withoutSuffix, string, isFuture) {\n\t    var output = this._relativeTime[string];\n\t    return (isFunction(output)) ?\n\t        output(number, withoutSuffix, string, isFuture) :\n\t        output.replace(/%d/i, number);\n\t}\n\t\n\tfunction pastFuture (diff, output) {\n\t    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n\t    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n\t}\n\t\n\tvar aliases = {};\n\t\n\tfunction addUnitAlias (unit, shorthand) {\n\t    var lowerCase = unit.toLowerCase();\n\t    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n\t}\n\t\n\tfunction normalizeUnits(units) {\n\t    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n\t}\n\t\n\tfunction normalizeObjectUnits(inputObject) {\n\t    var normalizedInput = {},\n\t        normalizedProp,\n\t        prop;\n\t\n\t    for (prop in inputObject) {\n\t        if (hasOwnProp(inputObject, prop)) {\n\t            normalizedProp = normalizeUnits(prop);\n\t            if (normalizedProp) {\n\t                normalizedInput[normalizedProp] = inputObject[prop];\n\t            }\n\t        }\n\t    }\n\t\n\t    return normalizedInput;\n\t}\n\t\n\tvar priorities = {};\n\t\n\tfunction addUnitPriority(unit, priority) {\n\t    priorities[unit] = priority;\n\t}\n\t\n\tfunction getPrioritizedUnits(unitsObj) {\n\t    var units = [];\n\t    for (var u in unitsObj) {\n\t        units.push({unit: u, priority: priorities[u]});\n\t    }\n\t    units.sort(function (a, b) {\n\t        return a.priority - b.priority;\n\t    });\n\t    return units;\n\t}\n\t\n\tfunction makeGetSet (unit, keepTime) {\n\t    return function (value) {\n\t        if (value != null) {\n\t            set$1(this, unit, value);\n\t            hooks.updateOffset(this, keepTime);\n\t            return this;\n\t        } else {\n\t            return get(this, unit);\n\t        }\n\t    };\n\t}\n\t\n\tfunction get (mom, unit) {\n\t    return mom.isValid() ?\n\t        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n\t}\n\t\n\tfunction set$1 (mom, unit, value) {\n\t    if (mom.isValid()) {\n\t        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n\t    }\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction stringGet (units) {\n\t    units = normalizeUnits(units);\n\t    if (isFunction(this[units])) {\n\t        return this[units]();\n\t    }\n\t    return this;\n\t}\n\t\n\t\n\tfunction stringSet (units, value) {\n\t    if (typeof units === 'object') {\n\t        units = normalizeObjectUnits(units);\n\t        var prioritized = getPrioritizedUnits(units);\n\t        for (var i = 0; i < prioritized.length; i++) {\n\t            this[prioritized[i].unit](units[prioritized[i].unit]);\n\t        }\n\t    } else {\n\t        units = normalizeUnits(units);\n\t        if (isFunction(this[units])) {\n\t            return this[units](value);\n\t        }\n\t    }\n\t    return this;\n\t}\n\t\n\tfunction zeroFill(number, targetLength, forceSign) {\n\t    var absNumber = '' + Math.abs(number),\n\t        zerosToFill = targetLength - absNumber.length,\n\t        sign = number >= 0;\n\t    return (sign ? (forceSign ? '+' : '') : '-') +\n\t        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n\t}\n\t\n\tvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\t\n\tvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\t\n\tvar formatFunctions = {};\n\t\n\tvar formatTokenFunctions = {};\n\t\n\t// token:    'M'\n\t// padded:   ['MM', 2]\n\t// ordinal:  'Mo'\n\t// callback: function () { this.month() + 1 }\n\tfunction addFormatToken (token, padded, ordinal, callback) {\n\t    var func = callback;\n\t    if (typeof callback === 'string') {\n\t        func = function () {\n\t            return this[callback]();\n\t        };\n\t    }\n\t    if (token) {\n\t        formatTokenFunctions[token] = func;\n\t    }\n\t    if (padded) {\n\t        formatTokenFunctions[padded[0]] = function () {\n\t            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n\t        };\n\t    }\n\t    if (ordinal) {\n\t        formatTokenFunctions[ordinal] = function () {\n\t            return this.localeData().ordinal(func.apply(this, arguments), token);\n\t        };\n\t    }\n\t}\n\t\n\tfunction removeFormattingTokens(input) {\n\t    if (input.match(/\\[[\\s\\S]/)) {\n\t        return input.replace(/^\\[|\\]$/g, '');\n\t    }\n\t    return input.replace(/\\\\/g, '');\n\t}\n\t\n\tfunction makeFormatFunction(format) {\n\t    var array = format.match(formattingTokens), i, length;\n\t\n\t    for (i = 0, length = array.length; i < length; i++) {\n\t        if (formatTokenFunctions[array[i]]) {\n\t            array[i] = formatTokenFunctions[array[i]];\n\t        } else {\n\t            array[i] = removeFormattingTokens(array[i]);\n\t        }\n\t    }\n\t\n\t    return function (mom) {\n\t        var output = '', i;\n\t        for (i = 0; i < length; i++) {\n\t            output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n\t        }\n\t        return output;\n\t    };\n\t}\n\t\n\t// format date using native date object\n\tfunction formatMoment(m, format) {\n\t    if (!m.isValid()) {\n\t        return m.localeData().invalidDate();\n\t    }\n\t\n\t    format = expandFormat(format, m.localeData());\n\t    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\t\n\t    return formatFunctions[format](m);\n\t}\n\t\n\tfunction expandFormat(format, locale) {\n\t    var i = 5;\n\t\n\t    function replaceLongDateFormatTokens(input) {\n\t        return locale.longDateFormat(input) || input;\n\t    }\n\t\n\t    localFormattingTokens.lastIndex = 0;\n\t    while (i >= 0 && localFormattingTokens.test(format)) {\n\t        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n\t        localFormattingTokens.lastIndex = 0;\n\t        i -= 1;\n\t    }\n\t\n\t    return format;\n\t}\n\t\n\tvar match1         = /\\d/;            //       0 - 9\n\tvar match2         = /\\d\\d/;          //      00 - 99\n\tvar match3         = /\\d{3}/;         //     000 - 999\n\tvar match4         = /\\d{4}/;         //    0000 - 9999\n\tvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n\tvar match1to2      = /\\d\\d?/;         //       0 - 99\n\tvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n\tvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\tvar match1to3      = /\\d{1,3}/;       //       0 - 999\n\tvar match1to4      = /\\d{1,4}/;       //       0 - 9999\n\tvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\t\n\tvar matchUnsigned  = /\\d+/;           //       0 - inf\n\tvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\t\n\tvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\tvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\t\n\tvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\t\n\t// any word (or two) characters or numbers including two/three word month in arabic.\n\t// includes scottish gaelic two word and hyphenated months\n\tvar matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\t\n\t\n\tvar regexes = {};\n\t\n\tfunction addRegexToken (token, regex, strictRegex) {\n\t    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n\t        return (isStrict && strictRegex) ? strictRegex : regex;\n\t    };\n\t}\n\t\n\tfunction getParseRegexForToken (token, config) {\n\t    if (!hasOwnProp(regexes, token)) {\n\t        return new RegExp(unescapeFormat(token));\n\t    }\n\t\n\t    return regexes[token](config._strict, config._locale);\n\t}\n\t\n\t// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\tfunction unescapeFormat(s) {\n\t    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n\t        return p1 || p2 || p3 || p4;\n\t    }));\n\t}\n\t\n\tfunction regexEscape(s) {\n\t    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t}\n\t\n\tvar tokens = {};\n\t\n\tfunction addParseToken (token, callback) {\n\t    var i, func = callback;\n\t    if (typeof token === 'string') {\n\t        token = [token];\n\t    }\n\t    if (isNumber(callback)) {\n\t        func = function (input, array) {\n\t            array[callback] = toInt(input);\n\t        };\n\t    }\n\t    for (i = 0; i < token.length; i++) {\n\t        tokens[token[i]] = func;\n\t    }\n\t}\n\t\n\tfunction addWeekParseToken (token, callback) {\n\t    addParseToken(token, function (input, array, config, token) {\n\t        config._w = config._w || {};\n\t        callback(input, config._w, config, token);\n\t    });\n\t}\n\t\n\tfunction addTimeToArrayFromToken(token, input, config) {\n\t    if (input != null && hasOwnProp(tokens, token)) {\n\t        tokens[token](input, config._a, config, token);\n\t    }\n\t}\n\t\n\tvar YEAR = 0;\n\tvar MONTH = 1;\n\tvar DATE = 2;\n\tvar HOUR = 3;\n\tvar MINUTE = 4;\n\tvar SECOND = 5;\n\tvar MILLISECOND = 6;\n\tvar WEEK = 7;\n\tvar WEEKDAY = 8;\n\t\n\tvar indexOf;\n\t\n\tif (Array.prototype.indexOf) {\n\t    indexOf = Array.prototype.indexOf;\n\t} else {\n\t    indexOf = function (o) {\n\t        // I know\n\t        var i;\n\t        for (i = 0; i < this.length; ++i) {\n\t            if (this[i] === o) {\n\t                return i;\n\t            }\n\t        }\n\t        return -1;\n\t    };\n\t}\n\t\n\tvar indexOf$1 = indexOf;\n\t\n\tfunction daysInMonth(year, month) {\n\t    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('M', ['MM', 2], 'Mo', function () {\n\t    return this.month() + 1;\n\t});\n\t\n\taddFormatToken('MMM', 0, 0, function (format) {\n\t    return this.localeData().monthsShort(this, format);\n\t});\n\t\n\taddFormatToken('MMMM', 0, 0, function (format) {\n\t    return this.localeData().months(this, format);\n\t});\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('month', 'M');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('month', 8);\n\t\n\t// PARSING\n\t\n\taddRegexToken('M',    match1to2);\n\taddRegexToken('MM',   match1to2, match2);\n\taddRegexToken('MMM',  function (isStrict, locale) {\n\t    return locale.monthsShortRegex(isStrict);\n\t});\n\taddRegexToken('MMMM', function (isStrict, locale) {\n\t    return locale.monthsRegex(isStrict);\n\t});\n\t\n\taddParseToken(['M', 'MM'], function (input, array) {\n\t    array[MONTH] = toInt(input) - 1;\n\t});\n\t\n\taddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n\t    var month = config._locale.monthsParse(input, token, config._strict);\n\t    // if we didn't find a month name, mark the date as invalid.\n\t    if (month != null) {\n\t        array[MONTH] = month;\n\t    } else {\n\t        getParsingFlags(config).invalidMonth = input;\n\t    }\n\t});\n\t\n\t// LOCALES\n\t\n\tvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n\tvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\tfunction localeMonths (m, format) {\n\t    if (!m) {\n\t        return this._months;\n\t    }\n\t    return isArray(this._months) ? this._months[m.month()] :\n\t        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n\t}\n\t\n\tvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\tfunction localeMonthsShort (m, format) {\n\t    if (!m) {\n\t        return this._monthsShort;\n\t    }\n\t    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n\t        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n\t}\n\t\n\tfunction handleStrictParse(monthName, format, strict) {\n\t    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n\t    if (!this._monthsParse) {\n\t        // this is not used\n\t        this._monthsParse = [];\n\t        this._longMonthsParse = [];\n\t        this._shortMonthsParse = [];\n\t        for (i = 0; i < 12; ++i) {\n\t            mom = createUTC([2000, i]);\n\t            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n\t            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n\t        }\n\t    }\n\t\n\t    if (strict) {\n\t        if (format === 'MMM') {\n\t            ii = indexOf$1.call(this._shortMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._longMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    } else {\n\t        if (format === 'MMM') {\n\t            ii = indexOf$1.call(this._shortMonthsParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._longMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._longMonthsParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._shortMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    }\n\t}\n\t\n\tfunction localeMonthsParse (monthName, format, strict) {\n\t    var i, mom, regex;\n\t\n\t    if (this._monthsParseExact) {\n\t        return handleStrictParse.call(this, monthName, format, strict);\n\t    }\n\t\n\t    if (!this._monthsParse) {\n\t        this._monthsParse = [];\n\t        this._longMonthsParse = [];\n\t        this._shortMonthsParse = [];\n\t    }\n\t\n\t    // TODO: add sorting\n\t    // Sorting makes sure if one month (or abbr) is a prefix of another\n\t    // see sorting in computeMonthsParse\n\t    for (i = 0; i < 12; i++) {\n\t        // make the regex if we don't have it already\n\t        mom = createUTC([2000, i]);\n\t        if (strict && !this._longMonthsParse[i]) {\n\t            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n\t            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n\t        }\n\t        if (!strict && !this._monthsParse[i]) {\n\t            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n\t            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t        }\n\t        // test the regex\n\t        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n\t            return i;\n\t        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n\t            return i;\n\t        } else if (!strict && this._monthsParse[i].test(monthName)) {\n\t            return i;\n\t        }\n\t    }\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction setMonth (mom, value) {\n\t    var dayOfMonth;\n\t\n\t    if (!mom.isValid()) {\n\t        // No op\n\t        return mom;\n\t    }\n\t\n\t    if (typeof value === 'string') {\n\t        if (/^\\d+$/.test(value)) {\n\t            value = toInt(value);\n\t        } else {\n\t            value = mom.localeData().monthsParse(value);\n\t            // TODO: Another silent failure?\n\t            if (!isNumber(value)) {\n\t                return mom;\n\t            }\n\t        }\n\t    }\n\t\n\t    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\t    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\t    return mom;\n\t}\n\t\n\tfunction getSetMonth (value) {\n\t    if (value != null) {\n\t        setMonth(this, value);\n\t        hooks.updateOffset(this, true);\n\t        return this;\n\t    } else {\n\t        return get(this, 'Month');\n\t    }\n\t}\n\t\n\tfunction getDaysInMonth () {\n\t    return daysInMonth(this.year(), this.month());\n\t}\n\t\n\tvar defaultMonthsShortRegex = matchWord;\n\tfunction monthsShortRegex (isStrict) {\n\t    if (this._monthsParseExact) {\n\t        if (!hasOwnProp(this, '_monthsRegex')) {\n\t            computeMonthsParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._monthsShortStrictRegex;\n\t        } else {\n\t            return this._monthsShortRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_monthsShortRegex')) {\n\t            this._monthsShortRegex = defaultMonthsShortRegex;\n\t        }\n\t        return this._monthsShortStrictRegex && isStrict ?\n\t            this._monthsShortStrictRegex : this._monthsShortRegex;\n\t    }\n\t}\n\t\n\tvar defaultMonthsRegex = matchWord;\n\tfunction monthsRegex (isStrict) {\n\t    if (this._monthsParseExact) {\n\t        if (!hasOwnProp(this, '_monthsRegex')) {\n\t            computeMonthsParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._monthsStrictRegex;\n\t        } else {\n\t            return this._monthsRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_monthsRegex')) {\n\t            this._monthsRegex = defaultMonthsRegex;\n\t        }\n\t        return this._monthsStrictRegex && isStrict ?\n\t            this._monthsStrictRegex : this._monthsRegex;\n\t    }\n\t}\n\t\n\tfunction computeMonthsParse () {\n\t    function cmpLenRev(a, b) {\n\t        return b.length - a.length;\n\t    }\n\t\n\t    var shortPieces = [], longPieces = [], mixedPieces = [],\n\t        i, mom;\n\t    for (i = 0; i < 12; i++) {\n\t        // make the regex if we don't have it already\n\t        mom = createUTC([2000, i]);\n\t        shortPieces.push(this.monthsShort(mom, ''));\n\t        longPieces.push(this.months(mom, ''));\n\t        mixedPieces.push(this.months(mom, ''));\n\t        mixedPieces.push(this.monthsShort(mom, ''));\n\t    }\n\t    // Sorting makes sure if one month (or abbr) is a prefix of another it\n\t    // will match the longer piece.\n\t    shortPieces.sort(cmpLenRev);\n\t    longPieces.sort(cmpLenRev);\n\t    mixedPieces.sort(cmpLenRev);\n\t    for (i = 0; i < 12; i++) {\n\t        shortPieces[i] = regexEscape(shortPieces[i]);\n\t        longPieces[i] = regexEscape(longPieces[i]);\n\t    }\n\t    for (i = 0; i < 24; i++) {\n\t        mixedPieces[i] = regexEscape(mixedPieces[i]);\n\t    }\n\t\n\t    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n\t    this._monthsShortRegex = this._monthsRegex;\n\t    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n\t    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('Y', 0, 0, function () {\n\t    var y = this.year();\n\t    return y <= 9999 ? '' + y : '+' + y;\n\t});\n\t\n\taddFormatToken(0, ['YY', 2], 0, function () {\n\t    return this.year() % 100;\n\t});\n\t\n\taddFormatToken(0, ['YYYY',   4],       0, 'year');\n\taddFormatToken(0, ['YYYYY',  5],       0, 'year');\n\taddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('year', 'y');\n\t\n\t// PRIORITIES\n\t\n\taddUnitPriority('year', 1);\n\t\n\t// PARSING\n\t\n\taddRegexToken('Y',      matchSigned);\n\taddRegexToken('YY',     match1to2, match2);\n\taddRegexToken('YYYY',   match1to4, match4);\n\taddRegexToken('YYYYY',  match1to6, match6);\n\taddRegexToken('YYYYYY', match1to6, match6);\n\t\n\taddParseToken(['YYYYY', 'YYYYYY'], YEAR);\n\taddParseToken('YYYY', function (input, array) {\n\t    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n\t});\n\taddParseToken('YY', function (input, array) {\n\t    array[YEAR] = hooks.parseTwoDigitYear(input);\n\t});\n\taddParseToken('Y', function (input, array) {\n\t    array[YEAR] = parseInt(input, 10);\n\t});\n\t\n\t// HELPERS\n\t\n\tfunction daysInYear(year) {\n\t    return isLeapYear(year) ? 366 : 365;\n\t}\n\t\n\tfunction isLeapYear(year) {\n\t    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n\t}\n\t\n\t// HOOKS\n\t\n\thooks.parseTwoDigitYear = function (input) {\n\t    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n\t};\n\t\n\t// MOMENTS\n\t\n\tvar getSetYear = makeGetSet('FullYear', true);\n\t\n\tfunction getIsLeapYear () {\n\t    return isLeapYear(this.year());\n\t}\n\t\n\tfunction createDate (y, m, d, h, M, s, ms) {\n\t    //can't just apply() to create a date:\n\t    //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n\t    var date = new Date(y, m, d, h, M, s, ms);\n\t\n\t    //the date constructor remaps years 0-99 to 1900-1999\n\t    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n\t        date.setFullYear(y);\n\t    }\n\t    return date;\n\t}\n\t\n\tfunction createUTCDate (y) {\n\t    var date = new Date(Date.UTC.apply(null, arguments));\n\t\n\t    //the Date.UTC function remaps years 0-99 to 1900-1999\n\t    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n\t        date.setUTCFullYear(y);\n\t    }\n\t    return date;\n\t}\n\t\n\t// start-of-first-week - start-of-year\n\tfunction firstWeekOffset(year, dow, doy) {\n\t    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n\t        fwd = 7 + dow - doy,\n\t        // first-week day local weekday -- which local weekday is fwd\n\t        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\t\n\t    return -fwdlw + fwd - 1;\n\t}\n\t\n\t//http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\tfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n\t    var localWeekday = (7 + weekday - dow) % 7,\n\t        weekOffset = firstWeekOffset(year, dow, doy),\n\t        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n\t        resYear, resDayOfYear;\n\t\n\t    if (dayOfYear <= 0) {\n\t        resYear = year - 1;\n\t        resDayOfYear = daysInYear(resYear) + dayOfYear;\n\t    } else if (dayOfYear > daysInYear(year)) {\n\t        resYear = year + 1;\n\t        resDayOfYear = dayOfYear - daysInYear(year);\n\t    } else {\n\t        resYear = year;\n\t        resDayOfYear = dayOfYear;\n\t    }\n\t\n\t    return {\n\t        year: resYear,\n\t        dayOfYear: resDayOfYear\n\t    };\n\t}\n\t\n\tfunction weekOfYear(mom, dow, doy) {\n\t    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n\t        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n\t        resWeek, resYear;\n\t\n\t    if (week < 1) {\n\t        resYear = mom.year() - 1;\n\t        resWeek = week + weeksInYear(resYear, dow, doy);\n\t    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n\t        resWeek = week - weeksInYear(mom.year(), dow, doy);\n\t        resYear = mom.year() + 1;\n\t    } else {\n\t        resYear = mom.year();\n\t        resWeek = week;\n\t    }\n\t\n\t    return {\n\t        week: resWeek,\n\t        year: resYear\n\t    };\n\t}\n\t\n\tfunction weeksInYear(year, dow, doy) {\n\t    var weekOffset = firstWeekOffset(year, dow, doy),\n\t        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n\t    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('w', ['ww', 2], 'wo', 'week');\n\taddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('week', 'w');\n\taddUnitAlias('isoWeek', 'W');\n\t\n\t// PRIORITIES\n\t\n\taddUnitPriority('week', 5);\n\taddUnitPriority('isoWeek', 5);\n\t\n\t// PARSING\n\t\n\taddRegexToken('w',  match1to2);\n\taddRegexToken('ww', match1to2, match2);\n\taddRegexToken('W',  match1to2);\n\taddRegexToken('WW', match1to2, match2);\n\t\n\taddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n\t    week[token.substr(0, 1)] = toInt(input);\n\t});\n\t\n\t// HELPERS\n\t\n\t// LOCALES\n\t\n\tfunction localeWeek (mom) {\n\t    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n\t}\n\t\n\tvar defaultLocaleWeek = {\n\t    dow : 0, // Sunday is the first day of the week.\n\t    doy : 6  // The week that contains Jan 1st is the first week of the year.\n\t};\n\t\n\tfunction localeFirstDayOfWeek () {\n\t    return this._week.dow;\n\t}\n\t\n\tfunction localeFirstDayOfYear () {\n\t    return this._week.doy;\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction getSetWeek (input) {\n\t    var week = this.localeData().week(this);\n\t    return input == null ? week : this.add((input - week) * 7, 'd');\n\t}\n\t\n\tfunction getSetISOWeek (input) {\n\t    var week = weekOfYear(this, 1, 4).week;\n\t    return input == null ? week : this.add((input - week) * 7, 'd');\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('d', 0, 'do', 'day');\n\t\n\taddFormatToken('dd', 0, 0, function (format) {\n\t    return this.localeData().weekdaysMin(this, format);\n\t});\n\t\n\taddFormatToken('ddd', 0, 0, function (format) {\n\t    return this.localeData().weekdaysShort(this, format);\n\t});\n\t\n\taddFormatToken('dddd', 0, 0, function (format) {\n\t    return this.localeData().weekdays(this, format);\n\t});\n\t\n\taddFormatToken('e', 0, 0, 'weekday');\n\taddFormatToken('E', 0, 0, 'isoWeekday');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('day', 'd');\n\taddUnitAlias('weekday', 'e');\n\taddUnitAlias('isoWeekday', 'E');\n\t\n\t// PRIORITY\n\taddUnitPriority('day', 11);\n\taddUnitPriority('weekday', 11);\n\taddUnitPriority('isoWeekday', 11);\n\t\n\t// PARSING\n\t\n\taddRegexToken('d',    match1to2);\n\taddRegexToken('e',    match1to2);\n\taddRegexToken('E',    match1to2);\n\taddRegexToken('dd',   function (isStrict, locale) {\n\t    return locale.weekdaysMinRegex(isStrict);\n\t});\n\taddRegexToken('ddd',   function (isStrict, locale) {\n\t    return locale.weekdaysShortRegex(isStrict);\n\t});\n\taddRegexToken('dddd',   function (isStrict, locale) {\n\t    return locale.weekdaysRegex(isStrict);\n\t});\n\t\n\taddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n\t    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n\t    // if we didn't get a weekday name, mark the date as invalid\n\t    if (weekday != null) {\n\t        week.d = weekday;\n\t    } else {\n\t        getParsingFlags(config).invalidWeekday = input;\n\t    }\n\t});\n\t\n\taddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n\t    week[token] = toInt(input);\n\t});\n\t\n\t// HELPERS\n\t\n\tfunction parseWeekday(input, locale) {\n\t    if (typeof input !== 'string') {\n\t        return input;\n\t    }\n\t\n\t    if (!isNaN(input)) {\n\t        return parseInt(input, 10);\n\t    }\n\t\n\t    input = locale.weekdaysParse(input);\n\t    if (typeof input === 'number') {\n\t        return input;\n\t    }\n\t\n\t    return null;\n\t}\n\t\n\tfunction parseIsoWeekday(input, locale) {\n\t    if (typeof input === 'string') {\n\t        return locale.weekdaysParse(input) % 7 || 7;\n\t    }\n\t    return isNaN(input) ? null : input;\n\t}\n\t\n\t// LOCALES\n\t\n\tvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\tfunction localeWeekdays (m, format) {\n\t    if (!m) {\n\t        return this._weekdays;\n\t    }\n\t    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n\t        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n\t}\n\t\n\tvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\tfunction localeWeekdaysShort (m) {\n\t    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n\t}\n\t\n\tvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\tfunction localeWeekdaysMin (m) {\n\t    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n\t}\n\t\n\tfunction handleStrictParse$1(weekdayName, format, strict) {\n\t    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n\t    if (!this._weekdaysParse) {\n\t        this._weekdaysParse = [];\n\t        this._shortWeekdaysParse = [];\n\t        this._minWeekdaysParse = [];\n\t\n\t        for (i = 0; i < 7; ++i) {\n\t            mom = createUTC([2000, 1]).day(i);\n\t            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n\t            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n\t            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n\t        }\n\t    }\n\t\n\t    if (strict) {\n\t        if (format === 'dddd') {\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else if (format === 'ddd') {\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    } else {\n\t        if (format === 'dddd') {\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else if (format === 'ddd') {\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    }\n\t}\n\t\n\tfunction localeWeekdaysParse (weekdayName, format, strict) {\n\t    var i, mom, regex;\n\t\n\t    if (this._weekdaysParseExact) {\n\t        return handleStrictParse$1.call(this, weekdayName, format, strict);\n\t    }\n\t\n\t    if (!this._weekdaysParse) {\n\t        this._weekdaysParse = [];\n\t        this._minWeekdaysParse = [];\n\t        this._shortWeekdaysParse = [];\n\t        this._fullWeekdaysParse = [];\n\t    }\n\t\n\t    for (i = 0; i < 7; i++) {\n\t        // make the regex if we don't have it already\n\t\n\t        mom = createUTC([2000, 1]).day(i);\n\t        if (strict && !this._fullWeekdaysParse[i]) {\n\t            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n\t            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n\t            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n\t        }\n\t        if (!this._weekdaysParse[i]) {\n\t            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n\t            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t        }\n\t        // test the regex\n\t        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        }\n\t    }\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction getSetDayOfWeek (input) {\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\t    if (input != null) {\n\t        input = parseWeekday(input, this.localeData());\n\t        return this.add(input - day, 'd');\n\t    } else {\n\t        return day;\n\t    }\n\t}\n\t\n\tfunction getSetLocaleDayOfWeek (input) {\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n\t    return input == null ? weekday : this.add(input - weekday, 'd');\n\t}\n\t\n\tfunction getSetISODayOfWeek (input) {\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t\n\t    // behaves the same as moment#day except\n\t    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n\t    // as a setter, sunday should belong to the previous week.\n\t\n\t    if (input != null) {\n\t        var weekday = parseIsoWeekday(input, this.localeData());\n\t        return this.day(this.day() % 7 ? weekday : weekday - 7);\n\t    } else {\n\t        return this.day() || 7;\n\t    }\n\t}\n\t\n\tvar defaultWeekdaysRegex = matchWord;\n\tfunction weekdaysRegex (isStrict) {\n\t    if (this._weekdaysParseExact) {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            computeWeekdaysParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._weekdaysStrictRegex;\n\t        } else {\n\t            return this._weekdaysRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            this._weekdaysRegex = defaultWeekdaysRegex;\n\t        }\n\t        return this._weekdaysStrictRegex && isStrict ?\n\t            this._weekdaysStrictRegex : this._weekdaysRegex;\n\t    }\n\t}\n\t\n\tvar defaultWeekdaysShortRegex = matchWord;\n\tfunction weekdaysShortRegex (isStrict) {\n\t    if (this._weekdaysParseExact) {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            computeWeekdaysParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._weekdaysShortStrictRegex;\n\t        } else {\n\t            return this._weekdaysShortRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n\t            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n\t        }\n\t        return this._weekdaysShortStrictRegex && isStrict ?\n\t            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n\t    }\n\t}\n\t\n\tvar defaultWeekdaysMinRegex = matchWord;\n\tfunction weekdaysMinRegex (isStrict) {\n\t    if (this._weekdaysParseExact) {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            computeWeekdaysParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._weekdaysMinStrictRegex;\n\t        } else {\n\t            return this._weekdaysMinRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n\t            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n\t        }\n\t        return this._weekdaysMinStrictRegex && isStrict ?\n\t            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n\t    }\n\t}\n\t\n\t\n\tfunction computeWeekdaysParse () {\n\t    function cmpLenRev(a, b) {\n\t        return b.length - a.length;\n\t    }\n\t\n\t    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n\t        i, mom, minp, shortp, longp;\n\t    for (i = 0; i < 7; i++) {\n\t        // make the regex if we don't have it already\n\t        mom = createUTC([2000, 1]).day(i);\n\t        minp = this.weekdaysMin(mom, '');\n\t        shortp = this.weekdaysShort(mom, '');\n\t        longp = this.weekdays(mom, '');\n\t        minPieces.push(minp);\n\t        shortPieces.push(shortp);\n\t        longPieces.push(longp);\n\t        mixedPieces.push(minp);\n\t        mixedPieces.push(shortp);\n\t        mixedPieces.push(longp);\n\t    }\n\t    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n\t    // will match the longer piece.\n\t    minPieces.sort(cmpLenRev);\n\t    shortPieces.sort(cmpLenRev);\n\t    longPieces.sort(cmpLenRev);\n\t    mixedPieces.sort(cmpLenRev);\n\t    for (i = 0; i < 7; i++) {\n\t        shortPieces[i] = regexEscape(shortPieces[i]);\n\t        longPieces[i] = regexEscape(longPieces[i]);\n\t        mixedPieces[i] = regexEscape(mixedPieces[i]);\n\t    }\n\t\n\t    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n\t    this._weekdaysShortRegex = this._weekdaysRegex;\n\t    this._weekdaysMinRegex = this._weekdaysRegex;\n\t\n\t    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n\t    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n\t    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n\t}\n\t\n\t// FORMATTING\n\t\n\tfunction hFormat() {\n\t    return this.hours() % 12 || 12;\n\t}\n\t\n\tfunction kFormat() {\n\t    return this.hours() || 24;\n\t}\n\t\n\taddFormatToken('H', ['HH', 2], 0, 'hour');\n\taddFormatToken('h', ['hh', 2], 0, hFormat);\n\taddFormatToken('k', ['kk', 2], 0, kFormat);\n\t\n\taddFormatToken('hmm', 0, 0, function () {\n\t    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n\t});\n\t\n\taddFormatToken('hmmss', 0, 0, function () {\n\t    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n\t        zeroFill(this.seconds(), 2);\n\t});\n\t\n\taddFormatToken('Hmm', 0, 0, function () {\n\t    return '' + this.hours() + zeroFill(this.minutes(), 2);\n\t});\n\t\n\taddFormatToken('Hmmss', 0, 0, function () {\n\t    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n\t        zeroFill(this.seconds(), 2);\n\t});\n\t\n\tfunction meridiem (token, lowercase) {\n\t    addFormatToken(token, 0, 0, function () {\n\t        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n\t    });\n\t}\n\t\n\tmeridiem('a', true);\n\tmeridiem('A', false);\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('hour', 'h');\n\t\n\t// PRIORITY\n\taddUnitPriority('hour', 13);\n\t\n\t// PARSING\n\t\n\tfunction matchMeridiem (isStrict, locale) {\n\t    return locale._meridiemParse;\n\t}\n\t\n\taddRegexToken('a',  matchMeridiem);\n\taddRegexToken('A',  matchMeridiem);\n\taddRegexToken('H',  match1to2);\n\taddRegexToken('h',  match1to2);\n\taddRegexToken('HH', match1to2, match2);\n\taddRegexToken('hh', match1to2, match2);\n\t\n\taddRegexToken('hmm', match3to4);\n\taddRegexToken('hmmss', match5to6);\n\taddRegexToken('Hmm', match3to4);\n\taddRegexToken('Hmmss', match5to6);\n\t\n\taddParseToken(['H', 'HH'], HOUR);\n\taddParseToken(['a', 'A'], function (input, array, config) {\n\t    config._isPm = config._locale.isPM(input);\n\t    config._meridiem = input;\n\t});\n\taddParseToken(['h', 'hh'], function (input, array, config) {\n\t    array[HOUR] = toInt(input);\n\t    getParsingFlags(config).bigHour = true;\n\t});\n\taddParseToken('hmm', function (input, array, config) {\n\t    var pos = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos));\n\t    array[MINUTE] = toInt(input.substr(pos));\n\t    getParsingFlags(config).bigHour = true;\n\t});\n\taddParseToken('hmmss', function (input, array, config) {\n\t    var pos1 = input.length - 4;\n\t    var pos2 = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos1));\n\t    array[MINUTE] = toInt(input.substr(pos1, 2));\n\t    array[SECOND] = toInt(input.substr(pos2));\n\t    getParsingFlags(config).bigHour = true;\n\t});\n\taddParseToken('Hmm', function (input, array, config) {\n\t    var pos = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos));\n\t    array[MINUTE] = toInt(input.substr(pos));\n\t});\n\taddParseToken('Hmmss', function (input, array, config) {\n\t    var pos1 = input.length - 4;\n\t    var pos2 = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos1));\n\t    array[MINUTE] = toInt(input.substr(pos1, 2));\n\t    array[SECOND] = toInt(input.substr(pos2));\n\t});\n\t\n\t// LOCALES\n\t\n\tfunction localeIsPM (input) {\n\t    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n\t    // Using charAt should be more compatible.\n\t    return ((input + '').toLowerCase().charAt(0) === 'p');\n\t}\n\t\n\tvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\tfunction localeMeridiem (hours, minutes, isLower) {\n\t    if (hours > 11) {\n\t        return isLower ? 'pm' : 'PM';\n\t    } else {\n\t        return isLower ? 'am' : 'AM';\n\t    }\n\t}\n\t\n\t\n\t// MOMENTS\n\t\n\t// Setting the hour should keep the time, because the user explicitly\n\t// specified which hour he wants. So trying to maintain the same hour (in\n\t// a new timezone) makes sense. Adding/subtracting hours does not follow\n\t// this rule.\n\tvar getSetHour = makeGetSet('Hours', true);\n\t\n\t// months\n\t// week\n\t// weekdays\n\t// meridiem\n\tvar baseConfig = {\n\t    calendar: defaultCalendar,\n\t    longDateFormat: defaultLongDateFormat,\n\t    invalidDate: defaultInvalidDate,\n\t    ordinal: defaultOrdinal,\n\t    ordinalParse: defaultOrdinalParse,\n\t    relativeTime: defaultRelativeTime,\n\t\n\t    months: defaultLocaleMonths,\n\t    monthsShort: defaultLocaleMonthsShort,\n\t\n\t    week: defaultLocaleWeek,\n\t\n\t    weekdays: defaultLocaleWeekdays,\n\t    weekdaysMin: defaultLocaleWeekdaysMin,\n\t    weekdaysShort: defaultLocaleWeekdaysShort,\n\t\n\t    meridiemParse: defaultLocaleMeridiemParse\n\t};\n\t\n\t// internal storage for locale config files\n\tvar locales = {};\n\tvar localeFamilies = {};\n\tvar globalLocale;\n\t\n\tfunction normalizeLocale(key) {\n\t    return key ? key.toLowerCase().replace('_', '-') : key;\n\t}\n\t\n\t// pick the locale from the array\n\t// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n\t// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\tfunction chooseLocale(names) {\n\t    var i = 0, j, next, locale, split;\n\t\n\t    while (i < names.length) {\n\t        split = normalizeLocale(names[i]).split('-');\n\t        j = split.length;\n\t        next = normalizeLocale(names[i + 1]);\n\t        next = next ? next.split('-') : null;\n\t        while (j > 0) {\n\t            locale = loadLocale(split.slice(0, j).join('-'));\n\t            if (locale) {\n\t                return locale;\n\t            }\n\t            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n\t                //the next array item is better than a shallower substring of this one\n\t                break;\n\t            }\n\t            j--;\n\t        }\n\t        i++;\n\t    }\n\t    return null;\n\t}\n\t\n\tfunction loadLocale(name) {\n\t    var oldLocale = null;\n\t    // TODO: Find a better way to register and load all the locales in Node\n\t    if (!locales[name] && (typeof module !== 'undefined') &&\n\t            module && module.exports) {\n\t        try {\n\t            oldLocale = globalLocale._abbr;\n\t            !(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"./locale\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n\t            // because defineLocale currently also sets the global locale, we\n\t            // want to undo that for lazy loaded locales\n\t            getSetGlobalLocale(oldLocale);\n\t        } catch (e) { }\n\t    }\n\t    return locales[name];\n\t}\n\t\n\t// This function will load locale and then set the global locale.  If\n\t// no arguments are passed in, it will simply return the current global\n\t// locale key.\n\tfunction getSetGlobalLocale (key, values) {\n\t    var data;\n\t    if (key) {\n\t        if (isUndefined(values)) {\n\t            data = getLocale(key);\n\t        }\n\t        else {\n\t            data = defineLocale(key, values);\n\t        }\n\t\n\t        if (data) {\n\t            // moment.duration._locale = moment._locale = data;\n\t            globalLocale = data;\n\t        }\n\t    }\n\t\n\t    return globalLocale._abbr;\n\t}\n\t\n\tfunction defineLocale (name, config) {\n\t    if (config !== null) {\n\t        var parentConfig = baseConfig;\n\t        config.abbr = name;\n\t        if (locales[name] != null) {\n\t            deprecateSimple('defineLocaleOverride',\n\t                    'use moment.updateLocale(localeName, config) to change ' +\n\t                    'an existing locale. moment.defineLocale(localeName, ' +\n\t                    'config) should only be used for creating a new locale ' +\n\t                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n\t            parentConfig = locales[name]._config;\n\t        } else if (config.parentLocale != null) {\n\t            if (locales[config.parentLocale] != null) {\n\t                parentConfig = locales[config.parentLocale]._config;\n\t            } else {\n\t                if (!localeFamilies[config.parentLocale]) {\n\t                    localeFamilies[config.parentLocale] = [];\n\t                }\n\t                localeFamilies[config.parentLocale].push({\n\t                    name: name,\n\t                    config: config\n\t                });\n\t                return null;\n\t            }\n\t        }\n\t        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\t\n\t        if (localeFamilies[name]) {\n\t            localeFamilies[name].forEach(function (x) {\n\t                defineLocale(x.name, x.config);\n\t            });\n\t        }\n\t\n\t        // backwards compat for now: also set the locale\n\t        // make sure we set the locale AFTER all child locales have been\n\t        // created, so we won't end up with the child locale set.\n\t        getSetGlobalLocale(name);\n\t\n\t\n\t        return locales[name];\n\t    } else {\n\t        // useful for testing\n\t        delete locales[name];\n\t        return null;\n\t    }\n\t}\n\t\n\tfunction updateLocale(name, config) {\n\t    if (config != null) {\n\t        var locale, parentConfig = baseConfig;\n\t        // MERGE\n\t        if (locales[name] != null) {\n\t            parentConfig = locales[name]._config;\n\t        }\n\t        config = mergeConfigs(parentConfig, config);\n\t        locale = new Locale(config);\n\t        locale.parentLocale = locales[name];\n\t        locales[name] = locale;\n\t\n\t        // backwards compat for now: also set the locale\n\t        getSetGlobalLocale(name);\n\t    } else {\n\t        // pass null for config to unupdate, useful for tests\n\t        if (locales[name] != null) {\n\t            if (locales[name].parentLocale != null) {\n\t                locales[name] = locales[name].parentLocale;\n\t            } else if (locales[name] != null) {\n\t                delete locales[name];\n\t            }\n\t        }\n\t    }\n\t    return locales[name];\n\t}\n\t\n\t// returns locale data\n\tfunction getLocale (key) {\n\t    var locale;\n\t\n\t    if (key && key._locale && key._locale._abbr) {\n\t        key = key._locale._abbr;\n\t    }\n\t\n\t    if (!key) {\n\t        return globalLocale;\n\t    }\n\t\n\t    if (!isArray(key)) {\n\t        //short-circuit everything else\n\t        locale = loadLocale(key);\n\t        if (locale) {\n\t            return locale;\n\t        }\n\t        key = [key];\n\t    }\n\t\n\t    return chooseLocale(key);\n\t}\n\t\n\tfunction listLocales() {\n\t    return keys$1(locales);\n\t}\n\t\n\tfunction checkOverflow (m) {\n\t    var overflow;\n\t    var a = m._a;\n\t\n\t    if (a && getParsingFlags(m).overflow === -2) {\n\t        overflow =\n\t            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n\t            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n\t            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n\t            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n\t            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n\t            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n\t            -1;\n\t\n\t        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n\t            overflow = DATE;\n\t        }\n\t        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n\t            overflow = WEEK;\n\t        }\n\t        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n\t            overflow = WEEKDAY;\n\t        }\n\t\n\t        getParsingFlags(m).overflow = overflow;\n\t    }\n\t\n\t    return m;\n\t}\n\t\n\t// iso 8601 regex\n\t// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\tvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\tvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\t\n\tvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\t\n\tvar isoDates = [\n\t    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n\t    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n\t    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n\t    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n\t    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n\t    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n\t    ['YYYYYYMMDD', /[+-]\\d{10}/],\n\t    ['YYYYMMDD', /\\d{8}/],\n\t    // YYYYMM is NOT allowed by the standard\n\t    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n\t    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n\t    ['YYYYDDD', /\\d{7}/]\n\t];\n\t\n\t// iso time formats and regexes\n\tvar isoTimes = [\n\t    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n\t    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n\t    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n\t    ['HH:mm', /\\d\\d:\\d\\d/],\n\t    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n\t    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n\t    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n\t    ['HHmm', /\\d\\d\\d\\d/],\n\t    ['HH', /\\d\\d/]\n\t];\n\t\n\tvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\t\n\t// date from iso format\n\tfunction configFromISO(config) {\n\t    var i, l,\n\t        string = config._i,\n\t        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n\t        allowTime, dateFormat, timeFormat, tzFormat;\n\t\n\t    if (match) {\n\t        getParsingFlags(config).iso = true;\n\t\n\t        for (i = 0, l = isoDates.length; i < l; i++) {\n\t            if (isoDates[i][1].exec(match[1])) {\n\t                dateFormat = isoDates[i][0];\n\t                allowTime = isoDates[i][2] !== false;\n\t                break;\n\t            }\n\t        }\n\t        if (dateFormat == null) {\n\t            config._isValid = false;\n\t            return;\n\t        }\n\t        if (match[3]) {\n\t            for (i = 0, l = isoTimes.length; i < l; i++) {\n\t                if (isoTimes[i][1].exec(match[3])) {\n\t                    // match[2] should be 'T' or space\n\t                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n\t                    break;\n\t                }\n\t            }\n\t            if (timeFormat == null) {\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t        }\n\t        if (!allowTime && timeFormat != null) {\n\t            config._isValid = false;\n\t            return;\n\t        }\n\t        if (match[4]) {\n\t            if (tzRegex.exec(match[4])) {\n\t                tzFormat = 'Z';\n\t            } else {\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t        }\n\t        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n\t        configFromStringAndFormat(config);\n\t    } else {\n\t        config._isValid = false;\n\t    }\n\t}\n\t\n\t// date from iso format or fallback\n\tfunction configFromString(config) {\n\t    var matched = aspNetJsonRegex.exec(config._i);\n\t\n\t    if (matched !== null) {\n\t        config._d = new Date(+matched[1]);\n\t        return;\n\t    }\n\t\n\t    configFromISO(config);\n\t    if (config._isValid === false) {\n\t        delete config._isValid;\n\t        hooks.createFromInputFallback(config);\n\t    }\n\t}\n\t\n\thooks.createFromInputFallback = deprecate(\n\t    'value provided is not in a recognized ISO format. moment construction falls back to js Date(), ' +\n\t    'which is not reliable across all browsers and versions. Non ISO date formats are ' +\n\t    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n\t    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n\t    function (config) {\n\t        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n\t    }\n\t);\n\t\n\t// Pick the first defined of two or three arguments.\n\tfunction defaults(a, b, c) {\n\t    if (a != null) {\n\t        return a;\n\t    }\n\t    if (b != null) {\n\t        return b;\n\t    }\n\t    return c;\n\t}\n\t\n\tfunction currentDateArray(config) {\n\t    // hooks is actually the exported moment object\n\t    var nowValue = new Date(hooks.now());\n\t    if (config._useUTC) {\n\t        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n\t    }\n\t    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n\t}\n\t\n\t// convert an array to a date.\n\t// the array should mirror the parameters below\n\t// note: all values past the year are optional and will default to the lowest possible value.\n\t// [year, month, day , hour, minute, second, millisecond]\n\tfunction configFromArray (config) {\n\t    var i, date, input = [], currentDate, yearToUse;\n\t\n\t    if (config._d) {\n\t        return;\n\t    }\n\t\n\t    currentDate = currentDateArray(config);\n\t\n\t    //compute day of the year from weeks and weekdays\n\t    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n\t        dayOfYearFromWeekInfo(config);\n\t    }\n\t\n\t    //if the day of the year is set, figure out what it is\n\t    if (config._dayOfYear) {\n\t        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\t\n\t        if (config._dayOfYear > daysInYear(yearToUse)) {\n\t            getParsingFlags(config)._overflowDayOfYear = true;\n\t        }\n\t\n\t        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n\t        config._a[MONTH] = date.getUTCMonth();\n\t        config._a[DATE] = date.getUTCDate();\n\t    }\n\t\n\t    // Default to current date.\n\t    // * if no year, month, day of month are given, default to today\n\t    // * if day of month is given, default month and year\n\t    // * if month is given, default only year\n\t    // * if year is given, don't default anything\n\t    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n\t        config._a[i] = input[i] = currentDate[i];\n\t    }\n\t\n\t    // Zero out whatever was not defaulted, including time\n\t    for (; i < 7; i++) {\n\t        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n\t    }\n\t\n\t    // Check for 24:00:00.000\n\t    if (config._a[HOUR] === 24 &&\n\t            config._a[MINUTE] === 0 &&\n\t            config._a[SECOND] === 0 &&\n\t            config._a[MILLISECOND] === 0) {\n\t        config._nextDay = true;\n\t        config._a[HOUR] = 0;\n\t    }\n\t\n\t    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n\t    // Apply timezone offset from input. The actual utcOffset can be changed\n\t    // with parseZone.\n\t    if (config._tzm != null) {\n\t        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\t    }\n\t\n\t    if (config._nextDay) {\n\t        config._a[HOUR] = 24;\n\t    }\n\t}\n\t\n\tfunction dayOfYearFromWeekInfo(config) {\n\t    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\t\n\t    w = config._w;\n\t    if (w.GG != null || w.W != null || w.E != null) {\n\t        dow = 1;\n\t        doy = 4;\n\t\n\t        // TODO: We need to take the current isoWeekYear, but that depends on\n\t        // how we interpret now (local, utc, fixed offset). So create\n\t        // a now version of current config (take local/utc/offset flags, and\n\t        // create now).\n\t        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n\t        week = defaults(w.W, 1);\n\t        weekday = defaults(w.E, 1);\n\t        if (weekday < 1 || weekday > 7) {\n\t            weekdayOverflow = true;\n\t        }\n\t    } else {\n\t        dow = config._locale._week.dow;\n\t        doy = config._locale._week.doy;\n\t\n\t        var curWeek = weekOfYear(createLocal(), dow, doy);\n\t\n\t        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\t\n\t        // Default to current week.\n\t        week = defaults(w.w, curWeek.week);\n\t\n\t        if (w.d != null) {\n\t            // weekday -- low day numbers are considered next week\n\t            weekday = w.d;\n\t            if (weekday < 0 || weekday > 6) {\n\t                weekdayOverflow = true;\n\t            }\n\t        } else if (w.e != null) {\n\t            // local weekday -- counting starts from begining of week\n\t            weekday = w.e + dow;\n\t            if (w.e < 0 || w.e > 6) {\n\t                weekdayOverflow = true;\n\t            }\n\t        } else {\n\t            // default to begining of week\n\t            weekday = dow;\n\t        }\n\t    }\n\t    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n\t        getParsingFlags(config)._overflowWeeks = true;\n\t    } else if (weekdayOverflow != null) {\n\t        getParsingFlags(config)._overflowWeekday = true;\n\t    } else {\n\t        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n\t        config._a[YEAR] = temp.year;\n\t        config._dayOfYear = temp.dayOfYear;\n\t    }\n\t}\n\t\n\t// constant that refers to the ISO standard\n\thooks.ISO_8601 = function () {};\n\t\n\t// date from string and format string\n\tfunction configFromStringAndFormat(config) {\n\t    // TODO: Move this to another part of the creation flow to prevent circular deps\n\t    if (config._f === hooks.ISO_8601) {\n\t        configFromISO(config);\n\t        return;\n\t    }\n\t\n\t    config._a = [];\n\t    getParsingFlags(config).empty = true;\n\t\n\t    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\t    var string = '' + config._i,\n\t        i, parsedInput, tokens, token, skipped,\n\t        stringLength = string.length,\n\t        totalParsedInputLength = 0;\n\t\n\t    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\t\n\t    for (i = 0; i < tokens.length; i++) {\n\t        token = tokens[i];\n\t        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n\t        // console.log('token', token, 'parsedInput', parsedInput,\n\t        //         'regex', getParseRegexForToken(token, config));\n\t        if (parsedInput) {\n\t            skipped = string.substr(0, string.indexOf(parsedInput));\n\t            if (skipped.length > 0) {\n\t                getParsingFlags(config).unusedInput.push(skipped);\n\t            }\n\t            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n\t            totalParsedInputLength += parsedInput.length;\n\t        }\n\t        // don't parse if it's not a known token\n\t        if (formatTokenFunctions[token]) {\n\t            if (parsedInput) {\n\t                getParsingFlags(config).empty = false;\n\t            }\n\t            else {\n\t                getParsingFlags(config).unusedTokens.push(token);\n\t            }\n\t            addTimeToArrayFromToken(token, parsedInput, config);\n\t        }\n\t        else if (config._strict && !parsedInput) {\n\t            getParsingFlags(config).unusedTokens.push(token);\n\t        }\n\t    }\n\t\n\t    // add remaining unparsed input length to the string\n\t    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\t    if (string.length > 0) {\n\t        getParsingFlags(config).unusedInput.push(string);\n\t    }\n\t\n\t    // clear _12h flag if hour is <= 12\n\t    if (config._a[HOUR] <= 12 &&\n\t        getParsingFlags(config).bigHour === true &&\n\t        config._a[HOUR] > 0) {\n\t        getParsingFlags(config).bigHour = undefined;\n\t    }\n\t\n\t    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n\t    getParsingFlags(config).meridiem = config._meridiem;\n\t    // handle meridiem\n\t    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\t\n\t    configFromArray(config);\n\t    checkOverflow(config);\n\t}\n\t\n\t\n\tfunction meridiemFixWrap (locale, hour, meridiem) {\n\t    var isPm;\n\t\n\t    if (meridiem == null) {\n\t        // nothing to do\n\t        return hour;\n\t    }\n\t    if (locale.meridiemHour != null) {\n\t        return locale.meridiemHour(hour, meridiem);\n\t    } else if (locale.isPM != null) {\n\t        // Fallback\n\t        isPm = locale.isPM(meridiem);\n\t        if (isPm && hour < 12) {\n\t            hour += 12;\n\t        }\n\t        if (!isPm && hour === 12) {\n\t            hour = 0;\n\t        }\n\t        return hour;\n\t    } else {\n\t        // this is not supposed to happen\n\t        return hour;\n\t    }\n\t}\n\t\n\t// date from string and array of format strings\n\tfunction configFromStringAndArray(config) {\n\t    var tempConfig,\n\t        bestMoment,\n\t\n\t        scoreToBeat,\n\t        i,\n\t        currentScore;\n\t\n\t    if (config._f.length === 0) {\n\t        getParsingFlags(config).invalidFormat = true;\n\t        config._d = new Date(NaN);\n\t        return;\n\t    }\n\t\n\t    for (i = 0; i < config._f.length; i++) {\n\t        currentScore = 0;\n\t        tempConfig = copyConfig({}, config);\n\t        if (config._useUTC != null) {\n\t            tempConfig._useUTC = config._useUTC;\n\t        }\n\t        tempConfig._f = config._f[i];\n\t        configFromStringAndFormat(tempConfig);\n\t\n\t        if (!isValid(tempConfig)) {\n\t            continue;\n\t        }\n\t\n\t        // if there is any input that was not parsed add a penalty for that format\n\t        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\t\n\t        //or tokens\n\t        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\t\n\t        getParsingFlags(tempConfig).score = currentScore;\n\t\n\t        if (scoreToBeat == null || currentScore < scoreToBeat) {\n\t            scoreToBeat = currentScore;\n\t            bestMoment = tempConfig;\n\t        }\n\t    }\n\t\n\t    extend(config, bestMoment || tempConfig);\n\t}\n\t\n\tfunction configFromObject(config) {\n\t    if (config._d) {\n\t        return;\n\t    }\n\t\n\t    var i = normalizeObjectUnits(config._i);\n\t    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n\t        return obj && parseInt(obj, 10);\n\t    });\n\t\n\t    configFromArray(config);\n\t}\n\t\n\tfunction createFromConfig (config) {\n\t    var res = new Moment(checkOverflow(prepareConfig(config)));\n\t    if (res._nextDay) {\n\t        // Adding is smart enough around DST\n\t        res.add(1, 'd');\n\t        res._nextDay = undefined;\n\t    }\n\t\n\t    return res;\n\t}\n\t\n\tfunction prepareConfig (config) {\n\t    var input = config._i,\n\t        format = config._f;\n\t\n\t    config._locale = config._locale || getLocale(config._l);\n\t\n\t    if (input === null || (format === undefined && input === '')) {\n\t        return createInvalid({nullInput: true});\n\t    }\n\t\n\t    if (typeof input === 'string') {\n\t        config._i = input = config._locale.preparse(input);\n\t    }\n\t\n\t    if (isMoment(input)) {\n\t        return new Moment(checkOverflow(input));\n\t    } else if (isDate(input)) {\n\t        config._d = input;\n\t    } else if (isArray(format)) {\n\t        configFromStringAndArray(config);\n\t    } else if (format) {\n\t        configFromStringAndFormat(config);\n\t    }  else {\n\t        configFromInput(config);\n\t    }\n\t\n\t    if (!isValid(config)) {\n\t        config._d = null;\n\t    }\n\t\n\t    return config;\n\t}\n\t\n\tfunction configFromInput(config) {\n\t    var input = config._i;\n\t    if (input === undefined) {\n\t        config._d = new Date(hooks.now());\n\t    } else if (isDate(input)) {\n\t        config._d = new Date(input.valueOf());\n\t    } else if (typeof input === 'string') {\n\t        configFromString(config);\n\t    } else if (isArray(input)) {\n\t        config._a = map(input.slice(0), function (obj) {\n\t            return parseInt(obj, 10);\n\t        });\n\t        configFromArray(config);\n\t    } else if (typeof(input) === 'object') {\n\t        configFromObject(config);\n\t    } else if (isNumber(input)) {\n\t        // from milliseconds\n\t        config._d = new Date(input);\n\t    } else {\n\t        hooks.createFromInputFallback(config);\n\t    }\n\t}\n\t\n\tfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n\t    var c = {};\n\t\n\t    if (locale === true || locale === false) {\n\t        strict = locale;\n\t        locale = undefined;\n\t    }\n\t\n\t    if ((isObject(input) && isObjectEmpty(input)) ||\n\t            (isArray(input) && input.length === 0)) {\n\t        input = undefined;\n\t    }\n\t    // object construction must be done this way.\n\t    // https://github.com/moment/moment/issues/1423\n\t    c._isAMomentObject = true;\n\t    c._useUTC = c._isUTC = isUTC;\n\t    c._l = locale;\n\t    c._i = input;\n\t    c._f = format;\n\t    c._strict = strict;\n\t\n\t    return createFromConfig(c);\n\t}\n\t\n\tfunction createLocal (input, format, locale, strict) {\n\t    return createLocalOrUTC(input, format, locale, strict, false);\n\t}\n\t\n\tvar prototypeMin = deprecate(\n\t    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n\t    function () {\n\t        var other = createLocal.apply(null, arguments);\n\t        if (this.isValid() && other.isValid()) {\n\t            return other < this ? this : other;\n\t        } else {\n\t            return createInvalid();\n\t        }\n\t    }\n\t);\n\t\n\tvar prototypeMax = deprecate(\n\t    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n\t    function () {\n\t        var other = createLocal.apply(null, arguments);\n\t        if (this.isValid() && other.isValid()) {\n\t            return other > this ? this : other;\n\t        } else {\n\t            return createInvalid();\n\t        }\n\t    }\n\t);\n\t\n\t// Pick a moment m from moments so that m[fn](other) is true for all\n\t// other. This relies on the function fn to be transitive.\n\t//\n\t// moments should either be an array of moment objects or an array, whose\n\t// first element is an array of moment objects.\n\tfunction pickBy(fn, moments) {\n\t    var res, i;\n\t    if (moments.length === 1 && isArray(moments[0])) {\n\t        moments = moments[0];\n\t    }\n\t    if (!moments.length) {\n\t        return createLocal();\n\t    }\n\t    res = moments[0];\n\t    for (i = 1; i < moments.length; ++i) {\n\t        if (!moments[i].isValid() || moments[i][fn](res)) {\n\t            res = moments[i];\n\t        }\n\t    }\n\t    return res;\n\t}\n\t\n\t// TODO: Use [].sort instead?\n\tfunction min () {\n\t    var args = [].slice.call(arguments, 0);\n\t\n\t    return pickBy('isBefore', args);\n\t}\n\t\n\tfunction max () {\n\t    var args = [].slice.call(arguments, 0);\n\t\n\t    return pickBy('isAfter', args);\n\t}\n\t\n\tvar now = function () {\n\t    return Date.now ? Date.now() : +(new Date());\n\t};\n\t\n\tfunction Duration (duration) {\n\t    var normalizedInput = normalizeObjectUnits(duration),\n\t        years = normalizedInput.year || 0,\n\t        quarters = normalizedInput.quarter || 0,\n\t        months = normalizedInput.month || 0,\n\t        weeks = normalizedInput.week || 0,\n\t        days = normalizedInput.day || 0,\n\t        hours = normalizedInput.hour || 0,\n\t        minutes = normalizedInput.minute || 0,\n\t        seconds = normalizedInput.second || 0,\n\t        milliseconds = normalizedInput.millisecond || 0;\n\t\n\t    // representation for dateAddRemove\n\t    this._milliseconds = +milliseconds +\n\t        seconds * 1e3 + // 1000\n\t        minutes * 6e4 + // 1000 * 60\n\t        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n\t    // Because of dateAddRemove treats 24 hours as different from a\n\t    // day when working around DST, we need to store them separately\n\t    this._days = +days +\n\t        weeks * 7;\n\t    // It is impossible translate months into days without knowing\n\t    // which months you are are talking about, so we have to store\n\t    // it separately.\n\t    this._months = +months +\n\t        quarters * 3 +\n\t        years * 12;\n\t\n\t    this._data = {};\n\t\n\t    this._locale = getLocale();\n\t\n\t    this._bubble();\n\t}\n\t\n\tfunction isDuration (obj) {\n\t    return obj instanceof Duration;\n\t}\n\t\n\tfunction absRound (number) {\n\t    if (number < 0) {\n\t        return Math.round(-1 * number) * -1;\n\t    } else {\n\t        return Math.round(number);\n\t    }\n\t}\n\t\n\t// FORMATTING\n\t\n\tfunction offset (token, separator) {\n\t    addFormatToken(token, 0, 0, function () {\n\t        var offset = this.utcOffset();\n\t        var sign = '+';\n\t        if (offset < 0) {\n\t            offset = -offset;\n\t            sign = '-';\n\t        }\n\t        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n\t    });\n\t}\n\t\n\toffset('Z', ':');\n\toffset('ZZ', '');\n\t\n\t// PARSING\n\t\n\taddRegexToken('Z',  matchShortOffset);\n\taddRegexToken('ZZ', matchShortOffset);\n\taddParseToken(['Z', 'ZZ'], function (input, array, config) {\n\t    config._useUTC = true;\n\t    config._tzm = offsetFromString(matchShortOffset, input);\n\t});\n\t\n\t// HELPERS\n\t\n\t// timezone chunker\n\t// '+10:00' > ['10',  '00']\n\t// '-1530'  > ['-15', '30']\n\tvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\t\n\tfunction offsetFromString(matcher, string) {\n\t    var matches = (string || '').match(matcher);\n\t\n\t    if (matches === null) {\n\t        return null;\n\t    }\n\t\n\t    var chunk   = matches[matches.length - 1] || [];\n\t    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n\t    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\t\n\t    return minutes === 0 ?\n\t      0 :\n\t      parts[0] === '+' ? minutes : -minutes;\n\t}\n\t\n\t// Return a moment from input, that is local/utc/zone equivalent to model.\n\tfunction cloneWithOffset(input, model) {\n\t    var res, diff;\n\t    if (model._isUTC) {\n\t        res = model.clone();\n\t        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n\t        // Use low-level api, because this fn is low-level api.\n\t        res._d.setTime(res._d.valueOf() + diff);\n\t        hooks.updateOffset(res, false);\n\t        return res;\n\t    } else {\n\t        return createLocal(input).local();\n\t    }\n\t}\n\t\n\tfunction getDateOffset (m) {\n\t    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n\t    // https://github.com/moment/moment/pull/1871\n\t    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n\t}\n\t\n\t// HOOKS\n\t\n\t// This function will be called whenever a moment is mutated.\n\t// It is intended to keep the offset in sync with the timezone.\n\thooks.updateOffset = function () {};\n\t\n\t// MOMENTS\n\t\n\t// keepLocalTime = true means only change the timezone, without\n\t// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n\t// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n\t// +0200, so we adjust the time as needed, to be valid.\n\t//\n\t// Keeping the time actually adds/subtracts (one hour)\n\t// from the actual represented time. That is why we call updateOffset\n\t// a second time. In case it wants us to change the offset again\n\t// _changeInProgress == true case, then we have to adjust, because\n\t// there is no such time in the given timezone.\n\tfunction getSetOffset (input, keepLocalTime) {\n\t    var offset = this._offset || 0,\n\t        localAdjust;\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t    if (input != null) {\n\t        if (typeof input === 'string') {\n\t            input = offsetFromString(matchShortOffset, input);\n\t            if (input === null) {\n\t                return this;\n\t            }\n\t        } else if (Math.abs(input) < 16) {\n\t            input = input * 60;\n\t        }\n\t        if (!this._isUTC && keepLocalTime) {\n\t            localAdjust = getDateOffset(this);\n\t        }\n\t        this._offset = input;\n\t        this._isUTC = true;\n\t        if (localAdjust != null) {\n\t            this.add(localAdjust, 'm');\n\t        }\n\t        if (offset !== input) {\n\t            if (!keepLocalTime || this._changeInProgress) {\n\t                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n\t            } else if (!this._changeInProgress) {\n\t                this._changeInProgress = true;\n\t                hooks.updateOffset(this, true);\n\t                this._changeInProgress = null;\n\t            }\n\t        }\n\t        return this;\n\t    } else {\n\t        return this._isUTC ? offset : getDateOffset(this);\n\t    }\n\t}\n\t\n\tfunction getSetZone (input, keepLocalTime) {\n\t    if (input != null) {\n\t        if (typeof input !== 'string') {\n\t            input = -input;\n\t        }\n\t\n\t        this.utcOffset(input, keepLocalTime);\n\t\n\t        return this;\n\t    } else {\n\t        return -this.utcOffset();\n\t    }\n\t}\n\t\n\tfunction setOffsetToUTC (keepLocalTime) {\n\t    return this.utcOffset(0, keepLocalTime);\n\t}\n\t\n\tfunction setOffsetToLocal (keepLocalTime) {\n\t    if (this._isUTC) {\n\t        this.utcOffset(0, keepLocalTime);\n\t        this._isUTC = false;\n\t\n\t        if (keepLocalTime) {\n\t            this.subtract(getDateOffset(this), 'm');\n\t        }\n\t    }\n\t    return this;\n\t}\n\t\n\tfunction setOffsetToParsedOffset () {\n\t    if (this._tzm != null) {\n\t        this.utcOffset(this._tzm);\n\t    } else if (typeof this._i === 'string') {\n\t        var tZone = offsetFromString(matchOffset, this._i);\n\t        if (tZone != null) {\n\t            this.utcOffset(tZone);\n\t        }\n\t        else {\n\t            this.utcOffset(0, true);\n\t        }\n\t    }\n\t    return this;\n\t}\n\t\n\tfunction hasAlignedHourOffset (input) {\n\t    if (!this.isValid()) {\n\t        return false;\n\t    }\n\t    input = input ? createLocal(input).utcOffset() : 0;\n\t\n\t    return (this.utcOffset() - input) % 60 === 0;\n\t}\n\t\n\tfunction isDaylightSavingTime () {\n\t    return (\n\t        this.utcOffset() > this.clone().month(0).utcOffset() ||\n\t        this.utcOffset() > this.clone().month(5).utcOffset()\n\t    );\n\t}\n\t\n\tfunction isDaylightSavingTimeShifted () {\n\t    if (!isUndefined(this._isDSTShifted)) {\n\t        return this._isDSTShifted;\n\t    }\n\t\n\t    var c = {};\n\t\n\t    copyConfig(c, this);\n\t    c = prepareConfig(c);\n\t\n\t    if (c._a) {\n\t        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n\t        this._isDSTShifted = this.isValid() &&\n\t            compareArrays(c._a, other.toArray()) > 0;\n\t    } else {\n\t        this._isDSTShifted = false;\n\t    }\n\t\n\t    return this._isDSTShifted;\n\t}\n\t\n\tfunction isLocal () {\n\t    return this.isValid() ? !this._isUTC : false;\n\t}\n\t\n\tfunction isUtcOffset () {\n\t    return this.isValid() ? this._isUTC : false;\n\t}\n\t\n\tfunction isUtc () {\n\t    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n\t}\n\t\n\t// ASP.NET json date format regex\n\tvar aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\t\n\t// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n\t// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n\t// and further modified to allow for strings containing both week and day\n\tvar isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\n\t\n\tfunction createDuration (input, key) {\n\t    var duration = input,\n\t        // matching against regexp is expensive, do it on demand\n\t        match = null,\n\t        sign,\n\t        ret,\n\t        diffRes;\n\t\n\t    if (isDuration(input)) {\n\t        duration = {\n\t            ms : input._milliseconds,\n\t            d  : input._days,\n\t            M  : input._months\n\t        };\n\t    } else if (isNumber(input)) {\n\t        duration = {};\n\t        if (key) {\n\t            duration[key] = input;\n\t        } else {\n\t            duration.milliseconds = input;\n\t        }\n\t    } else if (!!(match = aspNetRegex.exec(input))) {\n\t        sign = (match[1] === '-') ? -1 : 1;\n\t        duration = {\n\t            y  : 0,\n\t            d  : toInt(match[DATE])                         * sign,\n\t            h  : toInt(match[HOUR])                         * sign,\n\t            m  : toInt(match[MINUTE])                       * sign,\n\t            s  : toInt(match[SECOND])                       * sign,\n\t            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\t        };\n\t    } else if (!!(match = isoRegex.exec(input))) {\n\t        sign = (match[1] === '-') ? -1 : 1;\n\t        duration = {\n\t            y : parseIso(match[2], sign),\n\t            M : parseIso(match[3], sign),\n\t            w : parseIso(match[4], sign),\n\t            d : parseIso(match[5], sign),\n\t            h : parseIso(match[6], sign),\n\t            m : parseIso(match[7], sign),\n\t            s : parseIso(match[8], sign)\n\t        };\n\t    } else if (duration == null) {// checks for null or undefined\n\t        duration = {};\n\t    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n\t        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\t\n\t        duration = {};\n\t        duration.ms = diffRes.milliseconds;\n\t        duration.M = diffRes.months;\n\t    }\n\t\n\t    ret = new Duration(duration);\n\t\n\t    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n\t        ret._locale = input._locale;\n\t    }\n\t\n\t    return ret;\n\t}\n\t\n\tcreateDuration.fn = Duration.prototype;\n\t\n\tfunction parseIso (inp, sign) {\n\t    // We'd normally use ~~inp for this, but unfortunately it also\n\t    // converts floats to ints.\n\t    // inp may be undefined, so careful calling replace on it.\n\t    var res = inp && parseFloat(inp.replace(',', '.'));\n\t    // apply sign while we're at it\n\t    return (isNaN(res) ? 0 : res) * sign;\n\t}\n\t\n\tfunction positiveMomentsDifference(base, other) {\n\t    var res = {milliseconds: 0, months: 0};\n\t\n\t    res.months = other.month() - base.month() +\n\t        (other.year() - base.year()) * 12;\n\t    if (base.clone().add(res.months, 'M').isAfter(other)) {\n\t        --res.months;\n\t    }\n\t\n\t    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\t\n\t    return res;\n\t}\n\t\n\tfunction momentsDifference(base, other) {\n\t    var res;\n\t    if (!(base.isValid() && other.isValid())) {\n\t        return {milliseconds: 0, months: 0};\n\t    }\n\t\n\t    other = cloneWithOffset(other, base);\n\t    if (base.isBefore(other)) {\n\t        res = positiveMomentsDifference(base, other);\n\t    } else {\n\t        res = positiveMomentsDifference(other, base);\n\t        res.milliseconds = -res.milliseconds;\n\t        res.months = -res.months;\n\t    }\n\t\n\t    return res;\n\t}\n\t\n\t// TODO: remove 'name' arg after deprecation is removed\n\tfunction createAdder(direction, name) {\n\t    return function (val, period) {\n\t        var dur, tmp;\n\t        //invert the arguments, but complain about it\n\t        if (period !== null && !isNaN(+period)) {\n\t            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n\t            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n\t            tmp = val; val = period; period = tmp;\n\t        }\n\t\n\t        val = typeof val === 'string' ? +val : val;\n\t        dur = createDuration(val, period);\n\t        addSubtract(this, dur, direction);\n\t        return this;\n\t    };\n\t}\n\t\n\tfunction addSubtract (mom, duration, isAdding, updateOffset) {\n\t    var milliseconds = duration._milliseconds,\n\t        days = absRound(duration._days),\n\t        months = absRound(duration._months);\n\t\n\t    if (!mom.isValid()) {\n\t        // No op\n\t        return;\n\t    }\n\t\n\t    updateOffset = updateOffset == null ? true : updateOffset;\n\t\n\t    if (milliseconds) {\n\t        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n\t    }\n\t    if (days) {\n\t        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n\t    }\n\t    if (months) {\n\t        setMonth(mom, get(mom, 'Month') + months * isAdding);\n\t    }\n\t    if (updateOffset) {\n\t        hooks.updateOffset(mom, days || months);\n\t    }\n\t}\n\t\n\tvar add      = createAdder(1, 'add');\n\tvar subtract = createAdder(-1, 'subtract');\n\t\n\tfunction getCalendarFormat(myMoment, now) {\n\t    var diff = myMoment.diff(now, 'days', true);\n\t    return diff < -6 ? 'sameElse' :\n\t            diff < -1 ? 'lastWeek' :\n\t            diff < 0 ? 'lastDay' :\n\t            diff < 1 ? 'sameDay' :\n\t            diff < 2 ? 'nextDay' :\n\t            diff < 7 ? 'nextWeek' : 'sameElse';\n\t}\n\t\n\tfunction calendar$1 (time, formats) {\n\t    // We want to compare the start of today, vs this.\n\t    // Getting start-of-today depends on whether we're local/utc/offset or not.\n\t    var now = time || createLocal(),\n\t        sod = cloneWithOffset(now, this).startOf('day'),\n\t        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\t\n\t    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\t\n\t    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n\t}\n\t\n\tfunction clone () {\n\t    return new Moment(this);\n\t}\n\t\n\tfunction isAfter (input, units) {\n\t    var localInput = isMoment(input) ? input : createLocal(input);\n\t    if (!(this.isValid() && localInput.isValid())) {\n\t        return false;\n\t    }\n\t    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\t    if (units === 'millisecond') {\n\t        return this.valueOf() > localInput.valueOf();\n\t    } else {\n\t        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n\t    }\n\t}\n\t\n\tfunction isBefore (input, units) {\n\t    var localInput = isMoment(input) ? input : createLocal(input);\n\t    if (!(this.isValid() && localInput.isValid())) {\n\t        return false;\n\t    }\n\t    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\t    if (units === 'millisecond') {\n\t        return this.valueOf() < localInput.valueOf();\n\t    } else {\n\t        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n\t    }\n\t}\n\t\n\tfunction isBetween (from, to, units, inclusivity) {\n\t    inclusivity = inclusivity || '()';\n\t    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n\t        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n\t}\n\t\n\tfunction isSame (input, units) {\n\t    var localInput = isMoment(input) ? input : createLocal(input),\n\t        inputMs;\n\t    if (!(this.isValid() && localInput.isValid())) {\n\t        return false;\n\t    }\n\t    units = normalizeUnits(units || 'millisecond');\n\t    if (units === 'millisecond') {\n\t        return this.valueOf() === localInput.valueOf();\n\t    } else {\n\t        inputMs = localInput.valueOf();\n\t        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n\t    }\n\t}\n\t\n\tfunction isSameOrAfter (input, units) {\n\t    return this.isSame(input, units) || this.isAfter(input,units);\n\t}\n\t\n\tfunction isSameOrBefore (input, units) {\n\t    return this.isSame(input, units) || this.isBefore(input,units);\n\t}\n\t\n\tfunction diff (input, units, asFloat) {\n\t    var that,\n\t        zoneDelta,\n\t        delta, output;\n\t\n\t    if (!this.isValid()) {\n\t        return NaN;\n\t    }\n\t\n\t    that = cloneWithOffset(input, this);\n\t\n\t    if (!that.isValid()) {\n\t        return NaN;\n\t    }\n\t\n\t    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\t\n\t    units = normalizeUnits(units);\n\t\n\t    if (units === 'year' || units === 'month' || units === 'quarter') {\n\t        output = monthDiff(this, that);\n\t        if (units === 'quarter') {\n\t            output = output / 3;\n\t        } else if (units === 'year') {\n\t            output = output / 12;\n\t        }\n\t    } else {\n\t        delta = this - that;\n\t        output = units === 'second' ? delta / 1e3 : // 1000\n\t            units === 'minute' ? delta / 6e4 : // 1000 * 60\n\t            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n\t            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n\t            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n\t            delta;\n\t    }\n\t    return asFloat ? output : absFloor(output);\n\t}\n\t\n\tfunction monthDiff (a, b) {\n\t    // difference in months\n\t    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n\t        // b is in (anchor - 1 month, anchor + 1 month)\n\t        anchor = a.clone().add(wholeMonthDiff, 'months'),\n\t        anchor2, adjust;\n\t\n\t    if (b - anchor < 0) {\n\t        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n\t        // linear across the month\n\t        adjust = (b - anchor) / (anchor - anchor2);\n\t    } else {\n\t        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n\t        // linear across the month\n\t        adjust = (b - anchor) / (anchor2 - anchor);\n\t    }\n\t\n\t    //check for negative zero, return zero if negative zero\n\t    return -(wholeMonthDiff + adjust) || 0;\n\t}\n\t\n\thooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n\thooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\t\n\tfunction toString () {\n\t    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n\t}\n\t\n\tfunction toISOString () {\n\t    var m = this.clone().utc();\n\t    if (0 < m.year() && m.year() <= 9999) {\n\t        if (isFunction(Date.prototype.toISOString)) {\n\t            // native implementation is ~50x faster, use it when we can\n\t            return this.toDate().toISOString();\n\t        } else {\n\t            return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\t        }\n\t    } else {\n\t        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\t    }\n\t}\n\t\n\t/**\n\t * Return a human readable representation of a moment that can\n\t * also be evaluated to get a new moment which is the same\n\t *\n\t * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n\t */\n\tfunction inspect () {\n\t    if (!this.isValid()) {\n\t        return 'moment.invalid(/* ' + this._i + ' */)';\n\t    }\n\t    var func = 'moment';\n\t    var zone = '';\n\t    if (!this.isLocal()) {\n\t        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n\t        zone = 'Z';\n\t    }\n\t    var prefix = '[' + func + '(\"]';\n\t    var year = (0 < this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n\t    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n\t    var suffix = zone + '[\")]';\n\t\n\t    return this.format(prefix + year + datetime + suffix);\n\t}\n\t\n\tfunction format (inputString) {\n\t    if (!inputString) {\n\t        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n\t    }\n\t    var output = formatMoment(this, inputString);\n\t    return this.localeData().postformat(output);\n\t}\n\t\n\tfunction from (time, withoutSuffix) {\n\t    if (this.isValid() &&\n\t            ((isMoment(time) && time.isValid()) ||\n\t             createLocal(time).isValid())) {\n\t        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n\t    } else {\n\t        return this.localeData().invalidDate();\n\t    }\n\t}\n\t\n\tfunction fromNow (withoutSuffix) {\n\t    return this.from(createLocal(), withoutSuffix);\n\t}\n\t\n\tfunction to (time, withoutSuffix) {\n\t    if (this.isValid() &&\n\t            ((isMoment(time) && time.isValid()) ||\n\t             createLocal(time).isValid())) {\n\t        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n\t    } else {\n\t        return this.localeData().invalidDate();\n\t    }\n\t}\n\t\n\tfunction toNow (withoutSuffix) {\n\t    return this.to(createLocal(), withoutSuffix);\n\t}\n\t\n\t// If passed a locale key, it will set the locale for this\n\t// instance.  Otherwise, it will return the locale configuration\n\t// variables for this instance.\n\tfunction locale (key) {\n\t    var newLocaleData;\n\t\n\t    if (key === undefined) {\n\t        return this._locale._abbr;\n\t    } else {\n\t        newLocaleData = getLocale(key);\n\t        if (newLocaleData != null) {\n\t            this._locale = newLocaleData;\n\t        }\n\t        return this;\n\t    }\n\t}\n\t\n\tvar lang = deprecate(\n\t    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n\t    function (key) {\n\t        if (key === undefined) {\n\t            return this.localeData();\n\t        } else {\n\t            return this.locale(key);\n\t        }\n\t    }\n\t);\n\t\n\tfunction localeData () {\n\t    return this._locale;\n\t}\n\t\n\tfunction startOf (units) {\n\t    units = normalizeUnits(units);\n\t    // the following switch intentionally omits break keywords\n\t    // to utilize falling through the cases.\n\t    switch (units) {\n\t        case 'year':\n\t            this.month(0);\n\t            /* falls through */\n\t        case 'quarter':\n\t        case 'month':\n\t            this.date(1);\n\t            /* falls through */\n\t        case 'week':\n\t        case 'isoWeek':\n\t        case 'day':\n\t        case 'date':\n\t            this.hours(0);\n\t            /* falls through */\n\t        case 'hour':\n\t            this.minutes(0);\n\t            /* falls through */\n\t        case 'minute':\n\t            this.seconds(0);\n\t            /* falls through */\n\t        case 'second':\n\t            this.milliseconds(0);\n\t    }\n\t\n\t    // weeks are a special case\n\t    if (units === 'week') {\n\t        this.weekday(0);\n\t    }\n\t    if (units === 'isoWeek') {\n\t        this.isoWeekday(1);\n\t    }\n\t\n\t    // quarters are also special\n\t    if (units === 'quarter') {\n\t        this.month(Math.floor(this.month() / 3) * 3);\n\t    }\n\t\n\t    return this;\n\t}\n\t\n\tfunction endOf (units) {\n\t    units = normalizeUnits(units);\n\t    if (units === undefined || units === 'millisecond') {\n\t        return this;\n\t    }\n\t\n\t    // 'date' is an alias for 'day', so it should be considered as such.\n\t    if (units === 'date') {\n\t        units = 'day';\n\t    }\n\t\n\t    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n\t}\n\t\n\tfunction valueOf () {\n\t    return this._d.valueOf() - ((this._offset || 0) * 60000);\n\t}\n\t\n\tfunction unix () {\n\t    return Math.floor(this.valueOf() / 1000);\n\t}\n\t\n\tfunction toDate () {\n\t    return new Date(this.valueOf());\n\t}\n\t\n\tfunction toArray () {\n\t    var m = this;\n\t    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n\t}\n\t\n\tfunction toObject () {\n\t    var m = this;\n\t    return {\n\t        years: m.year(),\n\t        months: m.month(),\n\t        date: m.date(),\n\t        hours: m.hours(),\n\t        minutes: m.minutes(),\n\t        seconds: m.seconds(),\n\t        milliseconds: m.milliseconds()\n\t    };\n\t}\n\t\n\tfunction toJSON () {\n\t    // new Date(NaN).toJSON() === null\n\t    return this.isValid() ? this.toISOString() : null;\n\t}\n\t\n\tfunction isValid$1 () {\n\t    return isValid(this);\n\t}\n\t\n\tfunction parsingFlags () {\n\t    return extend({}, getParsingFlags(this));\n\t}\n\t\n\tfunction invalidAt () {\n\t    return getParsingFlags(this).overflow;\n\t}\n\t\n\tfunction creationData() {\n\t    return {\n\t        input: this._i,\n\t        format: this._f,\n\t        locale: this._locale,\n\t        isUTC: this._isUTC,\n\t        strict: this._strict\n\t    };\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken(0, ['gg', 2], 0, function () {\n\t    return this.weekYear() % 100;\n\t});\n\t\n\taddFormatToken(0, ['GG', 2], 0, function () {\n\t    return this.isoWeekYear() % 100;\n\t});\n\t\n\tfunction addWeekYearFormatToken (token, getter) {\n\t    addFormatToken(0, [token, token.length], 0, getter);\n\t}\n\t\n\taddWeekYearFormatToken('gggg',     'weekYear');\n\taddWeekYearFormatToken('ggggg',    'weekYear');\n\taddWeekYearFormatToken('GGGG',  'isoWeekYear');\n\taddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('weekYear', 'gg');\n\taddUnitAlias('isoWeekYear', 'GG');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('weekYear', 1);\n\taddUnitPriority('isoWeekYear', 1);\n\t\n\t\n\t// PARSING\n\t\n\taddRegexToken('G',      matchSigned);\n\taddRegexToken('g',      matchSigned);\n\taddRegexToken('GG',     match1to2, match2);\n\taddRegexToken('gg',     match1to2, match2);\n\taddRegexToken('GGGG',   match1to4, match4);\n\taddRegexToken('gggg',   match1to4, match4);\n\taddRegexToken('GGGGG',  match1to6, match6);\n\taddRegexToken('ggggg',  match1to6, match6);\n\t\n\taddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n\t    week[token.substr(0, 2)] = toInt(input);\n\t});\n\t\n\taddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n\t    week[token] = hooks.parseTwoDigitYear(input);\n\t});\n\t\n\t// MOMENTS\n\t\n\tfunction getSetWeekYear (input) {\n\t    return getSetWeekYearHelper.call(this,\n\t            input,\n\t            this.week(),\n\t            this.weekday(),\n\t            this.localeData()._week.dow,\n\t            this.localeData()._week.doy);\n\t}\n\t\n\tfunction getSetISOWeekYear (input) {\n\t    return getSetWeekYearHelper.call(this,\n\t            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n\t}\n\t\n\tfunction getISOWeeksInYear () {\n\t    return weeksInYear(this.year(), 1, 4);\n\t}\n\t\n\tfunction getWeeksInYear () {\n\t    var weekInfo = this.localeData()._week;\n\t    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n\t}\n\t\n\tfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n\t    var weeksTarget;\n\t    if (input == null) {\n\t        return weekOfYear(this, dow, doy).year;\n\t    } else {\n\t        weeksTarget = weeksInYear(input, dow, doy);\n\t        if (week > weeksTarget) {\n\t            week = weeksTarget;\n\t        }\n\t        return setWeekAll.call(this, input, week, weekday, dow, doy);\n\t    }\n\t}\n\t\n\tfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n\t    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n\t        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\t\n\t    this.year(date.getUTCFullYear());\n\t    this.month(date.getUTCMonth());\n\t    this.date(date.getUTCDate());\n\t    return this;\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('Q', 0, 'Qo', 'quarter');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('quarter', 'Q');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('quarter', 7);\n\t\n\t// PARSING\n\t\n\taddRegexToken('Q', match1);\n\taddParseToken('Q', function (input, array) {\n\t    array[MONTH] = (toInt(input) - 1) * 3;\n\t});\n\t\n\t// MOMENTS\n\t\n\tfunction getSetQuarter (input) {\n\t    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('D', ['DD', 2], 'Do', 'date');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('date', 'D');\n\t\n\t// PRIOROITY\n\taddUnitPriority('date', 9);\n\t\n\t// PARSING\n\t\n\taddRegexToken('D',  match1to2);\n\taddRegexToken('DD', match1to2, match2);\n\taddRegexToken('Do', function (isStrict, locale) {\n\t    return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;\n\t});\n\t\n\taddParseToken(['D', 'DD'], DATE);\n\taddParseToken('Do', function (input, array) {\n\t    array[DATE] = toInt(input.match(match1to2)[0], 10);\n\t});\n\t\n\t// MOMENTS\n\t\n\tvar getSetDayOfMonth = makeGetSet('Date', true);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('dayOfYear', 'DDD');\n\t\n\t// PRIORITY\n\taddUnitPriority('dayOfYear', 4);\n\t\n\t// PARSING\n\t\n\taddRegexToken('DDD',  match1to3);\n\taddRegexToken('DDDD', match3);\n\taddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n\t    config._dayOfYear = toInt(input);\n\t});\n\t\n\t// HELPERS\n\t\n\t// MOMENTS\n\t\n\tfunction getSetDayOfYear (input) {\n\t    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n\t    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('m', ['mm', 2], 0, 'minute');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('minute', 'm');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('minute', 14);\n\t\n\t// PARSING\n\t\n\taddRegexToken('m',  match1to2);\n\taddRegexToken('mm', match1to2, match2);\n\taddParseToken(['m', 'mm'], MINUTE);\n\t\n\t// MOMENTS\n\t\n\tvar getSetMinute = makeGetSet('Minutes', false);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('s', ['ss', 2], 0, 'second');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('second', 's');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('second', 15);\n\t\n\t// PARSING\n\t\n\taddRegexToken('s',  match1to2);\n\taddRegexToken('ss', match1to2, match2);\n\taddParseToken(['s', 'ss'], SECOND);\n\t\n\t// MOMENTS\n\t\n\tvar getSetSecond = makeGetSet('Seconds', false);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('S', 0, 0, function () {\n\t    return ~~(this.millisecond() / 100);\n\t});\n\t\n\taddFormatToken(0, ['SS', 2], 0, function () {\n\t    return ~~(this.millisecond() / 10);\n\t});\n\t\n\taddFormatToken(0, ['SSS', 3], 0, 'millisecond');\n\taddFormatToken(0, ['SSSS', 4], 0, function () {\n\t    return this.millisecond() * 10;\n\t});\n\taddFormatToken(0, ['SSSSS', 5], 0, function () {\n\t    return this.millisecond() * 100;\n\t});\n\taddFormatToken(0, ['SSSSSS', 6], 0, function () {\n\t    return this.millisecond() * 1000;\n\t});\n\taddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n\t    return this.millisecond() * 10000;\n\t});\n\taddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n\t    return this.millisecond() * 100000;\n\t});\n\taddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n\t    return this.millisecond() * 1000000;\n\t});\n\t\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('millisecond', 'ms');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('millisecond', 16);\n\t\n\t// PARSING\n\t\n\taddRegexToken('S',    match1to3, match1);\n\taddRegexToken('SS',   match1to3, match2);\n\taddRegexToken('SSS',  match1to3, match3);\n\t\n\tvar token;\n\tfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n\t    addRegexToken(token, matchUnsigned);\n\t}\n\t\n\tfunction parseMs(input, array) {\n\t    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n\t}\n\t\n\tfor (token = 'S'; token.length <= 9; token += 'S') {\n\t    addParseToken(token, parseMs);\n\t}\n\t// MOMENTS\n\t\n\tvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('z',  0, 0, 'zoneAbbr');\n\taddFormatToken('zz', 0, 0, 'zoneName');\n\t\n\t// MOMENTS\n\t\n\tfunction getZoneAbbr () {\n\t    return this._isUTC ? 'UTC' : '';\n\t}\n\t\n\tfunction getZoneName () {\n\t    return this._isUTC ? 'Coordinated Universal Time' : '';\n\t}\n\t\n\tvar proto = Moment.prototype;\n\t\n\tproto.add               = add;\n\tproto.calendar          = calendar$1;\n\tproto.clone             = clone;\n\tproto.diff              = diff;\n\tproto.endOf             = endOf;\n\tproto.format            = format;\n\tproto.from              = from;\n\tproto.fromNow           = fromNow;\n\tproto.to                = to;\n\tproto.toNow             = toNow;\n\tproto.get               = stringGet;\n\tproto.invalidAt         = invalidAt;\n\tproto.isAfter           = isAfter;\n\tproto.isBefore          = isBefore;\n\tproto.isBetween         = isBetween;\n\tproto.isSame            = isSame;\n\tproto.isSameOrAfter     = isSameOrAfter;\n\tproto.isSameOrBefore    = isSameOrBefore;\n\tproto.isValid           = isValid$1;\n\tproto.lang              = lang;\n\tproto.locale            = locale;\n\tproto.localeData        = localeData;\n\tproto.max               = prototypeMax;\n\tproto.min               = prototypeMin;\n\tproto.parsingFlags      = parsingFlags;\n\tproto.set               = stringSet;\n\tproto.startOf           = startOf;\n\tproto.subtract          = subtract;\n\tproto.toArray           = toArray;\n\tproto.toObject          = toObject;\n\tproto.toDate            = toDate;\n\tproto.toISOString       = toISOString;\n\tproto.inspect           = inspect;\n\tproto.toJSON            = toJSON;\n\tproto.toString          = toString;\n\tproto.unix              = unix;\n\tproto.valueOf           = valueOf;\n\tproto.creationData      = creationData;\n\t\n\t// Year\n\tproto.year       = getSetYear;\n\tproto.isLeapYear = getIsLeapYear;\n\t\n\t// Week Year\n\tproto.weekYear    = getSetWeekYear;\n\tproto.isoWeekYear = getSetISOWeekYear;\n\t\n\t// Quarter\n\tproto.quarter = proto.quarters = getSetQuarter;\n\t\n\t// Month\n\tproto.month       = getSetMonth;\n\tproto.daysInMonth = getDaysInMonth;\n\t\n\t// Week\n\tproto.week           = proto.weeks        = getSetWeek;\n\tproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n\tproto.weeksInYear    = getWeeksInYear;\n\tproto.isoWeeksInYear = getISOWeeksInYear;\n\t\n\t// Day\n\tproto.date       = getSetDayOfMonth;\n\tproto.day        = proto.days             = getSetDayOfWeek;\n\tproto.weekday    = getSetLocaleDayOfWeek;\n\tproto.isoWeekday = getSetISODayOfWeek;\n\tproto.dayOfYear  = getSetDayOfYear;\n\t\n\t// Hour\n\tproto.hour = proto.hours = getSetHour;\n\t\n\t// Minute\n\tproto.minute = proto.minutes = getSetMinute;\n\t\n\t// Second\n\tproto.second = proto.seconds = getSetSecond;\n\t\n\t// Millisecond\n\tproto.millisecond = proto.milliseconds = getSetMillisecond;\n\t\n\t// Offset\n\tproto.utcOffset            = getSetOffset;\n\tproto.utc                  = setOffsetToUTC;\n\tproto.local                = setOffsetToLocal;\n\tproto.parseZone            = setOffsetToParsedOffset;\n\tproto.hasAlignedHourOffset = hasAlignedHourOffset;\n\tproto.isDST                = isDaylightSavingTime;\n\tproto.isLocal              = isLocal;\n\tproto.isUtcOffset          = isUtcOffset;\n\tproto.isUtc                = isUtc;\n\tproto.isUTC                = isUtc;\n\t\n\t// Timezone\n\tproto.zoneAbbr = getZoneAbbr;\n\tproto.zoneName = getZoneName;\n\t\n\t// Deprecations\n\tproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n\tproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n\tproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n\tproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n\tproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\t\n\tfunction createUnix (input) {\n\t    return createLocal(input * 1000);\n\t}\n\t\n\tfunction createInZone () {\n\t    return createLocal.apply(null, arguments).parseZone();\n\t}\n\t\n\tfunction preParsePostFormat (string) {\n\t    return string;\n\t}\n\t\n\tvar proto$1 = Locale.prototype;\n\t\n\tproto$1.calendar        = calendar;\n\tproto$1.longDateFormat  = longDateFormat;\n\tproto$1.invalidDate     = invalidDate;\n\tproto$1.ordinal         = ordinal;\n\tproto$1.preparse        = preParsePostFormat;\n\tproto$1.postformat      = preParsePostFormat;\n\tproto$1.relativeTime    = relativeTime;\n\tproto$1.pastFuture      = pastFuture;\n\tproto$1.set             = set;\n\t\n\t// Month\n\tproto$1.months            =        localeMonths;\n\tproto$1.monthsShort       =        localeMonthsShort;\n\tproto$1.monthsParse       =        localeMonthsParse;\n\tproto$1.monthsRegex       = monthsRegex;\n\tproto$1.monthsShortRegex  = monthsShortRegex;\n\t\n\t// Week\n\tproto$1.week = localeWeek;\n\tproto$1.firstDayOfYear = localeFirstDayOfYear;\n\tproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\t\n\t// Day of Week\n\tproto$1.weekdays       =        localeWeekdays;\n\tproto$1.weekdaysMin    =        localeWeekdaysMin;\n\tproto$1.weekdaysShort  =        localeWeekdaysShort;\n\tproto$1.weekdaysParse  =        localeWeekdaysParse;\n\t\n\tproto$1.weekdaysRegex       =        weekdaysRegex;\n\tproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n\tproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\t\n\t// Hours\n\tproto$1.isPM = localeIsPM;\n\tproto$1.meridiem = localeMeridiem;\n\t\n\tfunction get$1 (format, index, field, setter) {\n\t    var locale = getLocale();\n\t    var utc = createUTC().set(setter, index);\n\t    return locale[field](utc, format);\n\t}\n\t\n\tfunction listMonthsImpl (format, index, field) {\n\t    if (isNumber(format)) {\n\t        index = format;\n\t        format = undefined;\n\t    }\n\t\n\t    format = format || '';\n\t\n\t    if (index != null) {\n\t        return get$1(format, index, field, 'month');\n\t    }\n\t\n\t    var i;\n\t    var out = [];\n\t    for (i = 0; i < 12; i++) {\n\t        out[i] = get$1(format, i, field, 'month');\n\t    }\n\t    return out;\n\t}\n\t\n\t// ()\n\t// (5)\n\t// (fmt, 5)\n\t// (fmt)\n\t// (true)\n\t// (true, 5)\n\t// (true, fmt, 5)\n\t// (true, fmt)\n\tfunction listWeekdaysImpl (localeSorted, format, index, field) {\n\t    if (typeof localeSorted === 'boolean') {\n\t        if (isNumber(format)) {\n\t            index = format;\n\t            format = undefined;\n\t        }\n\t\n\t        format = format || '';\n\t    } else {\n\t        format = localeSorted;\n\t        index = format;\n\t        localeSorted = false;\n\t\n\t        if (isNumber(format)) {\n\t            index = format;\n\t            format = undefined;\n\t        }\n\t\n\t        format = format || '';\n\t    }\n\t\n\t    var locale = getLocale(),\n\t        shift = localeSorted ? locale._week.dow : 0;\n\t\n\t    if (index != null) {\n\t        return get$1(format, (index + shift) % 7, field, 'day');\n\t    }\n\t\n\t    var i;\n\t    var out = [];\n\t    for (i = 0; i < 7; i++) {\n\t        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n\t    }\n\t    return out;\n\t}\n\t\n\tfunction listMonths (format, index) {\n\t    return listMonthsImpl(format, index, 'months');\n\t}\n\t\n\tfunction listMonthsShort (format, index) {\n\t    return listMonthsImpl(format, index, 'monthsShort');\n\t}\n\t\n\tfunction listWeekdays (localeSorted, format, index) {\n\t    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n\t}\n\t\n\tfunction listWeekdaysShort (localeSorted, format, index) {\n\t    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n\t}\n\t\n\tfunction listWeekdaysMin (localeSorted, format, index) {\n\t    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n\t}\n\t\n\tgetSetGlobalLocale('en', {\n\t    ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n\t    ordinal : function (number) {\n\t        var b = number % 10,\n\t            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n\t            (b === 1) ? 'st' :\n\t            (b === 2) ? 'nd' :\n\t            (b === 3) ? 'rd' : 'th';\n\t        return number + output;\n\t    }\n\t});\n\t\n\t// Side effect imports\n\thooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n\thooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\t\n\tvar mathAbs = Math.abs;\n\t\n\tfunction abs () {\n\t    var data           = this._data;\n\t\n\t    this._milliseconds = mathAbs(this._milliseconds);\n\t    this._days         = mathAbs(this._days);\n\t    this._months       = mathAbs(this._months);\n\t\n\t    data.milliseconds  = mathAbs(data.milliseconds);\n\t    data.seconds       = mathAbs(data.seconds);\n\t    data.minutes       = mathAbs(data.minutes);\n\t    data.hours         = mathAbs(data.hours);\n\t    data.months        = mathAbs(data.months);\n\t    data.years         = mathAbs(data.years);\n\t\n\t    return this;\n\t}\n\t\n\tfunction addSubtract$1 (duration, input, value, direction) {\n\t    var other = createDuration(input, value);\n\t\n\t    duration._milliseconds += direction * other._milliseconds;\n\t    duration._days         += direction * other._days;\n\t    duration._months       += direction * other._months;\n\t\n\t    return duration._bubble();\n\t}\n\t\n\t// supports only 2.0-style add(1, 's') or add(duration)\n\tfunction add$1 (input, value) {\n\t    return addSubtract$1(this, input, value, 1);\n\t}\n\t\n\t// supports only 2.0-style subtract(1, 's') or subtract(duration)\n\tfunction subtract$1 (input, value) {\n\t    return addSubtract$1(this, input, value, -1);\n\t}\n\t\n\tfunction absCeil (number) {\n\t    if (number < 0) {\n\t        return Math.floor(number);\n\t    } else {\n\t        return Math.ceil(number);\n\t    }\n\t}\n\t\n\tfunction bubble () {\n\t    var milliseconds = this._milliseconds;\n\t    var days         = this._days;\n\t    var months       = this._months;\n\t    var data         = this._data;\n\t    var seconds, minutes, hours, years, monthsFromDays;\n\t\n\t    // if we have a mix of positive and negative values, bubble down first\n\t    // check: https://github.com/moment/moment/issues/2166\n\t    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n\t            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n\t        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n\t        days = 0;\n\t        months = 0;\n\t    }\n\t\n\t    // The following code bubbles up values, see the tests for\n\t    // examples of what that means.\n\t    data.milliseconds = milliseconds % 1000;\n\t\n\t    seconds           = absFloor(milliseconds / 1000);\n\t    data.seconds      = seconds % 60;\n\t\n\t    minutes           = absFloor(seconds / 60);\n\t    data.minutes      = minutes % 60;\n\t\n\t    hours             = absFloor(minutes / 60);\n\t    data.hours        = hours % 24;\n\t\n\t    days += absFloor(hours / 24);\n\t\n\t    // convert days to months\n\t    monthsFromDays = absFloor(daysToMonths(days));\n\t    months += monthsFromDays;\n\t    days -= absCeil(monthsToDays(monthsFromDays));\n\t\n\t    // 12 months -> 1 year\n\t    years = absFloor(months / 12);\n\t    months %= 12;\n\t\n\t    data.days   = days;\n\t    data.months = months;\n\t    data.years  = years;\n\t\n\t    return this;\n\t}\n\t\n\tfunction daysToMonths (days) {\n\t    // 400 years have 146097 days (taking into account leap year rules)\n\t    // 400 years have 12 months === 4800\n\t    return days * 4800 / 146097;\n\t}\n\t\n\tfunction monthsToDays (months) {\n\t    // the reverse of daysToMonths\n\t    return months * 146097 / 4800;\n\t}\n\t\n\tfunction as (units) {\n\t    var days;\n\t    var months;\n\t    var milliseconds = this._milliseconds;\n\t\n\t    units = normalizeUnits(units);\n\t\n\t    if (units === 'month' || units === 'year') {\n\t        days   = this._days   + milliseconds / 864e5;\n\t        months = this._months + daysToMonths(days);\n\t        return units === 'month' ? months : months / 12;\n\t    } else {\n\t        // handle milliseconds separately because of floating point math errors (issue #1867)\n\t        days = this._days + Math.round(monthsToDays(this._months));\n\t        switch (units) {\n\t            case 'week'   : return days / 7     + milliseconds / 6048e5;\n\t            case 'day'    : return days         + milliseconds / 864e5;\n\t            case 'hour'   : return days * 24    + milliseconds / 36e5;\n\t            case 'minute' : return days * 1440  + milliseconds / 6e4;\n\t            case 'second' : return days * 86400 + milliseconds / 1000;\n\t            // Math.floor prevents floating point math errors here\n\t            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n\t            default: throw new Error('Unknown unit ' + units);\n\t        }\n\t    }\n\t}\n\t\n\t// TODO: Use this.as('ms')?\n\tfunction valueOf$1 () {\n\t    return (\n\t        this._milliseconds +\n\t        this._days * 864e5 +\n\t        (this._months % 12) * 2592e6 +\n\t        toInt(this._months / 12) * 31536e6\n\t    );\n\t}\n\t\n\tfunction makeAs (alias) {\n\t    return function () {\n\t        return this.as(alias);\n\t    };\n\t}\n\t\n\tvar asMilliseconds = makeAs('ms');\n\tvar asSeconds      = makeAs('s');\n\tvar asMinutes      = makeAs('m');\n\tvar asHours        = makeAs('h');\n\tvar asDays         = makeAs('d');\n\tvar asWeeks        = makeAs('w');\n\tvar asMonths       = makeAs('M');\n\tvar asYears        = makeAs('y');\n\t\n\tfunction get$2 (units) {\n\t    units = normalizeUnits(units);\n\t    return this[units + 's']();\n\t}\n\t\n\tfunction makeGetter(name) {\n\t    return function () {\n\t        return this._data[name];\n\t    };\n\t}\n\t\n\tvar milliseconds = makeGetter('milliseconds');\n\tvar seconds      = makeGetter('seconds');\n\tvar minutes      = makeGetter('minutes');\n\tvar hours        = makeGetter('hours');\n\tvar days         = makeGetter('days');\n\tvar months       = makeGetter('months');\n\tvar years        = makeGetter('years');\n\t\n\tfunction weeks () {\n\t    return absFloor(this.days() / 7);\n\t}\n\t\n\tvar round = Math.round;\n\tvar thresholds = {\n\t    s: 45,  // seconds to minute\n\t    m: 45,  // minutes to hour\n\t    h: 22,  // hours to day\n\t    d: 26,  // days to month\n\t    M: 11   // months to year\n\t};\n\t\n\t// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\tfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n\t    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n\t}\n\t\n\tfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n\t    var duration = createDuration(posNegDuration).abs();\n\t    var seconds  = round(duration.as('s'));\n\t    var minutes  = round(duration.as('m'));\n\t    var hours    = round(duration.as('h'));\n\t    var days     = round(duration.as('d'));\n\t    var months   = round(duration.as('M'));\n\t    var years    = round(duration.as('y'));\n\t\n\t    var a = seconds < thresholds.s && ['s', seconds]  ||\n\t            minutes <= 1           && ['m']           ||\n\t            minutes < thresholds.m && ['mm', minutes] ||\n\t            hours   <= 1           && ['h']           ||\n\t            hours   < thresholds.h && ['hh', hours]   ||\n\t            days    <= 1           && ['d']           ||\n\t            days    < thresholds.d && ['dd', days]    ||\n\t            months  <= 1           && ['M']           ||\n\t            months  < thresholds.M && ['MM', months]  ||\n\t            years   <= 1           && ['y']           || ['yy', years];\n\t\n\t    a[2] = withoutSuffix;\n\t    a[3] = +posNegDuration > 0;\n\t    a[4] = locale;\n\t    return substituteTimeAgo.apply(null, a);\n\t}\n\t\n\t// This function allows you to set the rounding function for relative time strings\n\tfunction getSetRelativeTimeRounding (roundingFunction) {\n\t    if (roundingFunction === undefined) {\n\t        return round;\n\t    }\n\t    if (typeof(roundingFunction) === 'function') {\n\t        round = roundingFunction;\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\t\n\t// This function allows you to set a threshold for relative time strings\n\tfunction getSetRelativeTimeThreshold (threshold, limit) {\n\t    if (thresholds[threshold] === undefined) {\n\t        return false;\n\t    }\n\t    if (limit === undefined) {\n\t        return thresholds[threshold];\n\t    }\n\t    thresholds[threshold] = limit;\n\t    return true;\n\t}\n\t\n\tfunction humanize (withSuffix) {\n\t    var locale = this.localeData();\n\t    var output = relativeTime$1(this, !withSuffix, locale);\n\t\n\t    if (withSuffix) {\n\t        output = locale.pastFuture(+this, output);\n\t    }\n\t\n\t    return locale.postformat(output);\n\t}\n\t\n\tvar abs$1 = Math.abs;\n\t\n\tfunction toISOString$1() {\n\t    // for ISO strings we do not use the normal bubbling rules:\n\t    //  * milliseconds bubble up until they become hours\n\t    //  * days do not bubble at all\n\t    //  * months bubble up until they become years\n\t    // This is because there is no context-free conversion between hours and days\n\t    // (think of clock changes)\n\t    // and also not between days and months (28-31 days per month)\n\t    var seconds = abs$1(this._milliseconds) / 1000;\n\t    var days         = abs$1(this._days);\n\t    var months       = abs$1(this._months);\n\t    var minutes, hours, years;\n\t\n\t    // 3600 seconds -> 60 minutes -> 1 hour\n\t    minutes           = absFloor(seconds / 60);\n\t    hours             = absFloor(minutes / 60);\n\t    seconds %= 60;\n\t    minutes %= 60;\n\t\n\t    // 12 months -> 1 year\n\t    years  = absFloor(months / 12);\n\t    months %= 12;\n\t\n\t\n\t    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\t    var Y = years;\n\t    var M = months;\n\t    var D = days;\n\t    var h = hours;\n\t    var m = minutes;\n\t    var s = seconds;\n\t    var total = this.asSeconds();\n\t\n\t    if (!total) {\n\t        // this is the same as C#'s (Noda) and python (isodate)...\n\t        // but not other JS (goog.date)\n\t        return 'P0D';\n\t    }\n\t\n\t    return (total < 0 ? '-' : '') +\n\t        'P' +\n\t        (Y ? Y + 'Y' : '') +\n\t        (M ? M + 'M' : '') +\n\t        (D ? D + 'D' : '') +\n\t        ((h || m || s) ? 'T' : '') +\n\t        (h ? h + 'H' : '') +\n\t        (m ? m + 'M' : '') +\n\t        (s ? s + 'S' : '');\n\t}\n\t\n\tvar proto$2 = Duration.prototype;\n\t\n\tproto$2.abs            = abs;\n\tproto$2.add            = add$1;\n\tproto$2.subtract       = subtract$1;\n\tproto$2.as             = as;\n\tproto$2.asMilliseconds = asMilliseconds;\n\tproto$2.asSeconds      = asSeconds;\n\tproto$2.asMinutes      = asMinutes;\n\tproto$2.asHours        = asHours;\n\tproto$2.asDays         = asDays;\n\tproto$2.asWeeks        = asWeeks;\n\tproto$2.asMonths       = asMonths;\n\tproto$2.asYears        = asYears;\n\tproto$2.valueOf        = valueOf$1;\n\tproto$2._bubble        = bubble;\n\tproto$2.get            = get$2;\n\tproto$2.milliseconds   = milliseconds;\n\tproto$2.seconds        = seconds;\n\tproto$2.minutes        = minutes;\n\tproto$2.hours          = hours;\n\tproto$2.days           = days;\n\tproto$2.weeks          = weeks;\n\tproto$2.months         = months;\n\tproto$2.years          = years;\n\tproto$2.humanize       = humanize;\n\tproto$2.toISOString    = toISOString$1;\n\tproto$2.toString       = toISOString$1;\n\tproto$2.toJSON         = toISOString$1;\n\tproto$2.locale         = locale;\n\tproto$2.localeData     = localeData;\n\t\n\t// Deprecations\n\tproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n\tproto$2.lang = lang;\n\t\n\t// Side effect imports\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('X', 0, 0, 'unix');\n\taddFormatToken('x', 0, 0, 'valueOf');\n\t\n\t// PARSING\n\t\n\taddRegexToken('x', matchSigned);\n\taddRegexToken('X', matchTimestamp);\n\taddParseToken('X', function (input, array, config) {\n\t    config._d = new Date(parseFloat(input, 10) * 1000);\n\t});\n\taddParseToken('x', function (input, array, config) {\n\t    config._d = new Date(toInt(input));\n\t});\n\t\n\t// Side effect imports\n\t\n\t\n\thooks.version = '2.17.0';\n\t\n\tsetHookCallback(createLocal);\n\t\n\thooks.fn                    = proto;\n\thooks.min                   = min;\n\thooks.max                   = max;\n\thooks.now                   = now;\n\thooks.utc                   = createUTC;\n\thooks.unix                  = createUnix;\n\thooks.months                = listMonths;\n\thooks.isDate                = isDate;\n\thooks.locale                = getSetGlobalLocale;\n\thooks.invalid               = createInvalid;\n\thooks.duration              = createDuration;\n\thooks.isMoment              = isMoment;\n\thooks.weekdays              = listWeekdays;\n\thooks.parseZone             = createInZone;\n\thooks.localeData            = getLocale;\n\thooks.isDuration            = isDuration;\n\thooks.monthsShort           = listMonthsShort;\n\thooks.weekdaysMin           = listWeekdaysMin;\n\thooks.defineLocale          = defineLocale;\n\thooks.updateLocale          = updateLocale;\n\thooks.locales               = listLocales;\n\thooks.weekdaysShort         = listWeekdaysShort;\n\thooks.normalizeUnits        = normalizeUnits;\n\thooks.relativeTimeRounding = getSetRelativeTimeRounding;\n\thooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n\thooks.calendarFormat        = getCalendarFormat;\n\thooks.prototype             = proto;\n\t\n\treturn hooks;\n\t\n\t})));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// date-range-chooser-es5.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 289ab20525abcb95ca59","'use strict';\nconst DateRange = require('./fcts-ext-daterange');\n\nwindow.dr = new DateRange();\n\n;(function (env, factory) {\n  if (typeof module === 'object' && module.exports) {\n    module.exports = env.document\n       ? factory(env) : function (win) {\n         if (!win.document) {\n           throw new Error('Window with document not present');\n         }\n         return factory(win, true);\n       };\n  } else {\n    env.DateRangeChooser = factory(env, true);\n  }\n})(typeof window !== 'undefined' ? window : this, function (_window, windowExists) {\n  var FC = _window.FusionCharts;\n  FC.register('extension', ['private', 'date-range-chooser', function () {\n    FC.registerComponent('extensions', 'date-range-chooser', DateRange({FusionCharts: FC}));\n  }]);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 1\n// module chunks = 0","'use strict';\n/**\n * @private\n */\nvar moment = require('moment');\n\nmodule.exports = function (dep) {\n  /**\n   * Class representing the DateRange.\n   */\n  class DateRange {\n    constructor () {\n      /**\n       * @private\n       */\n      this.startDt = 0;\n      this.endDt = 0;\n      this.startDataset = 0;\n      this.endDataset = 0;\n      this.toolbox = dep.FusionCharts.getComponent('api', 'toolbox');\n      this.HorizontalToolbar = this.toolbox.HorizontalToolbar;\n      this.ComponentGroup = this.toolbox.ComponentGroup;\n      this.SymbolStore = this.toolbox.SymbolStore;\n      this.isDrawn = false;\n      this.startText = {\n        attr: function () {}\n      };\n      this.endText = {\n        attr: function () {}\n      };\n    }\n\n    /**\n     * An object representing the start and end dates.\n     * @type {DateRange.range}\n     */\n    get startDate () {\n      return this.startDt;\n    }\n\n    set startDate (startDt) {\n      let startTimestamp = parseInt(moment(startDt, 'DD-MM-YYYY').format('x')),\n        absoluteStart = this.globalReactiveModel.model['x-axis-absolute-range-start'];\n      if (startTimestamp <= this.endDt && startTimestamp >= absoluteStart) {\n        this.startDt = startTimestamp;\n        this.globalReactiveModel.model['x-axis-visible-range-start'] = this.startDt;\n      } else {\n        // this.fromDate.updateVisual('errored');\n        console.error('From Date error state!');\n      }\n    }\n\n    dateFormatter (epoch, separator) {\n      epoch = new Date(epoch);\n      var formattedDate = [epoch.getUTCDate(), (epoch.getUTCMonth() + 1), epoch.getUTCFullYear()];\n      formattedDate = formattedDate.join(separator);\n      return formattedDate;\n    }\n\n    get endDate () {\n      return this.endDt;\n    }\n\n    set endDate (endDt) {\n      let endTimestamp = parseInt(moment(endDt, 'DD-MM-YYYY').format('x')),\n        absoluteEnd = this.globalReactiveModel.model['x-axis-absolute-range-end'];\n      if (endTimestamp >= this.startDt && endTimestamp <= absoluteEnd) {\n        this.endDt = endTimestamp;\n        this.globalReactiveModel.model['x-axis-visible-range-end'] = this.endDt;\n      } else {\n        // this.toDate.updateVisual('errored');\n        console.error('To Date error state!');\n      }\n    }\n\n    /**\n     * Swaps the start date and the end date of the date range\n     * @private\n     */\n    swapDates () {\n      let temp = this.dateRange.startDate;\n      this.dateRange.startDate = this.dateRange.endDate;\n      this.dateRange.endDate = temp;\n    }\n\n    /**\n     * Syncs the daterange shown by the FusionCharts time series chart and the Date Range Chooser\n     * @private\n     */\n    syncRange () {}\n\n    /**\n     * Returns a formatted date string from FusionCharts when given a UNIX timestamp\n     * @param  {number} timestamp - A UNIX timestamp to be converted to a date string\n     * @return {string} - A date string which is equivalent to the given timestamp\n     */\n    getFormattedDate (timestamp) {\n      return this.chart.getFormattedDate(timestamp);\n    }\n\n    /**\n     * Returns a UNIX timestamp from FusionCharts when given a formatted date string\n     * @param  {string} dateString - A date string to be converted to a UNIX timestamp\n     * @return {number} A UNIX timestamp which is equivalent to the given date string\n     */\n    getTimestamp (dateString) {\n      return this.chart.getTimestamp(dateString);\n    }\n\n    /**\n     * Sets the configurable options of the extension (e.g. cosmetics)\n     * @param {Object} configObj The configuration object containing various extension options\n     */\n    setConfig (configObj) {}\n\n    /**\n     * Gets the configurable options of the extension (e.g. cosmetics)\n     * @return {object} configObj The configuration object containing various extension options\n     */\n    getConfig () {\n      return {\n        calendarVisible: 'false'\n      };\n    }\n\n    /**\n     * Fusioncharts life cycle method for extension\n     */\n    init (require) {\n      var instance = this;\n      require([\n        'xAxis',\n        'yAxis',\n        'graphics',\n        'chart',\n        'dataset',\n        'PlotManager',\n        'canvasConfig',\n        'MarkerManager',\n        'reactiveModel',\n        'globalReactiveModel',\n        'spaceManagerInstance',\n        'extData',\n        'smartLabel',\n        function (\n              xAxis,\n              yAxis,\n              graphics,\n              chart,\n              dataset,\n              plotManager,\n              canvasConfig,\n              markerManager,\n              reactiveModel,\n              globalReactiveModel,\n              spaceManagerInstance,\n              extData,\n              smartLabel) {\n          instance.extData = extData;\n          instance.xAxis = xAxis;\n          instance.yAxis = yAxis;\n          instance.graphics = graphics;\n          instance.chart = chart;\n          instance.dataset = dataset;\n          instance.plotManager = plotManager;\n          instance.markerManager = markerManager;\n          instance.canvasConfig = canvasConfig;\n          instance.reactiveModel = reactiveModel;\n          instance.globalReactiveModel = globalReactiveModel;\n          instance.spaceManagerInstance = spaceManagerInstance;\n          instance.smartLabel = smartLabel;\n        }\n      ]);\n      this.spaceManagerInstance = instance.spaceManagerInstance;\n      this.globalReactiveModel = instance.globalReactiveModel;\n      this.startDt = instance.globalReactiveModel.model['x-axis-visible-range-start'];\n      this.endDt = instance.globalReactiveModel.model['x-axis-visible-range-end'];\n      this.startDataset = instance.globalReactiveModel.model['x-axis-absolute-range-start'];\n      this.endDataset = instance.globalReactiveModel.model['x-axis-absolute-range-end'];\n      this.toolbars = [];\n      this.measurement = {};\n      this.toolbars.push(this.createToolbar());\n      return this;\n    };\n\n    createToolbar () {\n      var toolbar,\n        self = this,\n        fromDateLabel,\n        toDateLabel,\n        group,\n        fromFormattedDate,\n        toFormattedDate;\n\n      self.fromDate = {};\n      self.toDate = {};\n\n      fromFormattedDate = moment(this.startDt, 'x').format('DD-MM-YYYY');\n\n      toFormattedDate = moment(this.endDt, 'x').format('DD-MM-YYYY');\n      toolbar = new this.HorizontalToolbar({\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      });\n\n      toolbar.setConfig({\n        'fill': '#FFFFFF',\n        'borderThickness': 0\n      });\n\n      group = new this.toolbox.ComponentGroup({\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      });\n\n      group.setConfig({\n        'fill': '#FFFFFF',\n        'borderThickness': 0\n      });\n\n      fromDateLabel = new this.toolbox.Label(\n        'From:', {\n          smartLabel: this.smartLabel,\n          paper: this.graphics.paper\n        }, {\n          text: {\n            style: {\n              'font-size': '13',\n              'font-family': '\"Lucida Grande\", sans-serif',\n              // 'font-weight': 'bold',\n              'fill': '#4B4B4B'\n            }\n          }\n        }\n      );\n\n      toDateLabel = new this.toolbox.Label(\n        'To:', {\n          smartLabel: this.smartLabel,\n          paper: this.graphics.paper\n        }, {\n          text: {\n            style: {\n              'font-size': '13',\n              'font-family': '\"Lucida Grande\", sans-serif',\n              // 'font-weight': 'bold',\n              'fill': '#4B4B4B'\n            }\n          }\n        }\n      );\n\n      self.fromDate = new this.toolbox.InputTextBoxSymbol({\n        width: 120,\n        height: 22\n      }, {\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      }, {\n        'strokeWidth': 1,\n        'stroke': '#ced5d4',\n        'symbolStrokeWidth': 0,\n        'radius': 2,\n        'margin': {\n          'right': 22\n        },\n        'btnTextStyle': {\n          'font-family': '\"Lucida Grande\", sans-serif',\n          'fontSize': 13\n        },\n        'label': fromFormattedDate,\n        // 'customConfig': {\n        //   'errored': {\n        //     'hover': {\n        //       'fill': '#FFEFEF',\n        //       'stroke-width': 1,\n        //       'stroke': '#D25353'\n        //     },\n        //     'normal': {\n        //       'fill': '#FFEFEF',\n        //       'stroke-width': 1,\n        //       'stroke': '#D25353'\n        //     },\n        //     'pressed': {\n        //       'fill': '#FFEFEF',\n        //       'stroke-width': 1,\n        //       'stroke': '#D25353'\n        //     }\n        //   }\n        // },\n        'labelFill': '#696969'\n      });\n\n      self.fromDate.setStateConfig({\n        pressed: {\n          config: {\n            pressed: {\n              'fill': '#FFFFFF',\n              'stroke-width': 1,\n              'stroke': '#1E1F1F'\n            },\n            normal: {\n              'fill': '#FFFFFF',\n              'stroke-width': 1,\n              'stroke': '#1E1F1F'\n            },\n            hover: {\n              'fill': '#FFFFFF',\n              'stroke-width': 1,\n              // 'stroke': '#1E1F1F'\n              'stroke': '#0000FF'\n            }\n          }\n        }\n      });\n\n      self.toDate = new this.toolbox.InputTextBoxSymbol({\n        width: 120,\n        height: 22\n      }, {\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      }, {\n        'strokeWidth': 1,\n        'stroke': '#ced5d4',\n        'symbolStrokeWidth': 0,\n        'radius': 2,\n        'btnTextStyle': {\n          'font-family': '\"Lucida Grande\", sans-serif',\n          'fontSize': 13\n        },\n        'label': toFormattedDate,\n        // 'customConfig': {\n        //   'errored': {\n        //     'hover': {\n        //       'fill': '#FFEFEF',\n        //       'stroke-width': 1,\n        //       'stroke': '#D25353'\n        //     },\n        //     'normal': {\n        //       'fill': '#FFEFEF',\n        //       'stroke-width': 1,\n        //       'stroke': '#D25353'\n        //     },\n        //     'pressed': {\n        //       'fill': '#FFEFEF',\n        //       'stroke-width': 1,\n        //       'stroke': '#D25353'\n        //     }\n        //   }\n        // },\n        'labelFill': '#696969'\n      });\n\n      self.toDate.setStateConfig({\n        pressed: {\n          config: {\n            pressed: {\n              'fill': '#FFFFFF',\n              'stroke-width': 1,\n              'stroke': '#1E1F1F'\n            },\n            normal: {\n              'fill': '#FFFFFF',\n              'stroke-width': 1,\n              'stroke': '#1E1F1F'\n            },\n            hover: {\n              'fill': '#FFFFFF',\n              'stroke-width': 1,\n              'stroke': '#1E1F1F'\n            }\n          }\n        }\n      });\n\n      self.fromDate.attachEventHandlers({\n        click: {\n          fn: () => {\n            self.fromDate.edit();\n            self.fromDate.updateVisual('pressed');\n          }\n        },\n        textOnBlur: function () {\n          self.fromDate.blur();\n          self.startDate = self.fromDate.getText();\n          self.fromDate.updateVisual('enabled');\n        }\n      });\n\n      self.toDate.attachEventHandlers({\n        click: {\n          fn: () => {\n            self.toDate.edit();\n            self.toDate.updateVisual('pressed');\n          }\n        },\n        textOnBlur: function () {\n          self.toDate.blur();\n          self.endDate = self.toDate.getText();\n          self.toDate.updateVisual('enabled');\n        }\n      });\n\n      // Temporary. Required to render the text box correctly. Commenting this out distorts toolbox.\n      this.SymbolStore.register('textBoxIcon', function (x, y, rad, w, h, padX, padY) {\n        var x1 = x - w / 2 + padX / 2,\n          x2 = x + w / 2 - padX / 2,\n          y1 = y - h / 2 + padY / 2,\n          y2 = y + h / 2 - padY / 2;\n\n        return ['M', x1, y1, 'L', x2, y1, 'L', x2, y2, 'L', x1, y2, 'Z'];\n      });\n\n      group.addSymbol(fromDateLabel);\n      group.addSymbol(self.fromDate);\n      group.addSymbol(toDateLabel);\n      group.addSymbol(self.toDate);\n      toolbar.addComponent(group);\n      return toolbar;\n    };\n\n    getLogicalSpace (availableWidth, availableHeight) {\n      var logicalSpace,\n        width = 0,\n        height = 0,\n        i,\n        ln;\n\n      availableWidth /= 2;\n\n      for (i = 0, ln = this.toolbars.length; i < ln; i++) {\n        logicalSpace = this.toolbars[i].getLogicalSpace(availableWidth, availableHeight);\n        width = Math.max(logicalSpace.width, width);\n        height += logicalSpace.height;\n        this.toolbars[i].width = logicalSpace.width;\n        this.toolbars[i].height = logicalSpace.height;\n      }\n      height += this.padding;\n      return {\n        width: width,\n        height: height\n      };\n    };\n\n    placeInCanvas () {\n      var self = this;\n      self.padding = 5;\n      self.spaceManagerInstance.add([{\n        name: function () {\n          return 'DateRangeChooserToolbox';\n        },\n        ref: function (obj) {\n          return obj['0'];\n        },\n        self: function () {\n          return self;\n        },\n        priority: function () {\n          return 2;\n        },\n        layout: function (obj) {\n          return obj[self.extData.layout] || obj['inline'];\n        },\n        orientation: [{\n          type: function (obj) {\n            return obj[self.extData.orientation] || obj['horizontal'];\n          },\n          position: [{\n            type: function (obj) {\n              return obj[self.extData.position] || obj['top'];\n            },\n            alignment: [{\n              type: function (obj) {\n                return obj[self.extData.alignment] || obj['right'];\n              },\n              dimensions: [function () {\n                var parent = this.getParentComponentGroup();\n                return self.getLogicalSpace(parent.getWidth(), parent.getHeight());\n              }]\n            }]\n          }]\n        }]\n      }]);\n    };\n\n    setDrawingConfiguration (x, y, width, height, group) {\n      var mes = this.measurement;\n      mes.x = x;\n      mes.y = y;\n      mes.width = width;\n      mes.height = height;\n\n      this.parentGroup = group;\n\n      return this;\n    };\n\n    draw (x, y, width, height, group) {\n      var measurement = this.measurement,\n        toolbars = this.toolbars,\n        ln,\n        i,\n        toolbar,\n        model = this.globalReactiveModel,\n        self = this;\n\n      x = x === undefined ? measurement.x : x;\n      y = y === undefined ? measurement.y : y;\n      width = width === undefined ? measurement.width : width;\n      height = height === undefined ? measurement.height : height;\n      group = group === undefined ? this.parentGroup : group;\n      if (width && height) {\n        this.isDrawn = true;\n        for (i = 0, ln = toolbars.length; i < ln; i++) {\n          toolbar = toolbars[i];\n          toolbar.draw(x, y, group);\n        }\n        model.onPropsChange(['x-axis-visible-range-start', 'x-axis-visible-range-end'],\n          (start, end) => {\n            // self.fromDate.blur(new Date(start[1]).toLocaleDateString());\n            // self.toDate.blur(new Date(end[1]).toLocaleDateString());\n            self.fromDate.blur(moment(start[1], 'x').format('DD-MM-YYYY'));\n            self.toDate.blur(moment(end[1], 'x').format('DD-MM-YYYY'));\n          }\n        );\n      }\n    };\n  }\n  return DateRange;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fcts-ext-daterange.js","//! moment.js\n//! version : 2.17.0\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\nvar hookCallback;\n\nfunction hooks () {\n    return hookCallback.apply(null, arguments);\n}\n\n// This is done to register the method called with moment()\n// without creating circular dependencies.\nfunction setHookCallback (callback) {\n    hookCallback = callback;\n}\n\nfunction isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n\nfunction isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n\nfunction isObjectEmpty(obj) {\n    var k;\n    for (k in obj) {\n        // even if its not own property I'd still call it non-empty\n        return false;\n    }\n    return true;\n}\n\nfunction isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n}\n\nfunction isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n}\n\nfunction map(arr, fn) {\n    var res = [], i;\n    for (i = 0; i < arr.length; ++i) {\n        res.push(fn(arr[i], i));\n    }\n    return res;\n}\n\nfunction hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nfunction extend(a, b) {\n    for (var i in b) {\n        if (hasOwnProp(b, i)) {\n            a[i] = b[i];\n        }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n        a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n        a.valueOf = b.valueOf;\n    }\n\n    return a;\n}\n\nfunction createUTC (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n}\n\nfunction defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty           : false,\n        unusedTokens    : [],\n        unusedInput     : [],\n        overflow        : -2,\n        charsLeftOver   : 0,\n        nullInput       : false,\n        invalidMonth    : null,\n        invalidFormat   : false,\n        userInvalidated : false,\n        iso             : false,\n        parsedDateParts : [],\n        meridiem        : null\n    };\n}\n\nfunction getParsingFlags(m) {\n    if (m._pf == null) {\n        m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n}\n\nvar some;\nif (Array.prototype.some) {\n    some = Array.prototype.some;\n} else {\n    some = function (fun) {\n        var t = Object(this);\n        var len = t.length >>> 0;\n\n        for (var i = 0; i < len; i++) {\n            if (i in t && fun.call(this, t[i], i, t)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n}\n\nvar some$1 = some;\n\nfunction isValid(m) {\n    if (m._isValid == null) {\n        var flags = getParsingFlags(m);\n        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\n            return i != null;\n        });\n        var isNowValid = !isNaN(m._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n\n        if (m._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n            m._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return m._isValid;\n}\n\nfunction createInvalid (flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n        extend(getParsingFlags(m), flags);\n    }\n    else {\n        getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n}\n\nfunction isUndefined(input) {\n    return input === void 0;\n}\n\n// Plugins that add properties should also add the key here (null value),\n// so we can properly clone ourselves.\nvar momentProperties = hooks.momentProperties = [];\n\nfunction copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n        to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n        to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n        to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n        to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n        to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n        to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n        to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n        to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n        to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n        to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n        for (i in momentProperties) {\n            prop = momentProperties[i];\n            val = from[prop];\n            if (!isUndefined(val)) {\n                to[prop] = val;\n            }\n        }\n    }\n\n    return to;\n}\n\nvar updateInProgress = false;\n\n// Moment prototype object\nfunction Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n        this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n        updateInProgress = true;\n        hooks.updateOffset(this);\n        updateInProgress = false;\n    }\n}\n\nfunction isMoment (obj) {\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n}\n\nfunction absFloor (number) {\n    if (number < 0) {\n        // -0 -> 0\n        return Math.ceil(number) || 0;\n    } else {\n        return Math.floor(number);\n    }\n}\n\nfunction toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n\n    return value;\n}\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i]) ||\n            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\nfunction warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false &&\n            (typeof console !==  'undefined') && console.warn) {\n        console.warn('Deprecation warning: ' + msg);\n    }\n}\n\nfunction deprecate(msg, fn) {\n    var firstTime = true;\n\n    return extend(function () {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(null, msg);\n        }\n        if (firstTime) {\n            var args = [];\n            var arg;\n            for (var i = 0; i < arguments.length; i++) {\n                arg = '';\n                if (typeof arguments[i] === 'object') {\n                    arg += '\\n[' + i + '] ';\n                    for (var key in arguments[0]) {\n                        arg += key + ': ' + arguments[0][key] + ', ';\n                    }\n                    arg = arg.slice(0, -2); // Remove trailing comma and space\n                } else {\n                    arg = arguments[i];\n                }\n                args.push(arg);\n            }\n            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n            firstTime = false;\n        }\n        return fn.apply(this, arguments);\n    }, fn);\n}\n\nvar deprecations = {};\n\nfunction deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n        warn(msg);\n        deprecations[name] = true;\n    }\n}\n\nhooks.suppressDeprecationWarnings = false;\nhooks.deprecationHandler = null;\n\nfunction isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n}\n\nfunction set (config) {\n    var prop, i;\n    for (i in config) {\n        prop = config[i];\n        if (isFunction(prop)) {\n            this[i] = prop;\n        } else {\n            this['_' + i] = prop;\n        }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _ordinalParseLenient.\n    this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\\d{1,2}/).source);\n}\n\nfunction mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig), prop;\n    for (prop in childConfig) {\n        if (hasOwnProp(childConfig, prop)) {\n            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                res[prop] = {};\n                extend(res[prop], parentConfig[prop]);\n                extend(res[prop], childConfig[prop]);\n            } else if (childConfig[prop] != null) {\n                res[prop] = childConfig[prop];\n            } else {\n                delete res[prop];\n            }\n        }\n    }\n    for (prop in parentConfig) {\n        if (hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])) {\n            // make sure changes to properties don't modify parent config\n            res[prop] = extend({}, res[prop]);\n        }\n    }\n    return res;\n}\n\nfunction Locale(config) {\n    if (config != null) {\n        this.set(config);\n    }\n}\n\nvar keys;\n\nif (Object.keys) {\n    keys = Object.keys;\n} else {\n    keys = function (obj) {\n        var i, res = [];\n        for (i in obj) {\n            if (hasOwnProp(obj, i)) {\n                res.push(i);\n            }\n        }\n        return res;\n    };\n}\n\nvar keys$1 = keys;\n\nvar defaultCalendar = {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n};\n\nfunction calendar (key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n}\n\nvar defaultLongDateFormat = {\n    LTS  : 'h:mm:ss A',\n    LT   : 'h:mm A',\n    L    : 'MM/DD/YYYY',\n    LL   : 'MMMM D, YYYY',\n    LLL  : 'MMMM D, YYYY h:mm A',\n    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n};\n\nfunction longDateFormat (key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n        return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n        return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n}\n\nvar defaultInvalidDate = 'Invalid date';\n\nfunction invalidDate () {\n    return this._invalidDate;\n}\n\nvar defaultOrdinal = '%d';\nvar defaultOrdinalParse = /\\d{1,2}/;\n\nfunction ordinal (number) {\n    return this._ordinal.replace('%d', number);\n}\n\nvar defaultRelativeTime = {\n    future : 'in %s',\n    past   : '%s ago',\n    s  : 'a few seconds',\n    m  : 'a minute',\n    mm : '%d minutes',\n    h  : 'an hour',\n    hh : '%d hours',\n    d  : 'a day',\n    dd : '%d days',\n    M  : 'a month',\n    MM : '%d months',\n    y  : 'a year',\n    yy : '%d years'\n};\n\nfunction relativeTime (number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return (isFunction(output)) ?\n        output(number, withoutSuffix, string, isFuture) :\n        output.replace(/%d/i, number);\n}\n\nfunction pastFuture (diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n}\n\nvar aliases = {};\n\nfunction addUnitAlias (unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n}\n\nfunction normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nfunction normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n\n    return normalizedInput;\n}\n\nvar priorities = {};\n\nfunction addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n}\n\nfunction getPrioritizedUnits(unitsObj) {\n    var units = [];\n    for (var u in unitsObj) {\n        units.push({unit: u, priority: priorities[u]});\n    }\n    units.sort(function (a, b) {\n        return a.priority - b.priority;\n    });\n    return units;\n}\n\nfunction makeGetSet (unit, keepTime) {\n    return function (value) {\n        if (value != null) {\n            set$1(this, unit, value);\n            hooks.updateOffset(this, keepTime);\n            return this;\n        } else {\n            return get(this, unit);\n        }\n    };\n}\n\nfunction get (mom, unit) {\n    return mom.isValid() ?\n        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n}\n\nfunction set$1 (mom, unit, value) {\n    if (mom.isValid()) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n    }\n}\n\n// MOMENTS\n\nfunction stringGet (units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n        return this[units]();\n    }\n    return this;\n}\n\n\nfunction stringSet (units, value) {\n    if (typeof units === 'object') {\n        units = normalizeObjectUnits(units);\n        var prioritized = getPrioritizedUnits(units);\n        for (var i = 0; i < prioritized.length; i++) {\n            this[prioritized[i].unit](units[prioritized[i].unit]);\n        }\n    } else {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units](value);\n        }\n    }\n    return this;\n}\n\nfunction zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? (forceSign ? '+' : '') : '-') +\n        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n}\n\nvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\nvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\nvar formatFunctions = {};\n\nvar formatTokenFunctions = {};\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken (token, padded, ordinal, callback) {\n    var func = callback;\n    if (typeof callback === 'string') {\n        func = function () {\n            return this[callback]();\n        };\n    }\n    if (token) {\n        formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = function () {\n            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n        };\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = function () {\n            return this.localeData().ordinal(func.apply(this, arguments), token);\n        };\n    }\n}\n\nfunction removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\nfunction makeFormatFunction(format) {\n    var array = format.match(formattingTokens), i, length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n        if (formatTokenFunctions[array[i]]) {\n            array[i] = formatTokenFunctions[array[i]];\n        } else {\n            array[i] = removeFormattingTokens(array[i]);\n        }\n    }\n\n    return function (mom) {\n        var output = '', i;\n        for (i = 0; i < length; i++) {\n            output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n        }\n        return output;\n    };\n}\n\n// format date using native date object\nfunction formatMoment(m, format) {\n    if (!m.isValid()) {\n        return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n    return formatFunctions[format](m);\n}\n\nfunction expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n        return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n\n    return format;\n}\n\nvar match1         = /\\d/;            //       0 - 9\nvar match2         = /\\d\\d/;          //      00 - 99\nvar match3         = /\\d{3}/;         //     000 - 999\nvar match4         = /\\d{4}/;         //    0000 - 9999\nvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\nvar match1to2      = /\\d\\d?/;         //       0 - 99\nvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\nvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nvar match1to3      = /\\d{1,3}/;       //       0 - 999\nvar match1to4      = /\\d{1,4}/;       //       0 - 9999\nvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nvar matchUnsigned  = /\\d+/;           //       0 - inf\nvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\nvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nvar matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n\nvar regexes = {};\n\nfunction addRegexToken (token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n}\n\nfunction getParseRegexForToken (token, config) {\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n        return p1 || p2 || p3 || p4;\n    }));\n}\n\nfunction regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nvar tokens = {};\n\nfunction addParseToken (token, callback) {\n    var i, func = callback;\n    if (typeof token === 'string') {\n        token = [token];\n    }\n    if (isNumber(callback)) {\n        func = function (input, array) {\n            array[callback] = toInt(input);\n        };\n    }\n    for (i = 0; i < token.length; i++) {\n        tokens[token[i]] = func;\n    }\n}\n\nfunction addWeekParseToken (token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n        config._w = config._w || {};\n        callback(input, config._w, config, token);\n    });\n}\n\nfunction addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n}\n\nvar YEAR = 0;\nvar MONTH = 1;\nvar DATE = 2;\nvar HOUR = 3;\nvar MINUTE = 4;\nvar SECOND = 5;\nvar MILLISECOND = 6;\nvar WEEK = 7;\nvar WEEKDAY = 8;\n\nvar indexOf;\n\nif (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n} else {\n    indexOf = function (o) {\n        // I know\n        var i;\n        for (i = 0; i < this.length; ++i) {\n            if (this[i] === o) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nvar indexOf$1 = indexOf;\n\nfunction daysInMonth(year, month) {\n    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\n\n// FORMATTING\n\naddFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n});\n\naddFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n});\n\naddFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n});\n\n// ALIASES\n\naddUnitAlias('month', 'M');\n\n// PRIORITY\n\naddUnitPriority('month', 8);\n\n// PARSING\n\naddRegexToken('M',    match1to2);\naddRegexToken('MM',   match1to2, match2);\naddRegexToken('MMM',  function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n});\naddRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n});\n\naddParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n});\n\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n        array[MONTH] = month;\n    } else {\n        getParsingFlags(config).invalidMonth = input;\n    }\n});\n\n// LOCALES\n\nvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nfunction localeMonths (m, format) {\n    if (!m) {\n        return this._months;\n    }\n    return isArray(this._months) ? this._months[m.month()] :\n        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nfunction localeMonthsShort (m, format) {\n    if (!m) {\n        return this._monthsShort;\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nfunction handleStrictParse(monthName, format, strict) {\n    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n        // this is not used\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n        for (i = 0; i < 12; ++i) {\n            mom = createUTC([2000, i]);\n            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeMonthsParse (monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n        return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        if (strict && !this._longMonthsParse[i]) {\n            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n        }\n        if (!strict && !this._monthsParse[i]) {\n            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction setMonth (mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n        // No op\n        return mom;\n    }\n\n    if (typeof value === 'string') {\n        if (/^\\d+$/.test(value)) {\n            value = toInt(value);\n        } else {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (!isNumber(value)) {\n                return mom;\n            }\n        }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n    return mom;\n}\n\nfunction getSetMonth (value) {\n    if (value != null) {\n        setMonth(this, value);\n        hooks.updateOffset(this, true);\n        return this;\n    } else {\n        return get(this, 'Month');\n    }\n}\n\nfunction getDaysInMonth () {\n    return daysInMonth(this.year(), this.month());\n}\n\nvar defaultMonthsShortRegex = matchWord;\nfunction monthsShortRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsShortStrictRegex;\n        } else {\n            return this._monthsShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n}\n\nvar defaultMonthsRegex = matchWord;\nfunction monthsRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsStrictRegex;\n        } else {\n            return this._monthsRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n}\n\nfunction computeMonthsParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom;\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        shortPieces.push(this.monthsShort(mom, ''));\n        longPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\naddFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n});\n\naddFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n});\n\naddFormatToken(0, ['YYYY',   4],       0, 'year');\naddFormatToken(0, ['YYYYY',  5],       0, 'year');\naddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n// ALIASES\n\naddUnitAlias('year', 'y');\n\n// PRIORITIES\n\naddUnitPriority('year', 1);\n\n// PARSING\n\naddRegexToken('Y',      matchSigned);\naddRegexToken('YY',     match1to2, match2);\naddRegexToken('YYYY',   match1to4, match4);\naddRegexToken('YYYYY',  match1to6, match6);\naddRegexToken('YYYYYY', match1to6, match6);\n\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\naddParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n});\naddParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n});\naddParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n});\n\n// HELPERS\n\nfunction daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\n\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n// HOOKS\n\nhooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n};\n\n// MOMENTS\n\nvar getSetYear = makeGetSet('FullYear', true);\n\nfunction getIsLeapYear () {\n    return isLeapYear(this.year());\n}\n\nfunction createDate (y, m, d, h, M, s, ms) {\n    //can't just apply() to create a date:\n    //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n    var date = new Date(y, m, d, h, M, s, ms);\n\n    //the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\nfunction createUTCDate (y) {\n    var date = new Date(Date.UTC.apply(null, arguments));\n\n    //the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\n\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n        fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n    return -fwdlw + fwd - 1;\n}\n\n//http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear, resDayOfYear;\n\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\n\nfunction weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek, resYear;\n\n    if (week < 1) {\n        resYear = mom.year() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\n        resYear = mom.year() + 1;\n    } else {\n        resYear = mom.year();\n        resWeek = week;\n    }\n\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\n\nfunction weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\n// FORMATTING\n\naddFormatToken('w', ['ww', 2], 'wo', 'week');\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n// ALIASES\n\naddUnitAlias('week', 'w');\naddUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\naddUnitPriority('week', 5);\naddUnitPriority('isoWeek', 5);\n\n// PARSING\n\naddRegexToken('w',  match1to2);\naddRegexToken('ww', match1to2, match2);\naddRegexToken('W',  match1to2);\naddRegexToken('WW', match1to2, match2);\n\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n});\n\n// HELPERS\n\n// LOCALES\n\nfunction localeWeek (mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n}\n\nvar defaultLocaleWeek = {\n    dow : 0, // Sunday is the first day of the week.\n    doy : 6  // The week that contains Jan 1st is the first week of the year.\n};\n\nfunction localeFirstDayOfWeek () {\n    return this._week.dow;\n}\n\nfunction localeFirstDayOfYear () {\n    return this._week.doy;\n}\n\n// MOMENTS\n\nfunction getSetWeek (input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\nfunction getSetISOWeek (input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\n// FORMATTING\n\naddFormatToken('d', 0, 'do', 'day');\n\naddFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n});\n\naddFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n});\n\naddFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n});\n\naddFormatToken('e', 0, 0, 'weekday');\naddFormatToken('E', 0, 0, 'isoWeekday');\n\n// ALIASES\n\naddUnitAlias('day', 'd');\naddUnitAlias('weekday', 'e');\naddUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\naddUnitPriority('day', 11);\naddUnitPriority('weekday', 11);\naddUnitPriority('isoWeekday', 11);\n\n// PARSING\n\naddRegexToken('d',    match1to2);\naddRegexToken('e',    match1to2);\naddRegexToken('E',    match1to2);\naddRegexToken('dd',   function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n});\naddRegexToken('ddd',   function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n});\naddRegexToken('dddd',   function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n});\n\naddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n        week.d = weekday;\n    } else {\n        getParsingFlags(config).invalidWeekday = input;\n    }\n});\n\naddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n});\n\n// HELPERS\n\nfunction parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n        return input;\n    }\n\n    if (!isNaN(input)) {\n        return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n        return input;\n    }\n\n    return null;\n}\n\nfunction parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n}\n\n// LOCALES\n\nvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nfunction localeWeekdays (m, format) {\n    if (!m) {\n        return this._weekdays;\n    }\n    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n}\n\nvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nfunction localeWeekdaysShort (m) {\n    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n}\n\nvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nfunction localeWeekdaysMin (m) {\n    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n}\n\nfunction handleStrictParse$1(weekdayName, format, strict) {\n    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._minWeekdaysParse = [];\n\n        for (i = 0; i < 7; ++i) {\n            mom = createUTC([2000, 1]).day(i);\n            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeWeekdaysParse (weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n        return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._minWeekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n\n        mom = createUTC([2000, 1]).day(i);\n        if (strict && !this._fullWeekdaysParse[i]) {\n            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n        }\n        if (!this._weekdaysParse[i]) {\n            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction getSetDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n    if (input != null) {\n        input = parseWeekday(input, this.localeData());\n        return this.add(input - day, 'd');\n    } else {\n        return day;\n    }\n}\n\nfunction getSetLocaleDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n}\n\nfunction getSetISODayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n        var weekday = parseIsoWeekday(input, this.localeData());\n        return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n        return this.day() || 7;\n    }\n}\n\nvar defaultWeekdaysRegex = matchWord;\nfunction weekdaysRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysStrictRegex;\n        } else {\n            return this._weekdaysRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            this._weekdaysRegex = defaultWeekdaysRegex;\n        }\n        return this._weekdaysStrictRegex && isStrict ?\n            this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n}\n\nvar defaultWeekdaysShortRegex = matchWord;\nfunction weekdaysShortRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysShortStrictRegex;\n        } else {\n            return this._weekdaysShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n        }\n        return this._weekdaysShortStrictRegex && isStrict ?\n            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n}\n\nvar defaultWeekdaysMinRegex = matchWord;\nfunction weekdaysMinRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysMinStrictRegex;\n        } else {\n            return this._weekdaysMinRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n        }\n        return this._weekdaysMinStrictRegex && isStrict ?\n            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n}\n\n\nfunction computeWeekdaysParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom, minp, shortp, longp;\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, 1]).day(i);\n        minp = this.weekdaysMin(mom, '');\n        shortp = this.weekdaysShort(mom, '');\n        longp = this.weekdays(mom, '');\n        minPieces.push(minp);\n        shortPieces.push(shortp);\n        longPieces.push(longp);\n        mixedPieces.push(minp);\n        mixedPieces.push(shortp);\n        mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\nfunction hFormat() {\n    return this.hours() % 12 || 12;\n}\n\nfunction kFormat() {\n    return this.hours() || 24;\n}\n\naddFormatToken('H', ['HH', 2], 0, 'hour');\naddFormatToken('h', ['hh', 2], 0, hFormat);\naddFormatToken('k', ['kk', 2], 0, kFormat);\n\naddFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\naddFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\nfunction meridiem (token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n}\n\nmeridiem('a', true);\nmeridiem('A', false);\n\n// ALIASES\n\naddUnitAlias('hour', 'h');\n\n// PRIORITY\naddUnitPriority('hour', 13);\n\n// PARSING\n\nfunction matchMeridiem (isStrict, locale) {\n    return locale._meridiemParse;\n}\n\naddRegexToken('a',  matchMeridiem);\naddRegexToken('A',  matchMeridiem);\naddRegexToken('H',  match1to2);\naddRegexToken('h',  match1to2);\naddRegexToken('HH', match1to2, match2);\naddRegexToken('hh', match1to2, match2);\n\naddRegexToken('hmm', match3to4);\naddRegexToken('hmmss', match5to6);\naddRegexToken('Hmm', match3to4);\naddRegexToken('Hmmss', match5to6);\n\naddParseToken(['H', 'HH'], HOUR);\naddParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n});\naddParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n});\naddParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n});\n\n// LOCALES\n\nfunction localeIsPM (input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return ((input + '').toLowerCase().charAt(0) === 'p');\n}\n\nvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nfunction localeMeridiem (hours, minutes, isLower) {\n    if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n    } else {\n        return isLower ? 'am' : 'AM';\n    }\n}\n\n\n// MOMENTS\n\n// Setting the hour should keep the time, because the user explicitly\n// specified which hour he wants. So trying to maintain the same hour (in\n// a new timezone) makes sense. Adding/subtracting hours does not follow\n// this rule.\nvar getSetHour = makeGetSet('Hours', true);\n\n// months\n// week\n// weekdays\n// meridiem\nvar baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    ordinalParse: defaultOrdinalParse,\n    relativeTime: defaultRelativeTime,\n\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n\n    week: defaultLocaleWeek,\n\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n// internal storage for locale config files\nvar locales = {};\nvar localeFamilies = {};\nvar globalLocale;\n\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n    var i = 0, j, next, locale, split;\n\n    while (i < names.length) {\n        split = normalizeLocale(names[i]).split('-');\n        j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                //the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\n\nfunction loadLocale(name) {\n    var oldLocale = null;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (!locales[name] && (typeof module !== 'undefined') &&\n            module && module.exports) {\n        try {\n            oldLocale = globalLocale._abbr;\n            require('./locale/' + name);\n            // because defineLocale currently also sets the global locale, we\n            // want to undo that for lazy loaded locales\n            getSetGlobalLocale(oldLocale);\n        } catch (e) { }\n    }\n    return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale (key, values) {\n    var data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        }\n        else {\n            data = defineLocale(key, values);\n        }\n\n        if (data) {\n            // moment.duration._locale = moment._locale = data;\n            globalLocale = data;\n        }\n    }\n\n    return globalLocale._abbr;\n}\n\nfunction defineLocale (name, config) {\n    if (config !== null) {\n        var parentConfig = baseConfig;\n        config.abbr = name;\n        if (locales[name] != null) {\n            deprecateSimple('defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                    'an existing locale. moment.defineLocale(localeName, ' +\n                    'config) should only be used for creating a new locale ' +\n                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n            parentConfig = locales[name]._config;\n        } else if (config.parentLocale != null) {\n            if (locales[config.parentLocale] != null) {\n                parentConfig = locales[config.parentLocale]._config;\n            } else {\n                if (!localeFamilies[config.parentLocale]) {\n                    localeFamilies[config.parentLocale] = [];\n                }\n                localeFamilies[config.parentLocale].push({\n                    name: name,\n                    config: config\n                });\n                return null;\n            }\n        }\n        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n        if (localeFamilies[name]) {\n            localeFamilies[name].forEach(function (x) {\n                defineLocale(x.name, x.config);\n            });\n        }\n\n        // backwards compat for now: also set the locale\n        // make sure we set the locale AFTER all child locales have been\n        // created, so we won't end up with the child locale set.\n        getSetGlobalLocale(name);\n\n\n        return locales[name];\n    } else {\n        // useful for testing\n        delete locales[name];\n        return null;\n    }\n}\n\nfunction updateLocale(name, config) {\n    if (config != null) {\n        var locale, parentConfig = baseConfig;\n        // MERGE\n        if (locales[name] != null) {\n            parentConfig = locales[name]._config;\n        }\n        config = mergeConfigs(parentConfig, config);\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    } else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            } else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n\n// returns locale data\nfunction getLocale (key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n        key = key._locale._abbr;\n    }\n\n    if (!key) {\n        return globalLocale;\n    }\n\n    if (!isArray(key)) {\n        //short-circuit everything else\n        locale = loadLocale(key);\n        if (locale) {\n            return locale;\n        }\n        key = [key];\n    }\n\n    return chooseLocale(key);\n}\n\nfunction listLocales() {\n    return keys$1(locales);\n}\n\nfunction checkOverflow (m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n        overflow =\n            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n            -1;\n\n        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n\n        getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nvar isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/],\n    ['YYYYMMDD', /\\d{8}/],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/]\n];\n\n// iso time formats and regexes\nvar isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\n\nvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n// date from iso format\nfunction configFromISO(config) {\n    var i, l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime, dateFormat, timeFormat, tzFormat;\n\n    if (match) {\n        getParsingFlags(config).iso = true;\n\n        for (i = 0, l = isoDates.length; i < l; i++) {\n            if (isoDates[i][1].exec(match[1])) {\n                dateFormat = isoDates[i][0];\n                allowTime = isoDates[i][2] !== false;\n                break;\n            }\n        }\n        if (dateFormat == null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[3]) {\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(match[3])) {\n                    // match[2] should be 'T' or space\n                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                    break;\n                }\n            }\n            if (timeFormat == null) {\n                config._isValid = false;\n                return;\n            }\n        }\n        if (!allowTime && timeFormat != null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[4]) {\n            if (tzRegex.exec(match[4])) {\n                tzFormat = 'Z';\n            } else {\n                config._isValid = false;\n                return;\n            }\n        }\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n        configFromStringAndFormat(config);\n    } else {\n        config._isValid = false;\n    }\n}\n\n// date from iso format or fallback\nfunction configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return;\n    }\n\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n        hooks.createFromInputFallback(config);\n    }\n}\n\nhooks.createFromInputFallback = deprecate(\n    'value provided is not in a recognized ISO format. moment construction falls back to js Date(), ' +\n    'which is not reliable across all browsers and versions. Non ISO date formats are ' +\n    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n    function (config) {\n        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n    }\n);\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c) {\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\nfunction currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray (config) {\n    var i, date, input = [], currentDate, yearToUse;\n\n    if (config._d) {\n        return;\n    }\n\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n        if (config._dayOfYear > daysInYear(yearToUse)) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n}\n\nfunction dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4;\n\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    } else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n\n        var curWeek = weekOfYear(createLocal(), dow, doy);\n\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n        // Default to current week.\n        week = defaults(w.w, curWeek.week);\n\n        if (w.d != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w.d;\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        } else if (w.e != null) {\n            // local weekday -- counting starts from begining of week\n            weekday = w.e + dow;\n            if (w.e < 0 || w.e > 6) {\n                weekdayOverflow = true;\n            }\n        } else {\n            // default to begining of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    } else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n}\n\n// constant that refers to the ISO standard\nhooks.ISO_8601 = function () {};\n\n// date from string and format string\nfunction configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n        configFromISO(config);\n        return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n        i, parsedInput, tokens, token, skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n        // console.log('token', token, 'parsedInput', parsedInput,\n        //         'regex', getParseRegexForToken(token, config));\n        if (parsedInput) {\n            skipped = string.substr(0, string.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            }\n            else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        }\n        else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n        getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    configFromArray(config);\n    checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap (locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n        // Fallback\n        isPm = locale.isPM(meridiem);\n        if (isPm && hour < 12) {\n            hour += 12;\n        }\n        if (!isPm && hour === 12) {\n            hour = 0;\n        }\n        return hour;\n    } else {\n        // this is not supposed to happen\n        return hour;\n    }\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config) {\n    var tempConfig,\n        bestMoment,\n\n        scoreToBeat,\n        i,\n        currentScore;\n\n    if (config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        config._d = new Date(NaN);\n        return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = copyConfig({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n        //or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n        getParsingFlags(tempConfig).score = currentScore;\n\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n\n    extend(config, bestMoment || tempConfig);\n}\n\nfunction configFromObject(config) {\n    if (config._d) {\n        return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n        return obj && parseInt(obj, 10);\n    });\n\n    configFromArray(config);\n}\n\nfunction createFromConfig (config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n        // Adding is smart enough around DST\n        res.add(1, 'd');\n        res._nextDay = undefined;\n    }\n\n    return res;\n}\n\nfunction prepareConfig (config) {\n    var input = config._i,\n        format = config._f;\n\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid({nullInput: true});\n    }\n\n    if (typeof input === 'string') {\n        config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n        return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n        config._d = input;\n    } else if (isArray(format)) {\n        configFromStringAndArray(config);\n    } else if (format) {\n        configFromStringAndFormat(config);\n    }  else {\n        configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n        config._d = null;\n    }\n\n    return config;\n}\n\nfunction configFromInput(config) {\n    var input = config._i;\n    if (input === undefined) {\n        config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n        config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n        configFromString(config);\n    } else if (isArray(input)) {\n        config._a = map(input.slice(0), function (obj) {\n            return parseInt(obj, 10);\n        });\n        configFromArray(config);\n    } else if (typeof(input) === 'object') {\n        configFromObject(config);\n    } else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    } else {\n        hooks.createFromInputFallback(config);\n    }\n}\n\nfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n        strict = locale;\n        locale = undefined;\n    }\n\n    if ((isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)) {\n        input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n\n    return createFromConfig(c);\n}\n\nfunction createLocal (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n}\n\nvar prototypeMin = deprecate(\n    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other < this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\nvar prototypeMax = deprecate(\n    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other > this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\n// Pick a moment m from moments so that m[fn](other) is true for all\n// other. This relies on the function fn to be transitive.\n//\n// moments should either be an array of moment objects or an array, whose\n// first element is an array of moment objects.\nfunction pickBy(fn, moments) {\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n        moments = moments[0];\n    }\n    if (!moments.length) {\n        return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n        if (!moments[i].isValid() || moments[i][fn](res)) {\n            res = moments[i];\n        }\n    }\n    return res;\n}\n\n// TODO: Use [].sort instead?\nfunction min () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isBefore', args);\n}\n\nfunction max () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isAfter', args);\n}\n\nvar now = function () {\n    return Date.now ? Date.now() : +(new Date());\n};\n\nfunction Duration (duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n        seconds * 1e3 + // 1000\n        minutes * 6e4 + // 1000 * 60\n        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n        weeks * 7;\n    // It is impossible translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n        quarters * 3 +\n        years * 12;\n\n    this._data = {};\n\n    this._locale = getLocale();\n\n    this._bubble();\n}\n\nfunction isDuration (obj) {\n    return obj instanceof Duration;\n}\n\nfunction absRound (number) {\n    if (number < 0) {\n        return Math.round(-1 * number) * -1;\n    } else {\n        return Math.round(number);\n    }\n}\n\n// FORMATTING\n\nfunction offset (token, separator) {\n    addFormatToken(token, 0, 0, function () {\n        var offset = this.utcOffset();\n        var sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n}\n\noffset('Z', ':');\noffset('ZZ', '');\n\n// PARSING\n\naddRegexToken('Z',  matchShortOffset);\naddRegexToken('ZZ', matchShortOffset);\naddParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n});\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n        return null;\n    }\n\n    var chunk   = matches[matches.length - 1] || [];\n    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n    return minutes === 0 ?\n      0 :\n      parts[0] === '+' ? minutes : -minutes;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, model) {\n    var res, diff;\n    if (model._isUTC) {\n        res = model.clone();\n        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n        // Use low-level api, because this fn is low-level api.\n        res._d.setTime(res._d.valueOf() + diff);\n        hooks.updateOffset(res, false);\n        return res;\n    } else {\n        return createLocal(input).local();\n    }\n}\n\nfunction getDateOffset (m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\nhooks.updateOffset = function () {};\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getSetOffset (input, keepLocalTime) {\n    var offset = this._offset || 0,\n        localAdjust;\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    if (input != null) {\n        if (typeof input === 'string') {\n            input = offsetFromString(matchShortOffset, input);\n            if (input === null) {\n                return this;\n            }\n        } else if (Math.abs(input) < 16) {\n            input = input * 60;\n        }\n        if (!this._isUTC && keepLocalTime) {\n            localAdjust = getDateOffset(this);\n        }\n        this._offset = input;\n        this._isUTC = true;\n        if (localAdjust != null) {\n            this.add(localAdjust, 'm');\n        }\n        if (offset !== input) {\n            if (!keepLocalTime || this._changeInProgress) {\n                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n            } else if (!this._changeInProgress) {\n                this._changeInProgress = true;\n                hooks.updateOffset(this, true);\n                this._changeInProgress = null;\n            }\n        }\n        return this;\n    } else {\n        return this._isUTC ? offset : getDateOffset(this);\n    }\n}\n\nfunction getSetZone (input, keepLocalTime) {\n    if (input != null) {\n        if (typeof input !== 'string') {\n            input = -input;\n        }\n\n        this.utcOffset(input, keepLocalTime);\n\n        return this;\n    } else {\n        return -this.utcOffset();\n    }\n}\n\nfunction setOffsetToUTC (keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n}\n\nfunction setOffsetToLocal (keepLocalTime) {\n    if (this._isUTC) {\n        this.utcOffset(0, keepLocalTime);\n        this._isUTC = false;\n\n        if (keepLocalTime) {\n            this.subtract(getDateOffset(this), 'm');\n        }\n    }\n    return this;\n}\n\nfunction setOffsetToParsedOffset () {\n    if (this._tzm != null) {\n        this.utcOffset(this._tzm);\n    } else if (typeof this._i === 'string') {\n        var tZone = offsetFromString(matchOffset, this._i);\n        if (tZone != null) {\n            this.utcOffset(tZone);\n        }\n        else {\n            this.utcOffset(0, true);\n        }\n    }\n    return this;\n}\n\nfunction hasAlignedHourOffset (input) {\n    if (!this.isValid()) {\n        return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n\n    return (this.utcOffset() - input) % 60 === 0;\n}\n\nfunction isDaylightSavingTime () {\n    return (\n        this.utcOffset() > this.clone().month(0).utcOffset() ||\n        this.utcOffset() > this.clone().month(5).utcOffset()\n    );\n}\n\nfunction isDaylightSavingTimeShifted () {\n    if (!isUndefined(this._isDSTShifted)) {\n        return this._isDSTShifted;\n    }\n\n    var c = {};\n\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n        this._isDSTShifted = this.isValid() &&\n            compareArrays(c._a, other.toArray()) > 0;\n    } else {\n        this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n}\n\nfunction isLocal () {\n    return this.isValid() ? !this._isUTC : false;\n}\n\nfunction isUtcOffset () {\n    return this.isValid() ? this._isUTC : false;\n}\n\nfunction isUtc () {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}\n\n// ASP.NET json date format regex\nvar aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nvar isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\n\nfunction createDuration (input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n        match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n        duration = {\n            ms : input._milliseconds,\n            d  : input._days,\n            M  : input._months\n        };\n    } else if (isNumber(input)) {\n        duration = {};\n        if (key) {\n            duration[key] = input;\n        } else {\n            duration.milliseconds = input;\n        }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y  : 0,\n            d  : toInt(match[DATE])                         * sign,\n            h  : toInt(match[HOUR])                         * sign,\n            m  : toInt(match[MINUTE])                       * sign,\n            s  : toInt(match[SECOND])                       * sign,\n            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n        };\n    } else if (!!(match = isoRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y : parseIso(match[2], sign),\n            M : parseIso(match[3], sign),\n            w : parseIso(match[4], sign),\n            d : parseIso(match[5], sign),\n            h : parseIso(match[6], sign),\n            m : parseIso(match[7], sign),\n            s : parseIso(match[8], sign)\n        };\n    } else if (duration == null) {// checks for null or undefined\n        duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n        duration = {};\n        duration.ms = diffRes.milliseconds;\n        duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n        ret._locale = input._locale;\n    }\n\n    return ret;\n}\n\ncreateDuration.fn = Duration.prototype;\n\nfunction parseIso (inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base, other) {\n    var res = {milliseconds: 0, months: 0};\n\n    res.months = other.month() - base.month() +\n        (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n        --res.months;\n    }\n\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n    return res;\n}\n\nfunction momentsDifference(base, other) {\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n        return {milliseconds: 0, months: 0};\n    }\n\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n        res = positiveMomentsDifference(base, other);\n    } else {\n        res = positiveMomentsDifference(other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n\n    return res;\n}\n\n// TODO: remove 'name' arg after deprecation is removed\nfunction createAdder(direction, name) {\n    return function (val, period) {\n        var dur, tmp;\n        //invert the arguments, but complain about it\n        if (period !== null && !isNaN(+period)) {\n            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n            tmp = val; val = period; period = tmp;\n        }\n\n        val = typeof val === 'string' ? +val : val;\n        dur = createDuration(val, period);\n        addSubtract(this, dur, direction);\n        return this;\n    };\n}\n\nfunction addSubtract (mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n        // No op\n        return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (milliseconds) {\n        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (days) {\n        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (months) {\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (updateOffset) {\n        hooks.updateOffset(mom, days || months);\n    }\n}\n\nvar add      = createAdder(1, 'add');\nvar subtract = createAdder(-1, 'subtract');\n\nfunction getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' :\n            diff < -1 ? 'lastWeek' :\n            diff < 0 ? 'lastDay' :\n            diff < 1 ? 'sameDay' :\n            diff < 2 ? 'nextDay' :\n            diff < 7 ? 'nextWeek' : 'sameElse';\n}\n\nfunction calendar$1 (time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n}\n\nfunction clone () {\n    return new Moment(this);\n}\n\nfunction isAfter (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() > localInput.valueOf();\n    } else {\n        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n}\n\nfunction isBefore (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() < localInput.valueOf();\n    } else {\n        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n}\n\nfunction isBetween (from, to, units, inclusivity) {\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n}\n\nfunction isSame (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(units || 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() === localInput.valueOf();\n    } else {\n        inputMs = localInput.valueOf();\n        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n}\n\nfunction isSameOrAfter (input, units) {\n    return this.isSame(input, units) || this.isAfter(input,units);\n}\n\nfunction isSameOrBefore (input, units) {\n    return this.isSame(input, units) || this.isBefore(input,units);\n}\n\nfunction diff (input, units, asFloat) {\n    var that,\n        zoneDelta,\n        delta, output;\n\n    if (!this.isValid()) {\n        return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n        return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    if (units === 'year' || units === 'month' || units === 'quarter') {\n        output = monthDiff(this, that);\n        if (units === 'quarter') {\n            output = output / 3;\n        } else if (units === 'year') {\n            output = output / 12;\n        }\n    } else {\n        delta = this - that;\n        output = units === 'second' ? delta / 1e3 : // 1000\n            units === 'minute' ? delta / 6e4 : // 1000 * 60\n            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n            delta;\n    }\n    return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff (a, b) {\n    // difference in months\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2, adjust;\n\n    if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n}\n\nhooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\nhooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\nfunction toString () {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n}\n\nfunction toISOString () {\n    var m = this.clone().utc();\n    if (0 < m.year() && m.year() <= 9999) {\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            return this.toDate().toISOString();\n        } else {\n            return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n        }\n    } else {\n        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n    }\n}\n\n/**\n * Return a human readable representation of a moment that can\n * also be evaluated to get a new moment which is the same\n *\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n */\nfunction inspect () {\n    if (!this.isValid()) {\n        return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment';\n    var zone = '';\n    if (!this.isLocal()) {\n        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n        zone = 'Z';\n    }\n    var prefix = '[' + func + '(\"]';\n    var year = (0 < this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n\n    return this.format(prefix + year + datetime + suffix);\n}\n\nfunction format (inputString) {\n    if (!inputString) {\n        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n}\n\nfunction from (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction fromNow (withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n}\n\nfunction to (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction toNow (withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n}\n\n// If passed a locale key, it will set the locale for this\n// instance.  Otherwise, it will return the locale configuration\n// variables for this instance.\nfunction locale (key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n        return this._locale._abbr;\n    } else {\n        newLocaleData = getLocale(key);\n        if (newLocaleData != null) {\n            this._locale = newLocaleData;\n        }\n        return this;\n    }\n}\n\nvar lang = deprecate(\n    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n    function (key) {\n        if (key === undefined) {\n            return this.localeData();\n        } else {\n            return this.locale(key);\n        }\n    }\n);\n\nfunction localeData () {\n    return this._locale;\n}\n\nfunction startOf (units) {\n    units = normalizeUnits(units);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n    }\n\n    // weeks are a special case\n    if (units === 'week') {\n        this.weekday(0);\n    }\n    if (units === 'isoWeek') {\n        this.isoWeekday(1);\n    }\n\n    // quarters are also special\n    if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n}\n\nfunction endOf (units) {\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond') {\n        return this;\n    }\n\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (units === 'date') {\n        units = 'day';\n    }\n\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n}\n\nfunction valueOf () {\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\n}\n\nfunction unix () {\n    return Math.floor(this.valueOf() / 1000);\n}\n\nfunction toDate () {\n    return new Date(this.valueOf());\n}\n\nfunction toArray () {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n}\n\nfunction toObject () {\n    var m = this;\n    return {\n        years: m.year(),\n        months: m.month(),\n        date: m.date(),\n        hours: m.hours(),\n        minutes: m.minutes(),\n        seconds: m.seconds(),\n        milliseconds: m.milliseconds()\n    };\n}\n\nfunction toJSON () {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n}\n\nfunction isValid$1 () {\n    return isValid(this);\n}\n\nfunction parsingFlags () {\n    return extend({}, getParsingFlags(this));\n}\n\nfunction invalidAt () {\n    return getParsingFlags(this).overflow;\n}\n\nfunction creationData() {\n    return {\n        input: this._i,\n        format: this._f,\n        locale: this._locale,\n        isUTC: this._isUTC,\n        strict: this._strict\n    };\n}\n\n// FORMATTING\n\naddFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n});\n\naddFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n});\n\nfunction addWeekYearFormatToken (token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n}\n\naddWeekYearFormatToken('gggg',     'weekYear');\naddWeekYearFormatToken('ggggg',    'weekYear');\naddWeekYearFormatToken('GGGG',  'isoWeekYear');\naddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n// ALIASES\n\naddUnitAlias('weekYear', 'gg');\naddUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\naddUnitPriority('weekYear', 1);\naddUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\naddRegexToken('G',      matchSigned);\naddRegexToken('g',      matchSigned);\naddRegexToken('GG',     match1to2, match2);\naddRegexToken('gg',     match1to2, match2);\naddRegexToken('GGGG',   match1to4, match4);\naddRegexToken('gggg',   match1to4, match4);\naddRegexToken('GGGGG',  match1to6, match6);\naddRegexToken('ggggg',  match1to6, match6);\n\naddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n});\n\naddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n});\n\n// MOMENTS\n\nfunction getSetWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy);\n}\n\nfunction getSetISOWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n}\n\nfunction getISOWeeksInYear () {\n    return weeksInYear(this.year(), 1, 4);\n}\n\nfunction getWeeksInYear () {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n}\n\nfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n    if (input == null) {\n        return weekOfYear(this, dow, doy).year;\n    } else {\n        weeksTarget = weeksInYear(input, dow, doy);\n        if (week > weeksTarget) {\n            week = weeksTarget;\n        }\n        return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n}\n\nfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n}\n\n// FORMATTING\n\naddFormatToken('Q', 0, 'Qo', 'quarter');\n\n// ALIASES\n\naddUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\naddUnitPriority('quarter', 7);\n\n// PARSING\n\naddRegexToken('Q', match1);\naddParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n});\n\n// MOMENTS\n\nfunction getSetQuarter (input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n}\n\n// FORMATTING\n\naddFormatToken('D', ['DD', 2], 'Do', 'date');\n\n// ALIASES\n\naddUnitAlias('date', 'D');\n\n// PRIOROITY\naddUnitPriority('date', 9);\n\n// PARSING\n\naddRegexToken('D',  match1to2);\naddRegexToken('DD', match1to2, match2);\naddRegexToken('Do', function (isStrict, locale) {\n    return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;\n});\n\naddParseToken(['D', 'DD'], DATE);\naddParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0], 10);\n});\n\n// MOMENTS\n\nvar getSetDayOfMonth = makeGetSet('Date', true);\n\n// FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n// ALIASES\n\naddUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\naddUnitPriority('dayOfYear', 4);\n\n// PARSING\n\naddRegexToken('DDD',  match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n});\n\n// HELPERS\n\n// MOMENTS\n\nfunction getSetDayOfYear (input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n}\n\n// FORMATTING\n\naddFormatToken('m', ['mm', 2], 0, 'minute');\n\n// ALIASES\n\naddUnitAlias('minute', 'm');\n\n// PRIORITY\n\naddUnitPriority('minute', 14);\n\n// PARSING\n\naddRegexToken('m',  match1to2);\naddRegexToken('mm', match1to2, match2);\naddParseToken(['m', 'mm'], MINUTE);\n\n// MOMENTS\n\nvar getSetMinute = makeGetSet('Minutes', false);\n\n// FORMATTING\n\naddFormatToken('s', ['ss', 2], 0, 'second');\n\n// ALIASES\n\naddUnitAlias('second', 's');\n\n// PRIORITY\n\naddUnitPriority('second', 15);\n\n// PARSING\n\naddRegexToken('s',  match1to2);\naddRegexToken('ss', match1to2, match2);\naddParseToken(['s', 'ss'], SECOND);\n\n// MOMENTS\n\nvar getSetSecond = makeGetSet('Seconds', false);\n\n// FORMATTING\n\naddFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n});\n\naddFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n});\n\naddFormatToken(0, ['SSS', 3], 0, 'millisecond');\naddFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n});\naddFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n});\naddFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n});\naddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n});\naddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n});\naddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n});\n\n\n// ALIASES\n\naddUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\naddUnitPriority('millisecond', 16);\n\n// PARSING\n\naddRegexToken('S',    match1to3, match1);\naddRegexToken('SS',   match1to3, match2);\naddRegexToken('SSS',  match1to3, match3);\n\nvar token;\nfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n}\n\nfunction parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n}\n\nfor (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n}\n// MOMENTS\n\nvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\n// FORMATTING\n\naddFormatToken('z',  0, 0, 'zoneAbbr');\naddFormatToken('zz', 0, 0, 'zoneName');\n\n// MOMENTS\n\nfunction getZoneAbbr () {\n    return this._isUTC ? 'UTC' : '';\n}\n\nfunction getZoneName () {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n}\n\nvar proto = Moment.prototype;\n\nproto.add               = add;\nproto.calendar          = calendar$1;\nproto.clone             = clone;\nproto.diff              = diff;\nproto.endOf             = endOf;\nproto.format            = format;\nproto.from              = from;\nproto.fromNow           = fromNow;\nproto.to                = to;\nproto.toNow             = toNow;\nproto.get               = stringGet;\nproto.invalidAt         = invalidAt;\nproto.isAfter           = isAfter;\nproto.isBefore          = isBefore;\nproto.isBetween         = isBetween;\nproto.isSame            = isSame;\nproto.isSameOrAfter     = isSameOrAfter;\nproto.isSameOrBefore    = isSameOrBefore;\nproto.isValid           = isValid$1;\nproto.lang              = lang;\nproto.locale            = locale;\nproto.localeData        = localeData;\nproto.max               = prototypeMax;\nproto.min               = prototypeMin;\nproto.parsingFlags      = parsingFlags;\nproto.set               = stringSet;\nproto.startOf           = startOf;\nproto.subtract          = subtract;\nproto.toArray           = toArray;\nproto.toObject          = toObject;\nproto.toDate            = toDate;\nproto.toISOString       = toISOString;\nproto.inspect           = inspect;\nproto.toJSON            = toJSON;\nproto.toString          = toString;\nproto.unix              = unix;\nproto.valueOf           = valueOf;\nproto.creationData      = creationData;\n\n// Year\nproto.year       = getSetYear;\nproto.isLeapYear = getIsLeapYear;\n\n// Week Year\nproto.weekYear    = getSetWeekYear;\nproto.isoWeekYear = getSetISOWeekYear;\n\n// Quarter\nproto.quarter = proto.quarters = getSetQuarter;\n\n// Month\nproto.month       = getSetMonth;\nproto.daysInMonth = getDaysInMonth;\n\n// Week\nproto.week           = proto.weeks        = getSetWeek;\nproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\nproto.weeksInYear    = getWeeksInYear;\nproto.isoWeeksInYear = getISOWeeksInYear;\n\n// Day\nproto.date       = getSetDayOfMonth;\nproto.day        = proto.days             = getSetDayOfWeek;\nproto.weekday    = getSetLocaleDayOfWeek;\nproto.isoWeekday = getSetISODayOfWeek;\nproto.dayOfYear  = getSetDayOfYear;\n\n// Hour\nproto.hour = proto.hours = getSetHour;\n\n// Minute\nproto.minute = proto.minutes = getSetMinute;\n\n// Second\nproto.second = proto.seconds = getSetSecond;\n\n// Millisecond\nproto.millisecond = proto.milliseconds = getSetMillisecond;\n\n// Offset\nproto.utcOffset            = getSetOffset;\nproto.utc                  = setOffsetToUTC;\nproto.local                = setOffsetToLocal;\nproto.parseZone            = setOffsetToParsedOffset;\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\nproto.isDST                = isDaylightSavingTime;\nproto.isLocal              = isLocal;\nproto.isUtcOffset          = isUtcOffset;\nproto.isUtc                = isUtc;\nproto.isUTC                = isUtc;\n\n// Timezone\nproto.zoneAbbr = getZoneAbbr;\nproto.zoneName = getZoneName;\n\n// Deprecations\nproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\nproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\nproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\nproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\nproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\nfunction createUnix (input) {\n    return createLocal(input * 1000);\n}\n\nfunction createInZone () {\n    return createLocal.apply(null, arguments).parseZone();\n}\n\nfunction preParsePostFormat (string) {\n    return string;\n}\n\nvar proto$1 = Locale.prototype;\n\nproto$1.calendar        = calendar;\nproto$1.longDateFormat  = longDateFormat;\nproto$1.invalidDate     = invalidDate;\nproto$1.ordinal         = ordinal;\nproto$1.preparse        = preParsePostFormat;\nproto$1.postformat      = preParsePostFormat;\nproto$1.relativeTime    = relativeTime;\nproto$1.pastFuture      = pastFuture;\nproto$1.set             = set;\n\n// Month\nproto$1.months            =        localeMonths;\nproto$1.monthsShort       =        localeMonthsShort;\nproto$1.monthsParse       =        localeMonthsParse;\nproto$1.monthsRegex       = monthsRegex;\nproto$1.monthsShortRegex  = monthsShortRegex;\n\n// Week\nproto$1.week = localeWeek;\nproto$1.firstDayOfYear = localeFirstDayOfYear;\nproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n// Day of Week\nproto$1.weekdays       =        localeWeekdays;\nproto$1.weekdaysMin    =        localeWeekdaysMin;\nproto$1.weekdaysShort  =        localeWeekdaysShort;\nproto$1.weekdaysParse  =        localeWeekdaysParse;\n\nproto$1.weekdaysRegex       =        weekdaysRegex;\nproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\nproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n// Hours\nproto$1.isPM = localeIsPM;\nproto$1.meridiem = localeMeridiem;\n\nfunction get$1 (format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n}\n\nfunction listMonthsImpl (format, index, field) {\n    if (isNumber(format)) {\n        index = format;\n        format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n        return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 12; i++) {\n        out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n}\n\n// ()\n// (5)\n// (fmt, 5)\n// (fmt)\n// (true)\n// (true, 5)\n// (true, fmt, 5)\n// (true, fmt)\nfunction listWeekdaysImpl (localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    } else {\n        format = localeSorted;\n        index = format;\n        localeSorted = false;\n\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n        return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 7; i++) {\n        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n}\n\nfunction listMonths (format, index) {\n    return listMonthsImpl(format, index, 'months');\n}\n\nfunction listMonthsShort (format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n}\n\nfunction listWeekdays (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n}\n\nfunction listWeekdaysShort (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n}\n\nfunction listWeekdaysMin (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n}\n\ngetSetGlobalLocale('en', {\n    ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    }\n});\n\n// Side effect imports\nhooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\nhooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\nvar mathAbs = Math.abs;\n\nfunction abs () {\n    var data           = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days         = mathAbs(this._days);\n    this._months       = mathAbs(this._months);\n\n    data.milliseconds  = mathAbs(data.milliseconds);\n    data.seconds       = mathAbs(data.seconds);\n    data.minutes       = mathAbs(data.minutes);\n    data.hours         = mathAbs(data.hours);\n    data.months        = mathAbs(data.months);\n    data.years         = mathAbs(data.years);\n\n    return this;\n}\n\nfunction addSubtract$1 (duration, input, value, direction) {\n    var other = createDuration(input, value);\n\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days         += direction * other._days;\n    duration._months       += direction * other._months;\n\n    return duration._bubble();\n}\n\n// supports only 2.0-style add(1, 's') or add(duration)\nfunction add$1 (input, value) {\n    return addSubtract$1(this, input, value, 1);\n}\n\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\nfunction subtract$1 (input, value) {\n    return addSubtract$1(this, input, value, -1);\n}\n\nfunction absCeil (number) {\n    if (number < 0) {\n        return Math.floor(number);\n    } else {\n        return Math.ceil(number);\n    }\n}\n\nfunction bubble () {\n    var milliseconds = this._milliseconds;\n    var days         = this._days;\n    var months       = this._months;\n    var data         = this._data;\n    var seconds, minutes, hours, years, monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds           = absFloor(milliseconds / 1000);\n    data.seconds      = seconds % 60;\n\n    minutes           = absFloor(seconds / 60);\n    data.minutes      = minutes % 60;\n\n    hours             = absFloor(minutes / 60);\n    data.hours        = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days   = days;\n    data.months = months;\n    data.years  = years;\n\n    return this;\n}\n\nfunction daysToMonths (days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n}\n\nfunction monthsToDays (months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n}\n\nfunction as (units) {\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n        days   = this._days   + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n    } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week'   : return days / 7     + milliseconds / 6048e5;\n            case 'day'    : return days         + milliseconds / 864e5;\n            case 'hour'   : return days * 24    + milliseconds / 36e5;\n            case 'minute' : return days * 1440  + milliseconds / 6e4;\n            case 'second' : return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n            default: throw new Error('Unknown unit ' + units);\n        }\n    }\n}\n\n// TODO: Use this.as('ms')?\nfunction valueOf$1 () {\n    return (\n        this._milliseconds +\n        this._days * 864e5 +\n        (this._months % 12) * 2592e6 +\n        toInt(this._months / 12) * 31536e6\n    );\n}\n\nfunction makeAs (alias) {\n    return function () {\n        return this.as(alias);\n    };\n}\n\nvar asMilliseconds = makeAs('ms');\nvar asSeconds      = makeAs('s');\nvar asMinutes      = makeAs('m');\nvar asHours        = makeAs('h');\nvar asDays         = makeAs('d');\nvar asWeeks        = makeAs('w');\nvar asMonths       = makeAs('M');\nvar asYears        = makeAs('y');\n\nfunction get$2 (units) {\n    units = normalizeUnits(units);\n    return this[units + 's']();\n}\n\nfunction makeGetter(name) {\n    return function () {\n        return this._data[name];\n    };\n}\n\nvar milliseconds = makeGetter('milliseconds');\nvar seconds      = makeGetter('seconds');\nvar minutes      = makeGetter('minutes');\nvar hours        = makeGetter('hours');\nvar days         = makeGetter('days');\nvar months       = makeGetter('months');\nvar years        = makeGetter('years');\n\nfunction weeks () {\n    return absFloor(this.days() / 7);\n}\n\nvar round = Math.round;\nvar thresholds = {\n    s: 45,  // seconds to minute\n    m: 45,  // minutes to hour\n    h: 22,  // hours to day\n    d: 26,  // days to month\n    M: 11   // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n}\n\nfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds  = round(duration.as('s'));\n    var minutes  = round(duration.as('m'));\n    var hours    = round(duration.as('h'));\n    var days     = round(duration.as('d'));\n    var months   = round(duration.as('M'));\n    var years    = round(duration.as('y'));\n\n    var a = seconds < thresholds.s && ['s', seconds]  ||\n            minutes <= 1           && ['m']           ||\n            minutes < thresholds.m && ['mm', minutes] ||\n            hours   <= 1           && ['h']           ||\n            hours   < thresholds.h && ['hh', hours]   ||\n            days    <= 1           && ['d']           ||\n            days    < thresholds.d && ['dd', days]    ||\n            months  <= 1           && ['M']           ||\n            months  < thresholds.M && ['MM', months]  ||\n            years   <= 1           && ['y']           || ['yy', years];\n\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n}\n\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding (roundingFunction) {\n    if (roundingFunction === undefined) {\n        return round;\n    }\n    if (typeof(roundingFunction) === 'function') {\n        round = roundingFunction;\n        return true;\n    }\n    return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold (threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n        return false;\n    }\n    if (limit === undefined) {\n        return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    return true;\n}\n\nfunction humanize (withSuffix) {\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n        output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n}\n\nvar abs$1 = Math.abs;\n\nfunction toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days         = abs$1(this._days);\n    var months       = abs$1(this._months);\n    var minutes, hours, years;\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes           = absFloor(seconds / 60);\n    hours             = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years  = absFloor(months / 12);\n    months %= 12;\n\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds;\n    var total = this.asSeconds();\n\n    if (!total) {\n        // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return 'P0D';\n    }\n\n    return (total < 0 ? '-' : '') +\n        'P' +\n        (Y ? Y + 'Y' : '') +\n        (M ? M + 'M' : '') +\n        (D ? D + 'D' : '') +\n        ((h || m || s) ? 'T' : '') +\n        (h ? h + 'H' : '') +\n        (m ? m + 'M' : '') +\n        (s ? s + 'S' : '');\n}\n\nvar proto$2 = Duration.prototype;\n\nproto$2.abs            = abs;\nproto$2.add            = add$1;\nproto$2.subtract       = subtract$1;\nproto$2.as             = as;\nproto$2.asMilliseconds = asMilliseconds;\nproto$2.asSeconds      = asSeconds;\nproto$2.asMinutes      = asMinutes;\nproto$2.asHours        = asHours;\nproto$2.asDays         = asDays;\nproto$2.asWeeks        = asWeeks;\nproto$2.asMonths       = asMonths;\nproto$2.asYears        = asYears;\nproto$2.valueOf        = valueOf$1;\nproto$2._bubble        = bubble;\nproto$2.get            = get$2;\nproto$2.milliseconds   = milliseconds;\nproto$2.seconds        = seconds;\nproto$2.minutes        = minutes;\nproto$2.hours          = hours;\nproto$2.days           = days;\nproto$2.weeks          = weeks;\nproto$2.months         = months;\nproto$2.years          = years;\nproto$2.humanize       = humanize;\nproto$2.toISOString    = toISOString$1;\nproto$2.toString       = toISOString$1;\nproto$2.toJSON         = toISOString$1;\nproto$2.locale         = locale;\nproto$2.localeData     = localeData;\n\n// Deprecations\nproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\nproto$2.lang = lang;\n\n// Side effect imports\n\n// FORMATTING\n\naddFormatToken('X', 0, 0, 'unix');\naddFormatToken('x', 0, 0, 'valueOf');\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\naddParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n});\naddParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n});\n\n// Side effect imports\n\n\nhooks.version = '2.17.0';\n\nsetHookCallback(createLocal);\n\nhooks.fn                    = proto;\nhooks.min                   = min;\nhooks.max                   = max;\nhooks.now                   = now;\nhooks.utc                   = createUTC;\nhooks.unix                  = createUnix;\nhooks.months                = listMonths;\nhooks.isDate                = isDate;\nhooks.locale                = getSetGlobalLocale;\nhooks.invalid               = createInvalid;\nhooks.duration              = createDuration;\nhooks.isMoment              = isMoment;\nhooks.weekdays              = listWeekdays;\nhooks.parseZone             = createInZone;\nhooks.localeData            = getLocale;\nhooks.isDuration            = isDuration;\nhooks.monthsShort           = listMonthsShort;\nhooks.weekdaysMin           = listWeekdaysMin;\nhooks.defineLocale          = defineLocale;\nhooks.updateLocale          = updateLocale;\nhooks.locales               = listLocales;\nhooks.weekdaysShort         = listWeekdaysShort;\nhooks.normalizeUnits        = normalizeUnits;\nhooks.relativeTimeRounding = getSetRelativeTimeRounding;\nhooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\nhooks.calendarFormat        = getCalendarFormat;\nhooks.prototype             = proto;\n\nreturn hooks;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/moment.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}