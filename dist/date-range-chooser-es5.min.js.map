{"version":3,"sources":["webpack:///date-range-chooser-es5.min.js","webpack:///webpack/bootstrap a08bbaecb874d28731ea","webpack:///./src/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/fcts-ext-daterange.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_typeof","Symbol","iterator","obj","constructor","prototype","DateRange","env","factory","document","win","Error","DateRangeChooser","window","undefined","_window","windowExists","FC","FusionCharts","register","DateTimeFormatter","this","hcLib","registerComponent","webpackPolyfill","deprecate","paths","children","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","dep","startDt","endDt","startDataset","endDataset","toolbox","getComponent","HorizontalToolbar","ComponentGroup","isDrawn","startTooltipErrorMsg","endTooltipErrorMsg","createObjectAssign","value","startTimestamp","endTimestamp","errorType","config","styles","setErrorMsg","fromError","toError","timestamp","absoluteStart","absoluteEnd","actualDiff","minDiff","dateStr","dateFormat","dateFormatter","getNativeDate","formatAs","configObj","calendarVisible","extData","defaultStyles","width","height","font-family","font-size","font-color","input-fill","input-border-thickness","input-border-color","input-border-radius","input-shadow-fill","input-shadow-opacity","input-focus-fill","input-focus-border-thickness","input-focus-border-color","input-error-fill","input-error-border-thickness","input-error-border-color","input-error-tooltip-font-color","disabled","layout","orientation","position","alignment","fromText","fromTooltipText","toText","toTooltipText","assign","symbol","self","paper","graphics","circle","crossPath","cross","rect","text","group","textBBox","circleBBox","rectBBox","symbolBBox","getBoundElement","getBBox","x","y","getCrossPath","path","attr","stroke","stroke-width","fill","text-anchor","fill-opacity","visibility","circleBox","padding","circleX1","Math","round","circleY1","circleX2","x2","circleY2","y2","crossX1","crossY1","crossX2","crossY2","pathStr","errorGroup","errorMsg","canvasImpl","chartInstance","apiInstance","getCanvasInstances","canvasX","measurement","canvasWidth","canvasEnd","errorRectX","errorRectWidth","errorRectEnd","diff","translate","varArgs","to","index","arguments","nextSource","nextKey","hasOwnProperty","require","xAxis","chart","dataset","globalReactiveModel","spaceManagerInstance","smartLabel","createConfig","model","toolbars","push","createToolbar","toolbar","fromDateLabel","toDateLabel","fromGroup","toGroup","fromFormattedDate","toFormattedDate","fromDateEventConfig","toDateEventConfig","fromDate","toDate","getDate","chartContainer","container","setConfig","borderThickness","Label","style","InputTextBoxSymbol","strokeWidth","radius","btnTextStyle","fontFamily","fontSize","shadow","opacity","label","labelFill","addCustomState","hover","normal","pressed","setStateConfig","enabled","click","fn","state","hide","show","edit","updateVisual","keypress","e","event","charCode","which","keyCode","startDate","getText","blur","textOnBlur","attachEventHandlers","endDate","addSymbol","addComponent","availableWidth","availableHeight","logicalSpace","getLogicalSpace","add","name","ref","priority","type","dimensions","parent","getParentComponentGroup","getWidth","getHeight","mes","parentGroup","ln","draw","onPropsChange","start","end","createErrorGroup","maxXAxisTicks","minDatestampDiff","minActiveInterval","get","set","getTimestamp","newDate","isBetween","isBeforeOrEqualTo","diffIsGreaterThan","isAfterOrEqualTo"],"mappings":"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","file":"date-range-chooser-es5.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar DateRange = __webpack_require__(2);\n\t\n\t;(function (env, factory) {\n\t  if (( false ? 'undefined' : _typeof(module)) === 'object' && module.exports) {\n\t    module.exports = env.document ? factory(env) : function (win) {\n\t      if (!win.document) {\n\t        throw new Error('Window with document not present');\n\t      }\n\t      return factory(win, true);\n\t    };\n\t  } else {\n\t    env.DateRangeChooser = factory(env, true);\n\t  }\n\t})(typeof window !== 'undefined' ? window : undefined, function (_window, windowExists) {\n\t  var FC = _window.FusionCharts;\n\t  FC.register('extension', ['private', 'date-range-chooser', function () {\n\t    var DateTimeFormatter = this.hcLib.DateTimeFormatter;\n\t    FC.registerComponent('extensions', 'date-range-chooser', DateRange({ FusionCharts: FC,\n\t      DateTimeFormatter: DateTimeFormatter }));\n\t  }]);\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\n\t\tif(!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function() {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tmodule.exports = function (dep) {\n\t  /**\n\t   * Class representing the DateRange.\n\t   */\n\t  var DateRange = function () {\n\t    function DateRange() {\n\t      _classCallCheck(this, DateRange);\n\t\n\t      /**\n\t       * @private\n\t       */\n\t      this.startDt = 0;\n\t      this.endDt = 0;\n\t      this.startDataset = 0;\n\t      this.endDataset = 0;\n\t      if (typeof dep.FusionCharts === 'function') {\n\t        this.toolbox = dep.FusionCharts.getComponent('api', 'toolbox');\n\t      } else {\n\t        throw new Error('Unable to find FusionCharts.');\n\t      }\n\t      if (typeof dep.FusionCharts === 'function') {\n\t        this.DateTimeFormatter = dep.DateTimeFormatter;\n\t      } else {\n\t        throw new Error('Unable to find DateTimeFormatter.');\n\t      }\n\t      this.HorizontalToolbar = this.toolbox.HorizontalToolbar;\n\t      this.ComponentGroup = this.toolbox.ComponentGroup;\n\t      this.isDrawn = false;\n\t      this.startTooltipErrorMsg = '';\n\t      this.endTooltipErrorMsg = '';\n\t      this.createObjectAssign();\n\t    }\n\t\n\t    /**\n\t     * An object representing the start and end dates.\n\t     * @type {DateRange.range}\n\t     */\n\t\n\t\n\t    _createClass(DateRange, [{\n\t      key: 'isBeforeOrEqualTo',\n\t      value: function isBeforeOrEqualTo(startTimestamp, endTimestamp, errorType) {\n\t        if (startTimestamp <= endTimestamp) {\n\t          return true;\n\t        } else {\n\t          this.startTooltipErrorMsg = '<span style=\"color: ' + this.config.styles['input-error-tooltip-font-color'] + '\">Date must be less than end date!</span>';\n\t          if (errorType === 'from') {\n\t            this.setErrorMsg(this.fromError, 'Date must be less than end date!');\n\t          }\n\t          return false;\n\t        }\n\t      }\n\t    }, {\n\t      key: 'isAfterOrEqualTo',\n\t      value: function isAfterOrEqualTo(endTimestamp, startTimestamp, errorType) {\n\t        if (endTimestamp >= startTimestamp) {\n\t          return true;\n\t        } else {\n\t          this.endTooltipErrorMsg = '<span style=\"color: ' + this.config.styles['input-error-tooltip-font-color'] + '\">Date must be greater than start date!</span>';\n\t          if (errorType === 'to') {\n\t            this.setErrorMsg(this.toError, 'Date must be greater than start date!');\n\t          }\n\t          return false;\n\t        }\n\t      }\n\t    }, {\n\t      key: 'isBetween',\n\t      value: function isBetween(timestamp, absoluteStart, absoluteEnd, errorType) {\n\t        if (timestamp >= absoluteStart && timestamp <= absoluteEnd) {\n\t          return true;\n\t        } else {\n\t          this.startTooltipErrorMsg = this.endTooltipErrorMsg = '<span style=\"color: ' + this.config.styles['input-error-tooltip-font-color'] + '\">Date out of bounds!</span>';\n\t          if (errorType === 'from') {\n\t            this.setErrorMsg(this.fromError, 'Date out of bounds!');\n\t          } else if (errorType === 'to') {\n\t            this.setErrorMsg(this.toError, 'Date out of bounds!');\n\t          }\n\t          return false;\n\t        }\n\t      }\n\t    }, {\n\t      key: 'diffIsGreaterThan',\n\t      value: function diffIsGreaterThan(actualDiff, minDiff, errorType) {\n\t        if (actualDiff > minDiff) {\n\t          return true;\n\t        } else {\n\t          this.startTooltipErrorMsg = this.endTooltipErrorMsg = '<span style=\"color: ' + this.config.styles['input-error-tooltip-font-color'] + '\">Zoom limit exceeded!</span>';\n\t          if (errorType === 'from') {\n\t            this.setErrorMsg(this.fromError, 'Zoom limit exceeded!');\n\t          } else if (errorType === 'to') {\n\t            this.setErrorMsg(this.toError, 'Zoom limit exceeded!');\n\t          }\n\t          return false;\n\t        }\n\t      }\n\t    }, {\n\t      key: 'getTimestamp',\n\t      value: function getTimestamp(dateStr) {\n\t        var dateFormat = this.config.dateFormat,\n\t            dateFormatter = new dep.DateTimeFormatter(dateFormat);\n\t        return +dateFormatter.getNativeDate(dateStr);\n\t      }\n\t    }, {\n\t      key: 'getDate',\n\t      value: function getDate(timestamp) {\n\t        var dateFormat = this.config.dateFormat;\n\t        return this.DateTimeFormatter.formatAs(timestamp, dateFormat);\n\t      }\n\t\n\t      /**\n\t       * Sets the configurable options of the extension (e.g. cosmetics)\n\t       * @param {Object} configObj The configuration object containing various extension options\n\t       */\n\t\n\t    }, {\n\t      key: 'setConfig',\n\t      value: function setConfig(configObj) {}\n\t\n\t      /**\n\t       * Gets the configurable options of the extension (e.g. cosmetics)\n\t       * @return {object} configObj The configuration object containing various extension options\n\t       */\n\t\n\t    }, {\n\t      key: 'getConfig',\n\t      value: function getConfig() {\n\t        return {\n\t          calendarVisible: 'false'\n\t        };\n\t      }\n\t    }, {\n\t      key: 'createConfig',\n\t      value: function createConfig(extData) {\n\t        var config = {},\n\t            defaultStyles = {\n\t          'width': 120,\n\t          'height': 22,\n\t\n\t          'font-family': '\"Lucida Grande\", sans-serif',\n\t          'font-size': 13,\n\t          'font-color': '#4B4B4B',\n\t\n\t          'input-fill': '#FFFFFF',\n\t          'input-border-thickness': 1,\n\t          'input-border-color': '#CED5D4',\n\t          'input-border-radius': 1,\n\t          'input-shadow-fill': '#000000',\n\t          'input-shadow-opacity': 0.35,\n\t\n\t          'input-focus-fill': '#FFFFFF',\n\t          'input-focus-border-thickness': 1,\n\t          'input-focus-border-color': '#1E1F1F',\n\t\n\t          'input-error-fill': '#FFEFEF',\n\t          'input-error-border-thickness': 1,\n\t          'input-error-border-color': '#D25353',\n\t          'input-error-tooltip-font-color': '#FF0000'\n\t        };\n\t        config.disabled = extData.disabled || false;\n\t        config.layout = extData.layout || 'inline';\n\t        config.orientation = extData.orientation || 'horizontal';\n\t        config.position = extData.position || 'top';\n\t        config.alignment = extData.alignment || 'right';\n\t        config.dateFormat = extData.dateFormat || '%d-%m-%Y';\n\t        config.fromText = extData.fromText || 'From:';\n\t        config.fromTooltipText = extData.fromTooltipText || 'From Date';\n\t        config.toText = extData.toText || 'To:';\n\t        config.toTooltipText = extData.toTooltipText || 'To Date';\n\t        config.styles = Object.assign(defaultStyles, extData.styles);\n\t        return config;\n\t      }\n\t    }, {\n\t      key: 'createErrorGroup',\n\t      value: function createErrorGroup(symbol) {\n\t        var self = this,\n\t            paper = self.graphics.paper,\n\t            circle = void 0,\n\t            crossPath = void 0,\n\t            cross = void 0,\n\t            rect = void 0,\n\t            text = void 0,\n\t            group = void 0,\n\t            textBBox = void 0,\n\t            circleBBox = void 0,\n\t            rectBBox = void 0,\n\t            symbolBBox = void 0,\n\t            orientation = self.config.orientation,\n\t            position = self.config.position;\n\t\n\t        if (orientation === 'horizontal') {\n\t          if (position === 'top') {\n\t            symbolBBox = symbol.getBoundElement().getBBox();\n\t            group = paper.group('error-group');\n\t\n\t            rect = paper.rect(symbolBBox.x, symbolBBox.y - symbolBBox.height - 4, 20, 20, group);\n\t            rectBBox = rect.getBBox();\n\t\n\t            circle = paper.circle(symbolBBox.x + 5 + 4, symbolBBox.y - symbolBBox.height - 4 + 5 + 5, 6, group);\n\t            circleBBox = circle.getBBox();\n\t\n\t            crossPath = this.getCrossPath(circleBBox, 4);\n\t            cross = paper.path(crossPath, group);\n\t\n\t            text = paper.text(circleBBox.x + circleBBox.width + 4, rectBBox.y + 2, '', group);\n\t            textBBox = text.getBBox();\n\t          } else if (position === 'bottom') {\n\t            symbolBBox = symbol.getBoundElement().getBBox();\n\t            group = paper.group('error-group');\n\t\n\t            rect = paper.rect(symbolBBox.x, symbolBBox.y + symbolBBox.height + 4, 20, 20, group);\n\t            rectBBox = rect.getBBox();\n\t\n\t            circle = paper.circle(symbolBBox.x + 5 + 4, symbolBBox.y + symbolBBox.height + 4 + 5 + 5, 6, group);\n\t            circleBBox = circle.getBBox();\n\t\n\t            crossPath = this.getCrossPath(circleBBox, 4);\n\t            cross = paper.path(crossPath, group);\n\t\n\t            text = paper.text(circleBBox.x + circleBBox.width + 4, rectBBox.y + 2, '', group);\n\t            textBBox = text.getBBox();\n\t          }\n\t        } else if (orientation === 'vertical') {\n\t          symbolBBox = symbol.getBoundElement().getBBox();\n\t          group = paper.group('error-group');\n\t\n\t          rect = paper.rect(symbolBBox.x, symbolBBox.y + symbolBBox.height + 4, 20, 20, group);\n\t          rectBBox = rect.getBBox();\n\t\n\t          circle = paper.circle(symbolBBox.x + 5 + 4, symbolBBox.y + symbolBBox.height + 4 + 5 + 5, 6, group);\n\t          circleBBox = circle.getBBox();\n\t\n\t          crossPath = this.getCrossPath(circleBBox, 4);\n\t          cross = paper.path(crossPath, group);\n\t\n\t          text = paper.text(circleBBox.x + circleBBox.width + 4, rectBBox.y + 2, '', group);\n\t          textBBox = text.getBBox();\n\t        }\n\t\n\t        circle.attr({\n\t          'stroke': '#d71f26',\n\t          'stroke-width': '1',\n\t          'fill': 'none'\n\t        });\n\t        cross.attr({\n\t          'stroke': '#000000',\n\t          'stroke-width': '1.5'\n\t        });\n\t        text.attr({\n\t          'text-anchor': 'start',\n\t          'y': textBBox.y + textBBox.height,\n\t          'fill': '#D80000',\n\t          'font-family': '\"Lucida Grande\", sans-serif',\n\t          'font-size': '12'\n\t        });\n\t        rect.attr({\n\t          'fill': '#FFFFFF',\n\t          'fill-opacity': '0.8',\n\t          'stroke-width': '0',\n\t          'width': textBBox.width + circleBBox.width\n\t        });\n\t        group.attr({\n\t          visibility: 'hidden'\n\t        });\n\t\n\t        return {\n\t          'group': group,\n\t          'cross': cross,\n\t          'circle': circle,\n\t          'rect': rect,\n\t          'text': text\n\t        };\n\t      }\n\t    }, {\n\t      key: 'getCrossPath',\n\t      value: function getCrossPath(circleBox, padding) {\n\t        // M478,77L483,82M478,82L483,77\n\t        var circleX1 = Math.round(circleBox.x),\n\t            circleY1 = Math.round(circleBox.y),\n\t            circleX2 = Math.round(circleBox.x2),\n\t            circleY2 = Math.round(circleBox.y2),\n\t            crossX1 = circleX1 + 4,\n\t            crossY1 = circleY1 + 2,\n\t            crossX2 = circleX2 - 4,\n\t            crossY2 = circleY2 - 3,\n\t            pathStr = 'M' + crossX1 + ',' + crossY1 + 'L' + crossX2 + ',' + crossY2;\n\t        pathStr += 'M' + crossX1 + ',' + crossY2 + 'L' + crossX2 + ',' + crossY1;\n\t        return pathStr;\n\t      }\n\t    }, {\n\t      key: 'setErrorMsg',\n\t      value: function setErrorMsg(errorGroup, errorMsg) {\n\t        var canvasImpl = this.chartInstance.apiInstance.getCanvasInstances()[0],\n\t            canvasX = canvasImpl.measurement.x,\n\t            canvasWidth = canvasImpl.measurement.width,\n\t            canvasEnd = canvasX + canvasWidth,\n\t            errorRectX = void 0,\n\t            errorRectWidth = void 0,\n\t            errorRectEnd = void 0;\n\t\n\t        if (errorGroup.text.attr('text') === errorMsg) {\n\t          return;\n\t        }\n\t        errorGroup.text.attr('text', errorMsg);\n\t        errorGroup.rect.attr('width', errorGroup.text.getBBox().width + 4 * 2 + errorGroup.circle.getBBox().width + 2);\n\t\n\t        errorRectX = errorGroup.rect.getBBox().x;\n\t        errorRectWidth = errorGroup.rect.getBBox().width;\n\t        errorRectEnd = errorRectX + errorRectWidth;\n\t        if (errorRectEnd > canvasEnd) {\n\t          var diff = errorRectEnd - canvasEnd;\n\t          errorGroup.rect.attr('x', errorRectX - diff);\n\t          errorGroup.circle.attr('cx', errorGroup.circle.getBBox().x - diff + 5);\n\t          errorGroup.cross.translate(-diff - 1, 0);\n\t          errorGroup.text.attr('x', errorGroup.text.getBBox().x - diff);\n\t        }\n\t      }\n\t    }, {\n\t      key: 'createObjectAssign',\n\t      value: function createObjectAssign() {\n\t        if (typeof Object.assign !== 'function') {\n\t          Object.assign = function (target, varArgs) {\n\t            'use strict';\n\t\n\t            if (target == null) {\n\t              throw new TypeError('Cannot convert undefined or null to object');\n\t            }\n\t\n\t            var to = Object(target);\n\t\n\t            for (var index = 1; index < arguments.length; index++) {\n\t              var nextSource = arguments[index];\n\t\n\t              if (nextSource != null) {\n\t                for (var nextKey in nextSource) {\n\t                  // Avoid bugs when hasOwnProperty is shadowed\n\t                  if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n\t                    to[nextKey] = nextSource[nextKey];\n\t                  }\n\t                }\n\t              }\n\t            }\n\t            return to;\n\t          };\n\t        }\n\t      }\n\t\n\t      /**\n\t       * Fusioncharts life cycle method for extension\n\t       */\n\t\n\t    }, {\n\t      key: 'init',\n\t      value: function init(require) {\n\t        var instance = this;\n\t        require(['xAxis', 'graphics', 'chart', 'dataset', 'globalReactiveModel', 'spaceManagerInstance', 'extData', 'smartLabel', 'chartInstance', function (xAxis, graphics, chart, dataset, globalReactiveModel, spaceManagerInstance, extData, smartLabel, chartInstance) {\n\t          instance.xAxis = xAxis;\n\t          instance.graphics = graphics;\n\t          instance.chart = chart;\n\t          instance.dataset = dataset;\n\t          instance.globalReactiveModel = globalReactiveModel;\n\t          instance.spaceManagerInstance = spaceManagerInstance;\n\t          instance.config = instance.createConfig(extData);\n\t          instance.smartLabel = smartLabel;\n\t          instance.chartInstance = chartInstance;\n\t        }]);\n\t        instance.startDt = instance.globalReactiveModel.model['x-axis-visible-range-start'];\n\t        instance.endDt = instance.globalReactiveModel.model['x-axis-visible-range-end'];\n\t        instance.toolbars = [];\n\t        instance.measurement = {};\n\t        instance.toolbars.push(instance.createToolbar());\n\t        return instance;\n\t      }\n\t    }, {\n\t      key: 'createToolbar',\n\t      value: function createToolbar() {\n\t        var toolbar,\n\t            self = this,\n\t            fromDateLabel,\n\t            toDateLabel,\n\t            fromGroup,\n\t            toGroup,\n\t            fromFormattedDate,\n\t            toFormattedDate;\n\t\n\t        var fromDateEventConfig = {},\n\t            toDateEventConfig = {};\n\t\n\t        self.fromDate = {};\n\t        self.toDate = {};\n\t\n\t        fromFormattedDate = this.getDate(this.startDt);\n\t        toFormattedDate = this.getDate(this.endDt);\n\t        toolbar = new this.HorizontalToolbar({\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        });\n\t\n\t        toolbar.setConfig({\n\t          'fill': '#FFFFFF',\n\t          'borderThickness': 0\n\t        });\n\t\n\t        fromGroup = new this.toolbox.ComponentGroup({\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        });\n\t\n\t        toGroup = new this.toolbox.ComponentGroup({\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        });\n\t\n\t        fromGroup.setConfig({\n\t          'fill': '#FFFFFF',\n\t          'borderThickness': 0\n\t        });\n\t\n\t        toGroup.setConfig({\n\t          'fill': '#FFFFFF',\n\t          'borderThickness': 0\n\t        });\n\t\n\t        fromDateLabel = new this.toolbox.Label(this.config['fromText'], {\n\t          smartLabel: this.smartLabel,\n\t          paper: this.graphics.paper\n\t        }, {\n\t          text: {\n\t            style: {\n\t              'font-size': this.config.styles['font-size'],\n\t              'font-family': this.config.styles['font-family'],\n\t              'fill': this.config.styles['font-color']\n\t            }\n\t          },\n\t          container: {\n\t            'width': 40\n\t          }\n\t        });\n\t\n\t        toDateLabel = new this.toolbox.Label(this.config['toText'], {\n\t          smartLabel: this.smartLabel,\n\t          paper: this.graphics.paper\n\t        }, {\n\t          text: {\n\t            style: {\n\t              'font-size': this.config.styles['font-size'],\n\t              'font-family': this.config.styles['font-family'],\n\t              'fill': this.config.styles['font-color'],\n\t              'text-anchor': 'start'\n\t            }\n\t          },\n\t          container: {\n\t            'width': 40\n\t          }\n\t        });\n\t\n\t        self.fromDate = new this.toolbox.InputTextBoxSymbol({\n\t          width: this.config.styles['width'],\n\t          height: this.config.styles['height']\n\t        }, {\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        }, {\n\t          'strokeWidth': this.config.styles['input-border-thickness'],\n\t          'fill': this.config.styles['input-fill'],\n\t          'stroke': this.config.styles['input-border-color'],\n\t          'radius': this.config.styles['input-border-radius'],\n\t          'btnTextStyle': {\n\t            'fontFamily': this.config.styles['font-family'],\n\t            'fontSize': this.config.styles['font-size']\n\t          },\n\t          'shadow': {\n\t            'fill': this.config.styles['input-shadow-fill'],\n\t            'opacity': this.config.styles['input-shadow-opacity']\n\t          },\n\t          'label': fromFormattedDate,\n\t          'labelFill': this.config.styles['font-color']\n\t        });\n\t\n\t        self.fromDate.addCustomState('errored', {\n\t          config: {\n\t            hover: {\n\t              'fill': this.config.styles['input-error-fill'],\n\t              'stroke-width': this.config.styles['input-error-border-thickness'],\n\t              'stroke': this.config.styles['input-error-border-color']\n\t            },\n\t            normal: {\n\t              'fill': this.config.styles['input-error-fill'],\n\t              'stroke-width': this.config.styles['input-error-border-thickness'],\n\t              'stroke': this.config.styles['input-error-border-color']\n\t            },\n\t            pressed: {\n\t              'fill': this.config.styles['input-error-fill'],\n\t              'stroke-width': this.config.styles['input-error-border-thickness'],\n\t              'stroke': this.config.styles['input-error-border-color']\n\t            }\n\t          }\n\t        });\n\t\n\t        self.fromDate.setStateConfig({\n\t          pressed: {\n\t            config: {\n\t              pressed: {\n\t                'fill': this.config.styles['input-focus-fill'],\n\t                'stroke-width': this.config.styles['input-focus-border-thickness'],\n\t                'stroke': this.config.styles['input-focus-border-color']\n\t              },\n\t              normal: {\n\t                'fill': this.config.styles['input-focus-fill'],\n\t                'stroke-width': this.config.styles['input-focus-border-thickness'],\n\t                'stroke': this.config.styles['input-focus-border-color']\n\t              },\n\t              hover: {\n\t                'fill': this.config.styles['input-focus-fill'],\n\t                'stroke-width': this.config.styles['input-focus-border-thickness'],\n\t                'stroke': this.config.styles['input-focus-border-color']\n\t              }\n\t            }\n\t          },\n\t          enabled: {\n\t            config: {\n\t              pressed: {\n\t                'fill': this.config.styles['input-fill'],\n\t                'stroke-width': this.config.styles['input-border-thickness'],\n\t                'stroke': this.config.styles['input-border-color']\n\t              },\n\t              normal: {\n\t                'fill': this.config.styles['input-fill'],\n\t                'stroke-width': this.config.styles['input-border-thickness'],\n\t                'stroke': this.config.styles['input-border-color']\n\t              },\n\t              hover: {\n\t                'fill': this.config.styles['input-fill'],\n\t                'stroke-width': this.config.styles['input-border-thickness'],\n\t                'stroke': this.config.styles['input-border-color']\n\t              }\n\t            }\n\t          }\n\t        });\n\t\n\t        self.toDate = new this.toolbox.InputTextBoxSymbol({\n\t          width: this.config.styles['width'],\n\t          height: this.config.styles['height']\n\t        }, {\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        }, {\n\t          'strokeWidth': this.config.styles['input-border-thickness'],\n\t          'fill': this.config.styles['input-fill'],\n\t          'stroke': this.config.styles['input-border-color'],\n\t          'radius': this.config.styles['input-border-radius'],\n\t          'btnTextStyle': {\n\t            'fontFamily': this.config.styles['font-family'],\n\t            'fontSize': this.config.styles['font-size']\n\t          },\n\t          'shadow': {\n\t            'fill': this.config.styles['input-shadow-fill'],\n\t            'opacity': this.config.styles['input-shadow-opacity']\n\t          },\n\t          'label': toFormattedDate,\n\t          'labelFill': this.config.styles['font-color']\n\t        });\n\t\n\t        self.toDate.addCustomState('errored', {\n\t          config: {\n\t            hover: {\n\t              'fill': this.config.styles['input-error-fill'],\n\t              'stroke-width': this.config.styles['input-error-border-thickness'],\n\t              'stroke': this.config.styles['input-error-border-color']\n\t            },\n\t            normal: {\n\t              'fill': this.config.styles['input-error-fill'],\n\t              'stroke-width': this.config.styles['input-error-border-thickness'],\n\t              'stroke': this.config.styles['input-error-border-color']\n\t            },\n\t            pressed: {\n\t              'fill': this.config.styles['input-error-fill'],\n\t              'stroke-width': this.config.styles['input-error-border-thickness'],\n\t              'stroke': this.config.styles['input-error-border-color']\n\t            }\n\t          }\n\t        });\n\t\n\t        self.toDate.setStateConfig({\n\t          pressed: {\n\t            config: {\n\t              pressed: {\n\t                'fill': this.config.styles['input-focus-fill'],\n\t                'stroke-width': this.config.styles['input-focus-border-thickness'],\n\t                'stroke': this.config.styles['input-focus-border-color']\n\t              },\n\t              normal: {\n\t                'fill': this.config.styles['input-focus-fill'],\n\t                'stroke-width': this.config.styles['input-focus-border-thickness'],\n\t                'stroke': this.config.styles['input-focus-border-color']\n\t              },\n\t              hover: {\n\t                'fill': this.config.styles['input-focus-fill'],\n\t                'stroke-width': this.config.styles['input-focus-border-thickness'],\n\t                'stroke': this.config.styles['input-focus-border-color']\n\t              }\n\t            },\n\t            enabled: {\n\t              config: {\n\t                pressed: {\n\t                  'fill': this.config.styles['input-fill'],\n\t                  'stroke-width': this.config.styles['input-border-thickness'],\n\t                  'stroke': this.config.styles['input-border-color']\n\t                },\n\t                normal: {\n\t                  'fill': this.config.styles['input-fill'],\n\t                  'stroke-width': this.config.styles['input-border-thickness'],\n\t                  'stroke': this.config.styles['input-border-color']\n\t                },\n\t                hover: {\n\t                  'fill': this.config.styles['input-fill'],\n\t                  'stroke-width': this.config.styles['input-border-thickness'],\n\t                  'stroke': this.config.styles['input-border-color']\n\t                }\n\t              }\n\t            }\n\t          }\n\t        });\n\t\n\t        fromDateEventConfig = {\n\t          click: {\n\t            fn: function fn() {\n\t              if (self.fromDate.state === 'errored' && self.fromError.text.attr('text') !== '') {\n\t                self.toError.group.hide();\n\t                self.fromError.group.show();\n\t              }\n\t              self.fromDate.edit();\n\t              self.fromDate.updateVisual('pressed');\n\t            }\n\t          },\n\t          // tooltext: self.config.fromTooltipText,\n\t          keypress: function keypress(e) {\n\t            var event = e || window.event,\n\t                charCode = event.which || event.keyCode;\n\t            if (charCode === 13) {\n\t              self.startDate = self.fromDate.getText();\n\t              if (self.fromDate.state !== 'errored') {\n\t                self.fromDate.blur();\n\t                self.fromError.group.hide();\n\t                // self.fromDate.svgElems.node.tooltip(self.config.fromTooltipText);\n\t                self.fromDate.updateVisual('enabled');\n\t              } else {\n\t                self.fromError.group.show();\n\t                // self.fromDate.svgElems.node.tooltip(self.startTooltipErrorMsg);\n\t              }\n\t            }\n\t          },\n\t          textOnBlur: function textOnBlur() {\n\t            self.fromDate.blur();\n\t            self.startDate = self.fromDate.getText();\n\t            if (self.fromDate.state !== 'errored') {\n\t              self.fromDate.blur();\n\t              self.fromError.group.hide();\n\t              // self.fromDate.svgElems.node.tooltip(self.config.fromTooltipText);\n\t              self.fromDate.updateVisual('enabled');\n\t            } else {\n\t              self.fromError.group.show();\n\t              // self.fromDate.svgElems.node.tooltip(self.startTooltipErrorMsg);\n\t            }\n\t          }\n\t        };\n\t\n\t        self.fromDate.attachEventHandlers(fromDateEventConfig);\n\t\n\t        toDateEventConfig = {\n\t          click: {\n\t            fn: function fn() {\n\t              if (self.toDate.state === 'errored' && self.toError.text.attr('text') !== '') {\n\t                self.fromError.group.hide();\n\t                self.toError.group.show();\n\t              }\n\t              self.toDate.edit();\n\t              self.toDate.updateVisual('pressed');\n\t            }\n\t          },\n\t          // tooltext: self.config.toTooltipText,\n\t          keypress: function keypress(e) {\n\t            var event = e || window.event,\n\t                charCode = event.which || event.keyCode;\n\t            if (charCode === 13) {\n\t              self.endDate = self.toDate.getText();\n\t              if (self.toDate.state !== 'errored') {\n\t                self.toDate.blur();\n\t                self.toError.group.hide();\n\t                // self.toDate.svgElems.node.tooltip(self.config.toTooltipText);\n\t                self.toDate.updateVisual('enabled');\n\t              } else {\n\t                self.toError.group.show();\n\t                // self.toDate.svgElems.node.tooltip(self.endTooltipErrorMsg);\n\t              }\n\t            }\n\t          },\n\t          textOnBlur: function textOnBlur() {\n\t            self.toDate.blur();\n\t            self.endDate = self.toDate.getText();\n\t            if (self.toDate.state !== 'errored') {\n\t              self.toDate.blur();\n\t              self.toError.group.hide();\n\t              // self.toDate.svgElems.node.tooltip(self.config.toTooltipText);\n\t              self.toDate.updateVisual('enabled');\n\t            } else {\n\t              self.toError.group.show();\n\t              // self.toDate.svgElems.node.tooltip(self.endTooltipErrorMsg);\n\t            }\n\t          }\n\t        };\n\t\n\t        self.toDate.attachEventHandlers(toDateEventConfig);\n\t\n\t        fromGroup.addSymbol(fromDateLabel);\n\t        fromGroup.addSymbol(self.fromDate);\n\t        toGroup.addSymbol(toDateLabel);\n\t        toGroup.addSymbol(self.toDate);\n\t        toolbar.addComponent(fromGroup);\n\t        toolbar.addComponent(toGroup);\n\t        return toolbar;\n\t      }\n\t    }, {\n\t      key: 'getLogicalSpace',\n\t      value: function getLogicalSpace(availableWidth, availableHeight) {\n\t        var logicalSpace,\n\t            width = 0,\n\t            height = 0;\n\t\n\t        logicalSpace = this.toolbars[0].getLogicalSpace(availableWidth, availableHeight);\n\t        width += logicalSpace.width;\n\t        height += logicalSpace.height;\n\t        this.toolbars[0].width = logicalSpace.width;\n\t        this.toolbars[0].height = logicalSpace.height;\n\t        return {\n\t          width: width,\n\t          height: height\n\t        };\n\t      }\n\t    }, {\n\t      key: 'placeInCanvas',\n\t      value: function placeInCanvas() {\n\t        var _self = this;\n\t        _self.spaceManagerInstance.add([{\n\t          name: function name() {\n\t            return 'DateRangeChooserToolbox';\n\t          },\n\t          ref: function ref(obj) {\n\t            return obj['0'];\n\t          },\n\t          self: function self() {\n\t            return _self;\n\t          },\n\t          priority: function priority() {\n\t            return 2;\n\t          },\n\t          layout: function layout(obj) {\n\t            return obj[_self.config.layout];\n\t          },\n\t          orientation: [{\n\t            type: function type(obj) {\n\t              return obj[_self.config.orientation];\n\t            },\n\t            position: [{\n\t              type: function type(obj) {\n\t                return obj[_self.config.position];\n\t              },\n\t              alignment: [{\n\t                type: function type(obj) {\n\t                  return obj[_self.config.alignment];\n\t                },\n\t                dimensions: [function () {\n\t                  var parent = this.getParentComponentGroup();\n\t                  return _self.getLogicalSpace(parent.getWidth(), parent.getHeight());\n\t                }]\n\t              }]\n\t            }]\n\t          }]\n\t        }]);\n\t      }\n\t    }, {\n\t      key: 'setDrawingConfiguration',\n\t      value: function setDrawingConfiguration(x, y, width, height, group) {\n\t        var mes = this.measurement;\n\t        mes.x = x;\n\t        mes.y = y;\n\t        mes.width = width;\n\t        mes.height = height;\n\t\n\t        this.parentGroup = group;\n\t\n\t        return this;\n\t      }\n\t    }, {\n\t      key: 'draw',\n\t      value: function draw(x, y, width, height, group) {\n\t        var self = this,\n\t            measurement = self.measurement,\n\t            toolbars = self.toolbars,\n\t            ln = void 0,\n\t            i = void 0,\n\t            toolbar = void 0,\n\t            model = self.globalReactiveModel;\n\t\n\t        x = x === undefined ? measurement.x : x;\n\t        y = y === undefined ? measurement.y : y;\n\t        width = width === undefined ? measurement.width : width;\n\t        height = height === undefined ? measurement.height : height;\n\t        group = group === undefined ? self.parentGroup : group;\n\t        if (width && height) {\n\t          self.isDrawn = true;\n\t          for (i = 0, ln = toolbars.length; i < ln; i++) {\n\t            toolbar = toolbars[i];\n\t            toolbar.draw(x, y, group);\n\t          }\n\t          model.onPropsChange(['x-axis-visible-range-start', 'x-axis-visible-range-end'], function (start, end) {\n\t            // setTimeout(() => {\n\t            self.startDt = start[1];\n\t            self.fromDate.blur(self.getDate(start[1]));\n\t            self.fromError.text.attr('text', '');\n\t            self.fromError.group.hide();\n\t            // self.fromDate.svgElems.node.tooltip(self.config.fromTooltipText);\n\t            self.fromDate.updateVisual('enabled');\n\t            self.endDt = end[1];\n\t            self.toDate.blur(self.getDate(end[1]));\n\t            self.toError.text.attr('text', '');\n\t            self.toError.group.hide();\n\t            // self.toDate.svgElems.node.tooltip(self.config.toTooltipText);\n\t            self.toDate.updateVisual('enabled');\n\t            // }, 400);\n\t          });\n\t        }\n\t\n\t        if (self.config.orientation === 'vertical') {\n\t          self.fromError = self.createErrorGroup(self.toDate);\n\t          self.toError = self.createErrorGroup(self.toDate);\n\t        } else if (self.config.orientation === 'horizontal') {\n\t          self.fromError = self.createErrorGroup(self.fromDate);\n\t          self.toError = self.createErrorGroup(self.toDate);\n\t        }\n\t        self.startDataset = self.globalReactiveModel.model['x-axis-absolute-range-start'];\n\t        self.endDataset = self.globalReactiveModel.model['x-axis-absolute-range-end'];\n\t        self.maxXAxisTicks = self.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n\t        self.maxXAxisTicks = self.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n\t        self.minDatestampDiff = self.globalReactiveModel.model['minimum-consecutive-datestamp-diff'];\n\t        self.minActiveInterval = self.maxXAxisTicks * self.minDatestampDiff;\n\t      }\n\t    }, {\n\t      key: 'startDate',\n\t      get: function get() {\n\t        return this.startDt;\n\t      },\n\t      set: function set(startDt) {\n\t        var startTimestamp = this.getTimestamp(startDt),\n\t            newDate = this.getDate(this.startDt),\n\t            absoluteStart = this.globalReactiveModel.model['x-axis-absolute-range-start'],\n\t            absoluteEnd = this.globalReactiveModel.model['x-axis-absolute-range-end'],\n\t            minDiff = this.minActiveInterval,\n\t            actualDiff = this.endDt - startTimestamp;\n\t        if (newDate !== startDt) {\n\t          if (this.isBetween(startTimestamp, absoluteStart, absoluteEnd, 'from') && this.isBeforeOrEqualTo(startTimestamp, this.endDt, 'from') && this.diffIsGreaterThan(actualDiff, minDiff, 'from')) {\n\t            this.startDt = startTimestamp;\n\t            this.globalReactiveModel.model['x-axis-visible-range-start'] = this.startDt;\n\t          } else {\n\t            this.toError.group.hide();\n\t            this.fromDate.updateVisual('errored');\n\t          }\n\t        } else {\n\t          if (this.fromDate.state === 'errored') {\n\t            this.fromDate.updateVisual('enabled');\n\t          }\n\t        }\n\t      }\n\t    }, {\n\t      key: 'endDate',\n\t      get: function get() {\n\t        return this.endDt;\n\t      },\n\t      set: function set(endDt) {\n\t        var endTimestamp = this.getTimestamp(endDt),\n\t            newDate = this.getDate(this.endDt),\n\t            absoluteStart = this.globalReactiveModel.model['x-axis-absolute-range-start'],\n\t            absoluteEnd = this.globalReactiveModel.model['x-axis-absolute-range-end'],\n\t            minDiff = this.minActiveInterval,\n\t            actualDiff = endTimestamp - this.startDt;\n\t        if (newDate !== endDt) {\n\t          if (this.isBetween(endTimestamp, absoluteStart, absoluteEnd, 'to') && this.isAfterOrEqualTo(endTimestamp, this.startDt, 'to') && this.diffIsGreaterThan(actualDiff, minDiff, 'to')) {\n\t            this.endDt = endTimestamp;\n\t            this.globalReactiveModel.model['x-axis-visible-range-end'] = this.endDt;\n\t          } else {\n\t            this.fromError.group.hide();\n\t            this.toDate.updateVisual('errored');\n\t          }\n\t        } else {\n\t          if (this.toDate.state === 'errored') {\n\t            this.toDate.updateVisual('enabled');\n\t          }\n\t        }\n\t      }\n\t    }]);\n\t\n\t    return DateRange;\n\t  }();\n\t\n\t  return DateRange;\n\t};\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// date-range-chooser-es5.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a08bbaecb874d28731ea","'use strict';\nconst DateRange = require('./fcts-ext-daterange');\n\n;(function (env, factory) {\n  if (typeof module === 'object' && module.exports) {\n    module.exports = env.document\n       ? factory(env) : function (win) {\n         if (!win.document) {\n           throw new Error('Window with document not present');\n         }\n         return factory(win, true);\n       };\n  } else {\n    env.DateRangeChooser = factory(env, true);\n  }\n})(typeof window !== 'undefined' ? window : this, function (_window, windowExists) {\n  var FC = _window.FusionCharts;\n  FC.register('extension', ['private', 'date-range-chooser', function () {\n    var DateTimeFormatter = this.hcLib.DateTimeFormatter;\n    FC.registerComponent('extensions', 'date-range-chooser', DateRange({FusionCharts: FC,\n      DateTimeFormatter: DateTimeFormatter}));\n  }]);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 1\n// module chunks = 0","'use strict';\nmodule.exports = function (dep) {\n  /**\n   * Class representing the DateRange.\n   */\n  class DateRange {\n    constructor () {\n      /**\n       * @private\n       */\n      this.startDt = 0;\n      this.endDt = 0;\n      this.startDataset = 0;\n      this.endDataset = 0;\n      if (typeof dep.FusionCharts === 'function') {\n        this.toolbox = dep.FusionCharts.getComponent('api', 'toolbox');\n      } else {\n        throw new Error('Unable to find FusionCharts.');\n      }\n      if (typeof dep.FusionCharts === 'function') {\n        this.DateTimeFormatter = dep.DateTimeFormatter;\n      } else {\n        throw new Error('Unable to find DateTimeFormatter.');\n      }\n      this.HorizontalToolbar = this.toolbox.HorizontalToolbar;\n      this.ComponentGroup = this.toolbox.ComponentGroup;\n      this.isDrawn = false;\n      this.startTooltipErrorMsg = '';\n      this.endTooltipErrorMsg = '';\n      this.createObjectAssign();\n    }\n\n    /**\n     * An object representing the start and end dates.\n     * @type {DateRange.range}\n     */\n    get startDate () {\n      return this.startDt;\n    }\n\n    set startDate (startDt) {\n      let startTimestamp = this.getTimestamp(startDt),\n        newDate = this.getDate(this.startDt),\n        absoluteStart = this.globalReactiveModel.model['x-axis-absolute-range-start'],\n        absoluteEnd = this.globalReactiveModel.model['x-axis-absolute-range-end'],\n        minDiff = this.minActiveInterval,\n        actualDiff = this.endDt - startTimestamp;\n      if (newDate !== startDt) {\n        if (this.isBetween(startTimestamp, absoluteStart, absoluteEnd, 'from') &&\n          this.isBeforeOrEqualTo(startTimestamp, this.endDt, 'from') &&\n          this.diffIsGreaterThan(actualDiff, minDiff, 'from')) {\n          this.startDt = startTimestamp;\n          this.globalReactiveModel.model['x-axis-visible-range-start'] = this.startDt;\n        } else {\n          this.toError.group.hide();\n          this.fromDate.updateVisual('errored');\n        }\n      } else {\n        if (this.fromDate.state === 'errored') {\n          this.fromDate.updateVisual('enabled');\n        }\n      }\n    }\n\n    isBeforeOrEqualTo (startTimestamp, endTimestamp, errorType) {\n      if (startTimestamp <= endTimestamp) {\n        return true;\n      } else {\n        this.startTooltipErrorMsg =\n        '<span style=\"color: ' +\n        this.config.styles['input-error-tooltip-font-color'] +\n        '\">Date must be less than end date!</span>';\n        if (errorType === 'from') {\n          this.setErrorMsg(this.fromError, 'Date must be less than end date!');\n        }\n        return false;\n      }\n    }\n\n    get endDate () {\n      return this.endDt;\n    }\n\n    set endDate (endDt) {\n      let endTimestamp = this.getTimestamp(endDt),\n        newDate = this.getDate(this.endDt),\n        absoluteStart = this.globalReactiveModel.model['x-axis-absolute-range-start'],\n        absoluteEnd = this.globalReactiveModel.model['x-axis-absolute-range-end'],\n        minDiff = this.minActiveInterval,\n        actualDiff = endTimestamp - this.startDt;\n      if (newDate !== endDt) {\n        if (this.isBetween(endTimestamp, absoluteStart, absoluteEnd, 'to') &&\n          this.isAfterOrEqualTo(endTimestamp, this.startDt, 'to') &&\n          this.diffIsGreaterThan(actualDiff, minDiff, 'to')) {\n          this.endDt = endTimestamp;\n          this.globalReactiveModel.model['x-axis-visible-range-end'] = this.endDt;\n        } else {\n          this.fromError.group.hide();\n          this.toDate.updateVisual('errored');\n        }\n      } else {\n        if (this.toDate.state === 'errored') {\n          this.toDate.updateVisual('enabled');\n        }\n      }\n    }\n\n    isAfterOrEqualTo (endTimestamp, startTimestamp, errorType) {\n      if (endTimestamp >= startTimestamp) {\n        return true;\n      } else {\n        this.endTooltipErrorMsg =\n        '<span style=\"color: ' +\n        this.config.styles['input-error-tooltip-font-color'] +\n        '\">Date must be greater than start date!</span>';\n        if (errorType === 'to') {\n          this.setErrorMsg(this.toError, 'Date must be greater than start date!');\n        }\n        return false;\n      }\n    }\n\n    isBetween (timestamp, absoluteStart, absoluteEnd, errorType) {\n      if (timestamp >= absoluteStart && timestamp <= absoluteEnd) {\n        return true;\n      } else {\n        this.startTooltipErrorMsg = this.endTooltipErrorMsg =\n        '<span style=\"color: ' +\n        this.config.styles['input-error-tooltip-font-color'] +\n        '\">Date out of bounds!</span>';\n        if (errorType === 'from') {\n          this.setErrorMsg(this.fromError, 'Date out of bounds!');\n        } else if (errorType === 'to') {\n          this.setErrorMsg(this.toError, 'Date out of bounds!');\n        }\n        return false;\n      }\n    }\n\n    diffIsGreaterThan (actualDiff, minDiff, errorType) {\n      if (actualDiff > minDiff) {\n        return true;\n      } else {\n        this.startTooltipErrorMsg = this.endTooltipErrorMsg =\n        '<span style=\"color: ' +\n        this.config.styles['input-error-tooltip-font-color'] +\n        '\">Zoom limit exceeded!</span>';\n        if (errorType === 'from') {\n          this.setErrorMsg(this.fromError, 'Zoom limit exceeded!');\n        } else if (errorType === 'to') {\n          this.setErrorMsg(this.toError, 'Zoom limit exceeded!');\n        }\n        return false;\n      }\n    }\n\n    getTimestamp (dateStr) {\n      let dateFormat = this.config.dateFormat,\n        dateFormatter = new dep.DateTimeFormatter(dateFormat);\n      return +dateFormatter.getNativeDate(dateStr);\n    }\n\n    getDate (timestamp) {\n      var dateFormat = this.config.dateFormat;\n      return this.DateTimeFormatter.formatAs(timestamp, dateFormat);\n    }\n\n    /**\n     * Sets the configurable options of the extension (e.g. cosmetics)\n     * @param {Object} configObj The configuration object containing various extension options\n     */\n    setConfig (configObj) {}\n\n    /**\n     * Gets the configurable options of the extension (e.g. cosmetics)\n     * @return {object} configObj The configuration object containing various extension options\n     */\n    getConfig () {\n      return {\n        calendarVisible: 'false'\n      };\n    }\n\n    createConfig (extData) {\n      let config = {},\n        defaultStyles = {\n          'width': 120,\n          'height': 22,\n\n          'font-family': '\"Lucida Grande\", sans-serif',\n          'font-size': 13,\n          'font-color': '#4B4B4B',\n\n          'input-fill': '#FFFFFF',\n          'input-border-thickness': 1,\n          'input-border-color': '#CED5D4',\n          'input-border-radius': 1,\n          'input-shadow-fill': '#000000',\n          'input-shadow-opacity': 0.35,\n\n          'input-focus-fill': '#FFFFFF',\n          'input-focus-border-thickness': 1,\n          'input-focus-border-color': '#1E1F1F',\n\n          'input-error-fill': '#FFEFEF',\n          'input-error-border-thickness': 1,\n          'input-error-border-color': '#D25353',\n          'input-error-tooltip-font-color': '#FF0000'\n        };\n      config.disabled = extData.disabled || false;\n      config.layout = extData.layout || 'inline';\n      config.orientation = extData.orientation || 'horizontal';\n      config.position = extData.position || 'top';\n      config.alignment = extData.alignment || 'right';\n      config.dateFormat = extData.dateFormat || '%d-%m-%Y';\n      config.fromText = extData.fromText || 'From:';\n      config.fromTooltipText = extData.fromTooltipText || 'From Date';\n      config.toText = extData.toText || 'To:';\n      config.toTooltipText = extData.toTooltipText || 'To Date';\n      config.styles = Object.assign(defaultStyles, extData.styles);\n      return config;\n    }\n\n    createErrorGroup (symbol) {\n      let self = this,\n        paper = self.graphics.paper,\n        circle,\n        crossPath,\n        cross,\n        rect,\n        text,\n        group,\n        textBBox,\n        circleBBox,\n        rectBBox,\n        symbolBBox,\n        orientation = self.config.orientation,\n        position = self.config.position;\n\n      if (orientation === 'horizontal') {\n        if (position === 'top') {\n          symbolBBox = symbol.getBoundElement().getBBox();\n          group = paper.group('error-group');\n\n          rect = paper.rect(symbolBBox.x,\n            symbolBBox.y - symbolBBox.height - 4, 20, 20, group);\n          rectBBox = rect.getBBox();\n\n          circle = paper.circle(symbolBBox.x + 5 + 4,\n            symbolBBox.y - symbolBBox.height - 4 + 5 + 5, 6, group);\n          circleBBox = circle.getBBox();\n\n          crossPath = this.getCrossPath(circleBBox, 4);\n          cross = paper.path(crossPath, group);\n\n          text = paper.text(circleBBox.x + circleBBox.width + 4, rectBBox.y + 2,\n            '', group);\n          textBBox = text.getBBox();\n        } else if (position === 'bottom') {\n          symbolBBox = symbol.getBoundElement().getBBox();\n          group = paper.group('error-group');\n\n          rect = paper.rect(symbolBBox.x,\n            symbolBBox.y + symbolBBox.height + 4, 20, 20, group);\n          rectBBox = rect.getBBox();\n\n          circle = paper.circle(symbolBBox.x + 5 + 4,\n            symbolBBox.y + symbolBBox.height + 4 + 5 + 5, 6, group);\n          circleBBox = circle.getBBox();\n\n          crossPath = this.getCrossPath(circleBBox, 4);\n          cross = paper.path(crossPath, group);\n\n          text = paper.text(circleBBox.x + circleBBox.width + 4, rectBBox.y + 2,\n            '', group);\n          textBBox = text.getBBox();\n        }\n      } else if (orientation === 'vertical') {\n        symbolBBox = symbol.getBoundElement().getBBox();\n        group = paper.group('error-group');\n\n        rect = paper.rect(symbolBBox.x,\n          symbolBBox.y + symbolBBox.height + 4, 20, 20, group);\n        rectBBox = rect.getBBox();\n\n        circle = paper.circle(symbolBBox.x + 5 + 4,\n          symbolBBox.y + symbolBBox.height + 4 + 5 + 5, 6, group);\n        circleBBox = circle.getBBox();\n\n        crossPath = this.getCrossPath(circleBBox, 4);\n        cross = paper.path(crossPath, group);\n\n        text = paper.text(circleBBox.x + circleBBox.width + 4, rectBBox.y + 2,\n          '', group);\n        textBBox = text.getBBox();\n      }\n\n      circle.attr({\n        'stroke': '#d71f26',\n        'stroke-width': '1',\n        'fill': 'none'\n      });\n      cross.attr({\n        'stroke': '#000000',\n        'stroke-width': '1.5'\n      });\n      text.attr({\n        'text-anchor': 'start',\n        'y': textBBox.y + textBBox.height,\n        'fill': '#D80000',\n        'font-family': '\"Lucida Grande\", sans-serif',\n        'font-size': '12'\n      });\n      rect.attr({\n        'fill': '#FFFFFF',\n        'fill-opacity': '0.8',\n        'stroke-width': '0',\n        'width': textBBox.width + circleBBox.width\n      });\n      group.attr({\n        visibility: 'hidden'\n      });\n\n      return {\n        'group': group,\n        'cross': cross,\n        'circle': circle,\n        'rect': rect,\n        'text': text\n      };\n    }\n\n    getCrossPath (circleBox, padding) {\n      // M478,77L483,82M478,82L483,77\n      let circleX1 = Math.round(circleBox.x),\n        circleY1 = Math.round(circleBox.y),\n        circleX2 = Math.round(circleBox.x2),\n        circleY2 = Math.round(circleBox.y2),\n        crossX1 = circleX1 + 4,\n        crossY1 = circleY1 + 2,\n        crossX2 = circleX2 - 4,\n        crossY2 = circleY2 - 3,\n        pathStr = 'M' + crossX1 + ',' + crossY1 + 'L' + crossX2 + ',' + crossY2;\n      pathStr += 'M' + crossX1 + ',' + crossY2 + 'L' + crossX2 + ',' + crossY1;\n      return pathStr;\n    }\n\n    setErrorMsg (errorGroup, errorMsg) {\n      let canvasImpl = this.chartInstance.apiInstance.getCanvasInstances()[0],\n        canvasX = canvasImpl.measurement.x,\n        canvasWidth = canvasImpl.measurement.width,\n        canvasEnd = canvasX + canvasWidth,\n        errorRectX,\n        errorRectWidth,\n        errorRectEnd;\n\n      if (errorGroup.text.attr('text') === errorMsg) {\n        return;\n      }\n      errorGroup.text.attr('text', errorMsg);\n      errorGroup.rect.attr('width',\n        errorGroup.text.getBBox().width + (4 * 2) + errorGroup.circle.getBBox().width + 2);\n\n      errorRectX = errorGroup.rect.getBBox().x;\n      errorRectWidth = errorGroup.rect.getBBox().width;\n      errorRectEnd = errorRectX + errorRectWidth;\n      if (errorRectEnd > canvasEnd) {\n        let diff = errorRectEnd - canvasEnd;\n        errorGroup.rect.attr('x', errorRectX - diff);\n        errorGroup.circle.attr('cx', errorGroup.circle.getBBox().x - diff + 5);\n        errorGroup.cross.translate(-diff - 1, 0);\n        errorGroup.text.attr('x', errorGroup.text.getBBox().x - diff);\n      }\n    }\n\n    createObjectAssign () {\n      if (typeof Object.assign !== 'function') {\n        Object.assign = function (target, varArgs) {\n          'use strict';\n          if (target == null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n          }\n\n          var to = Object(target);\n\n          for (let index = 1; index < arguments.length; index++) {\n            let nextSource = arguments[index];\n\n            if (nextSource != null) {\n              for (let nextKey in nextSource) {\n                // Avoid bugs when hasOwnProperty is shadowed\n                if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                  to[nextKey] = nextSource[nextKey];\n                }\n              }\n            }\n          }\n          return to;\n        };\n      }\n    }\n\n    /**\n     * Fusioncharts life cycle method for extension\n     */\n    init (require) {\n      var instance = this;\n      require([\n        'xAxis',\n        'graphics',\n        'chart',\n        'dataset',\n        'globalReactiveModel',\n        'spaceManagerInstance',\n        'extData',\n        'smartLabel',\n        'chartInstance',\n        function (\n          xAxis,\n          graphics,\n          chart,\n          dataset,\n          globalReactiveModel,\n          spaceManagerInstance,\n          extData,\n          smartLabel,\n          chartInstance) {\n          instance.xAxis = xAxis;\n          instance.graphics = graphics;\n          instance.chart = chart;\n          instance.dataset = dataset;\n          instance.globalReactiveModel = globalReactiveModel;\n          instance.spaceManagerInstance = spaceManagerInstance;\n          instance.config = instance.createConfig(extData);\n          instance.smartLabel = smartLabel;\n          instance.chartInstance = chartInstance;\n        }\n      ]);\n      instance.startDt = instance.globalReactiveModel.model['x-axis-visible-range-start'];\n      instance.endDt = instance.globalReactiveModel.model['x-axis-visible-range-end'];\n      instance.toolbars = [];\n      instance.measurement = {};\n      instance.toolbars.push(instance.createToolbar());\n      return instance;\n    };\n\n    createToolbar () {\n      var toolbar,\n        self = this,\n        fromDateLabel,\n        toDateLabel,\n        fromGroup,\n        toGroup,\n        fromFormattedDate,\n        toFormattedDate;\n\n      let fromDateEventConfig = {},\n        toDateEventConfig = {};\n\n      self.fromDate = {};\n      self.toDate = {};\n\n      fromFormattedDate = this.getDate(this.startDt);\n      toFormattedDate = this.getDate(this.endDt);\n      toolbar = new this.HorizontalToolbar({\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      });\n\n      toolbar.setConfig({\n        'fill': '#FFFFFF',\n        'borderThickness': 0\n      });\n\n      fromGroup = new this.toolbox.ComponentGroup({\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      });\n\n      toGroup = new this.toolbox.ComponentGroup({\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      });\n\n      fromGroup.setConfig({\n        'fill': '#FFFFFF',\n        'borderThickness': 0\n      });\n\n      toGroup.setConfig({\n        'fill': '#FFFFFF',\n        'borderThickness': 0\n      });\n\n      fromDateLabel = new this.toolbox.Label(\n        this.config['fromText'], {\n          smartLabel: this.smartLabel,\n          paper: this.graphics.paper\n        }, {\n          text: {\n            style: {\n              'font-size': this.config.styles['font-size'],\n              'font-family': this.config.styles['font-family'],\n              'fill': this.config.styles['font-color']\n            }\n          },\n          container: {\n            'width': 40\n          }\n        }\n      );\n\n      toDateLabel = new this.toolbox.Label(\n        this.config['toText'], {\n          smartLabel: this.smartLabel,\n          paper: this.graphics.paper\n        }, {\n          text: {\n            style: {\n              'font-size': this.config.styles['font-size'],\n              'font-family': this.config.styles['font-family'],\n              'fill': this.config.styles['font-color'],\n              'text-anchor': 'start'\n            }\n          },\n          container: {\n            'width': 40\n          }\n        }\n      );\n\n      self.fromDate = new this.toolbox.InputTextBoxSymbol({\n        width: this.config.styles['width'],\n        height: this.config.styles['height']\n      }, {\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      }, {\n        'strokeWidth': this.config.styles['input-border-thickness'],\n        'fill': this.config.styles['input-fill'],\n        'stroke': this.config.styles['input-border-color'],\n        'radius': this.config.styles['input-border-radius'],\n        'btnTextStyle': {\n          'fontFamily': this.config.styles['font-family'],\n          'fontSize': this.config.styles['font-size']\n        },\n        'shadow': {\n          'fill': this.config.styles['input-shadow-fill'],\n          'opacity': this.config.styles['input-shadow-opacity']\n        },\n        'label': fromFormattedDate,\n        'labelFill': this.config.styles['font-color']\n      });\n\n      self.fromDate.addCustomState('errored', {\n        config: {\n          hover: {\n            'fill': this.config.styles['input-error-fill'],\n            'stroke-width': this.config.styles['input-error-border-thickness'],\n            'stroke': this.config.styles['input-error-border-color']\n          },\n          normal: {\n            'fill': this.config.styles['input-error-fill'],\n            'stroke-width': this.config.styles['input-error-border-thickness'],\n            'stroke': this.config.styles['input-error-border-color']\n          },\n          pressed: {\n            'fill': this.config.styles['input-error-fill'],\n            'stroke-width': this.config.styles['input-error-border-thickness'],\n            'stroke': this.config.styles['input-error-border-color']\n          }\n        }\n      });\n\n      self.fromDate.setStateConfig({\n        pressed: {\n          config: {\n            pressed: {\n              'fill': this.config.styles['input-focus-fill'],\n              'stroke-width': this.config.styles['input-focus-border-thickness'],\n              'stroke': this.config.styles['input-focus-border-color']\n            },\n            normal: {\n              'fill': this.config.styles['input-focus-fill'],\n              'stroke-width': this.config.styles['input-focus-border-thickness'],\n              'stroke': this.config.styles['input-focus-border-color']\n            },\n            hover: {\n              'fill': this.config.styles['input-focus-fill'],\n              'stroke-width': this.config.styles['input-focus-border-thickness'],\n              'stroke': this.config.styles['input-focus-border-color']\n            }\n          }\n        },\n        enabled: {\n          config: {\n            pressed: {\n              'fill': this.config.styles['input-fill'],\n              'stroke-width': this.config.styles['input-border-thickness'],\n              'stroke': this.config.styles['input-border-color']\n            },\n            normal: {\n              'fill': this.config.styles['input-fill'],\n              'stroke-width': this.config.styles['input-border-thickness'],\n              'stroke': this.config.styles['input-border-color']\n            },\n            hover: {\n              'fill': this.config.styles['input-fill'],\n              'stroke-width': this.config.styles['input-border-thickness'],\n              'stroke': this.config.styles['input-border-color']\n            }\n          }\n        }\n      });\n\n      self.toDate = new this.toolbox.InputTextBoxSymbol({\n        width: this.config.styles['width'],\n        height: this.config.styles['height']\n      }, {\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      }, {\n        'strokeWidth': this.config.styles['input-border-thickness'],\n        'fill': this.config.styles['input-fill'],\n        'stroke': this.config.styles['input-border-color'],\n        'radius': this.config.styles['input-border-radius'],\n        'btnTextStyle': {\n          'fontFamily': this.config.styles['font-family'],\n          'fontSize': this.config.styles['font-size']\n        },\n        'shadow': {\n          'fill': this.config.styles['input-shadow-fill'],\n          'opacity': this.config.styles['input-shadow-opacity']\n        },\n        'label': toFormattedDate,\n        'labelFill': this.config.styles['font-color']\n      });\n\n      self.toDate.addCustomState('errored', {\n        config: {\n          hover: {\n            'fill': this.config.styles['input-error-fill'],\n            'stroke-width': this.config.styles['input-error-border-thickness'],\n            'stroke': this.config.styles['input-error-border-color']\n          },\n          normal: {\n            'fill': this.config.styles['input-error-fill'],\n            'stroke-width': this.config.styles['input-error-border-thickness'],\n            'stroke': this.config.styles['input-error-border-color']\n          },\n          pressed: {\n            'fill': this.config.styles['input-error-fill'],\n            'stroke-width': this.config.styles['input-error-border-thickness'],\n            'stroke': this.config.styles['input-error-border-color']\n          }\n        }\n      });\n\n      self.toDate.setStateConfig({\n        pressed: {\n          config: {\n            pressed: {\n              'fill': this.config.styles['input-focus-fill'],\n              'stroke-width': this.config.styles['input-focus-border-thickness'],\n              'stroke': this.config.styles['input-focus-border-color']\n            },\n            normal: {\n              'fill': this.config.styles['input-focus-fill'],\n              'stroke-width': this.config.styles['input-focus-border-thickness'],\n              'stroke': this.config.styles['input-focus-border-color']\n            },\n            hover: {\n              'fill': this.config.styles['input-focus-fill'],\n              'stroke-width': this.config.styles['input-focus-border-thickness'],\n              'stroke': this.config.styles['input-focus-border-color']\n            }\n          },\n          enabled: {\n            config: {\n              pressed: {\n                'fill': this.config.styles['input-fill'],\n                'stroke-width': this.config.styles['input-border-thickness'],\n                'stroke': this.config.styles['input-border-color']\n              },\n              normal: {\n                'fill': this.config.styles['input-fill'],\n                'stroke-width': this.config.styles['input-border-thickness'],\n                'stroke': this.config.styles['input-border-color']\n              },\n              hover: {\n                'fill': this.config.styles['input-fill'],\n                'stroke-width': this.config.styles['input-border-thickness'],\n                'stroke': this.config.styles['input-border-color']\n              }\n            }\n          }\n        }\n      });\n\n      fromDateEventConfig = {\n        click: {\n          fn: function () {\n            if (self.fromDate.state === 'errored' &&\n              self.fromError.text.attr('text') !== '') {\n              self.toError.group.hide();\n              self.fromError.group.show();\n            }\n            self.fromDate.edit();\n            self.fromDate.updateVisual('pressed');\n          }\n        },\n        // tooltext: self.config.fromTooltipText,\n        keypress: (e) => {\n          let event = e || window.event,\n            charCode = event.which || event.keyCode;\n          if (charCode === 13) {\n            self.startDate = self.fromDate.getText();\n            if (self.fromDate.state !== 'errored') {\n              self.fromDate.blur();\n              self.fromError.group.hide();\n              // self.fromDate.svgElems.node.tooltip(self.config.fromTooltipText);\n              self.fromDate.updateVisual('enabled');\n            } else {\n              self.fromError.group.show();\n              // self.fromDate.svgElems.node.tooltip(self.startTooltipErrorMsg);\n            }\n          }\n        },\n        textOnBlur: function () {\n          self.fromDate.blur();\n          self.startDate = self.fromDate.getText();\n          if (self.fromDate.state !== 'errored') {\n            self.fromDate.blur();\n            self.fromError.group.hide();\n            // self.fromDate.svgElems.node.tooltip(self.config.fromTooltipText);\n            self.fromDate.updateVisual('enabled');\n          } else {\n            self.fromError.group.show();\n            // self.fromDate.svgElems.node.tooltip(self.startTooltipErrorMsg);\n          }\n        }\n      };\n\n      self.fromDate.attachEventHandlers(fromDateEventConfig);\n\n      toDateEventConfig = {\n        click: {\n          fn: () => {\n            if (self.toDate.state === 'errored' &&\n              self.toError.text.attr('text') !== '') {\n              self.fromError.group.hide();\n              self.toError.group.show();\n            }\n            self.toDate.edit();\n            self.toDate.updateVisual('pressed');\n          }\n        },\n        // tooltext: self.config.toTooltipText,\n        keypress: (e) => {\n          let event = e || window.event,\n            charCode = event.which || event.keyCode;\n          if (charCode === 13) {\n            self.endDate = self.toDate.getText();\n            if (self.toDate.state !== 'errored') {\n              self.toDate.blur();\n              self.toError.group.hide();\n              // self.toDate.svgElems.node.tooltip(self.config.toTooltipText);\n              self.toDate.updateVisual('enabled');\n            } else {\n              self.toError.group.show();\n              // self.toDate.svgElems.node.tooltip(self.endTooltipErrorMsg);\n            }\n          }\n        },\n        textOnBlur: function () {\n          self.toDate.blur();\n          self.endDate = self.toDate.getText();\n          if (self.toDate.state !== 'errored') {\n            self.toDate.blur();\n            self.toError.group.hide();\n            // self.toDate.svgElems.node.tooltip(self.config.toTooltipText);\n            self.toDate.updateVisual('enabled');\n          } else {\n            self.toError.group.show();\n            // self.toDate.svgElems.node.tooltip(self.endTooltipErrorMsg);\n          }\n        }\n      };\n\n      self.toDate.attachEventHandlers(toDateEventConfig);\n\n      fromGroup.addSymbol(fromDateLabel);\n      fromGroup.addSymbol(self.fromDate);\n      toGroup.addSymbol(toDateLabel);\n      toGroup.addSymbol(self.toDate);\n      toolbar.addComponent(fromGroup);\n      toolbar.addComponent(toGroup);\n      return toolbar;\n    };\n\n    getLogicalSpace (availableWidth, availableHeight) {\n      var logicalSpace,\n        width = 0,\n        height = 0;\n\n      logicalSpace = this.toolbars[0].getLogicalSpace(availableWidth, availableHeight);\n      width += logicalSpace.width;\n      height += logicalSpace.height;\n      this.toolbars[0].width = logicalSpace.width;\n      this.toolbars[0].height = logicalSpace.height;\n      return {\n        width: width,\n        height: height\n      };\n    };\n\n    placeInCanvas () {\n      var self = this;\n      self.spaceManagerInstance.add([{\n        name: function () {\n          return 'DateRangeChooserToolbox';\n        },\n        ref: function (obj) {\n          return obj['0'];\n        },\n        self: function () {\n          return self;\n        },\n        priority: function () {\n          return 2;\n        },\n        layout: function (obj) {\n          return obj[self.config.layout];\n        },\n        orientation: [{\n          type: function (obj) {\n            return obj[self.config.orientation];\n          },\n          position: [{\n            type: function (obj) {\n              return obj[self.config.position];\n            },\n            alignment: [{\n              type: function (obj) {\n                return obj[self.config.alignment];\n              },\n              dimensions: [function () {\n                var parent = this.getParentComponentGroup();\n                return self.getLogicalSpace(parent.getWidth(), parent.getHeight());\n              }]\n            }]\n          }]\n        }]\n      }]);\n    };\n\n    setDrawingConfiguration (x, y, width, height, group) {\n      var mes = this.measurement;\n      mes.x = x;\n      mes.y = y;\n      mes.width = width;\n      mes.height = height;\n\n      this.parentGroup = group;\n\n      return this;\n    };\n\n    draw (x, y, width, height, group) {\n      let self = this,\n        measurement = self.measurement,\n        toolbars = self.toolbars,\n        ln,\n        i,\n        toolbar,\n        model = self.globalReactiveModel;\n\n      x = x === undefined ? measurement.x : x;\n      y = y === undefined ? measurement.y : y;\n      width = width === undefined ? measurement.width : width;\n      height = height === undefined ? measurement.height : height;\n      group = group === undefined ? self.parentGroup : group;\n      if (width && height) {\n        self.isDrawn = true;\n        for (i = 0, ln = toolbars.length; i < ln; i++) {\n          toolbar = toolbars[i];\n          toolbar.draw(x, y, group);\n        }\n        model.onPropsChange(['x-axis-visible-range-start', 'x-axis-visible-range-end'],\n          (start, end) => {\n            // setTimeout(() => {\n            self.startDt = start[1];\n            self.fromDate.blur(self.getDate(start[1]));\n            self.fromError.text.attr('text', '');\n            self.fromError.group.hide();\n            // self.fromDate.svgElems.node.tooltip(self.config.fromTooltipText);\n            self.fromDate.updateVisual('enabled');\n            self.endDt = end[1];\n            self.toDate.blur(self.getDate(end[1]));\n            self.toError.text.attr('text', '');\n            self.toError.group.hide();\n            // self.toDate.svgElems.node.tooltip(self.config.toTooltipText);\n            self.toDate.updateVisual('enabled');\n            // }, 400);\n          }\n        );\n      }\n\n      if (self.config.orientation === 'vertical') {\n        self.fromError = self.createErrorGroup(self.toDate);\n        self.toError = self.createErrorGroup(self.toDate);\n      } else if (self.config.orientation === 'horizontal') {\n        self.fromError = self.createErrorGroup(self.fromDate);\n        self.toError = self.createErrorGroup(self.toDate);\n      }\n      self.startDataset = self.globalReactiveModel.model['x-axis-absolute-range-start'];\n      self.endDataset = self.globalReactiveModel.model['x-axis-absolute-range-end'];\n      self.maxXAxisTicks = self.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n      self.maxXAxisTicks = self.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n      self.minDatestampDiff = self.globalReactiveModel.model['minimum-consecutive-datestamp-diff'];\n      self.minActiveInterval = self.maxXAxisTicks * self.minDatestampDiff;\n    };\n  }\n  return DateRange;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fcts-ext-daterange.js"],"sourceRoot":""}