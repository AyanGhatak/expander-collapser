{"version":3,"sources":["webpack:///date-range-chooser-es5.min.js","webpack:///webpack/bootstrap 43ffd89e1fc940abcffc","webpack:///./src/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/fcts-ext-daterange.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_typeof","Symbol","iterator","obj","constructor","prototype","DateRange","window","dr","env","factory","document","win","Error","DateRangeChooser","undefined","_window","windowExists","FC","FusionCharts","register","DateTimeFormatter","this","hcLib","registerComponent","webpackPolyfill","deprecate","paths","children","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","dep","startDt","endDt","startDataset","endDataset","toolbox","getComponent","HorizontalToolbar","ComponentGroup","SymbolStore","isDrawn","startTooltipErrorMsg","endTooltipErrorMsg","value","startTimestamp","endTimestamp","config","styles","absoluteStart","absoluteEnd","actualDiff","minDiff","dateStr","dateFormat","dateFormatter","getNativeDate","timestamp","formatAs","configObj","calendarVisible","extData","disabled","layout","orientation","position","alignment","fromText","fromTooltipText","toText","toTooltipText","width","height","font-family","font-size","font-color","input-fill","input-border-thickness","input-border-color","input-border-radius","input-shadow-fill","input-shadow-opacity","input-focus-fill","input-focus-border-thickness","input-focus-border-color","input-error-fill","input-error-border-thickness","input-error-border-color","input-error-tooltip-font-color","require","xAxis","graphics","chart","dataset","globalReactiveModel","spaceManagerInstance","smartLabel","chartInstance","createConfig","model","toolbars","measurement","push","createToolbar","toolbar","fromDateLabel","toDateLabel","fromGroup","toGroup","fromFormattedDate","toFormattedDate","self","fromDateEventConfig","toDateEventConfig","fromDate","toDate","getDate","paper","chartContainer","container","setConfig","fill","borderThickness","Label","text","style","text-anchor","InputTextBoxSymbol","strokeWidth","stroke","radius","btnTextStyle","fontFamily","fontSize","shadow","opacity","label","labelFill","addCustomState","hover","stroke-width","normal","pressed","setStateConfig","enabled","click","fn","edit","updateVisual","tooltext","keypress","e","event","charCode","which","keyCode","startDate","getText","state","blur","svgElems","node","tooltip","textOnBlur","attachEventHandlers","endDate","addSymbol","addComponent","availableWidth","availableHeight","logicalSpace","ln","getLogicalSpace","Math","max","padding","add","name","ref","priority","type","dimensions","parent","getParentComponentGroup","getWidth","getHeight","x","y","group","mes","parentGroup","draw","onPropsChange","start","end","setTimeout","maxXAxisTicks","minDatestampDiff","minActiveInterval","get","set","getTimestamp","newDate","isBeforeOrEqualTo","isSameOrAfter","diffIsGreaterThan","isGreaterThanOrEqualTo","isSameOrBefore"],"mappings":"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","file":"date-range-chooser-es5.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar DateRange = __webpack_require__(2);\n\t\n\twindow.dr = new DateRange();\n\t\n\t;(function (env, factory) {\n\t  if (( false ? 'undefined' : _typeof(module)) === 'object' && module.exports) {\n\t    module.exports = env.document ? factory(env) : function (win) {\n\t      if (!win.document) {\n\t        throw new Error('Window with document not present');\n\t      }\n\t      return factory(win, true);\n\t    };\n\t  } else {\n\t    env.DateRangeChooser = factory(env, true);\n\t  }\n\t})(typeof window !== 'undefined' ? window : undefined, function (_window, windowExists) {\n\t  var FC = _window.FusionCharts;\n\t  FC.register('extension', ['private', 'date-range-chooser', function () {\n\t    var DateTimeFormatter = this.hcLib.DateTimeFormatter;\n\t    FC.registerComponent('extensions', 'date-range-chooser', DateRange({ FusionCharts: FC,\n\t      DateTimeFormatter: DateTimeFormatter }));\n\t  }]);\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\n\t\tif(!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function() {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tmodule.exports = function (dep) {\n\t  /**\n\t   * Class representing the DateRange.\n\t   */\n\t  var DateRange = function () {\n\t    function DateRange() {\n\t      _classCallCheck(this, DateRange);\n\t\n\t      /**\n\t       * @private\n\t       */\n\t      this.startDt = 0;\n\t      this.endDt = 0;\n\t      this.startDataset = 0;\n\t      this.endDataset = 0;\n\t      this.toolbox = dep.FusionCharts.getComponent('api', 'toolbox');\n\t      this.DateTimeFormatter = dep.DateTimeFormatter;\n\t      this.HorizontalToolbar = this.toolbox.HorizontalToolbar;\n\t      this.ComponentGroup = this.toolbox.ComponentGroup;\n\t      this.SymbolStore = this.toolbox.SymbolStore;\n\t      this.isDrawn = false;\n\t      this.startTooltipErrorMsg = '';\n\t      this.endTooltipErrorMsg = '';\n\t    }\n\t\n\t    /**\n\t     * An object representing the start and end dates.\n\t     * @type {DateRange.range}\n\t     */\n\t\n\t\n\t    _createClass(DateRange, [{\n\t      key: 'isBeforeOrEqualTo',\n\t\n\t\n\t      // Time out of bounds\n\t      // Invalid date format\n\t      // Exceeding zoom limits\n\t\n\t      value: function isBeforeOrEqualTo(startTimestamp, endTimestamp) {\n\t        if (startTimestamp <= endTimestamp) {\n\t          return true;\n\t        } else {\n\t          this.startTooltipErrorMsg = '<span style=\"color: ' + this.config.styles['input-error-tooltip-font-color'] + '\">Date must be less than end date!</span>';\n\t          return false;\n\t        }\n\t      }\n\t    }, {\n\t      key: 'isSameOrAfter',\n\t      value: function isSameOrAfter(startTimestamp, absoluteStart) {\n\t        if (startTimestamp >= absoluteStart) {\n\t          return true;\n\t        } else {\n\t          this.startTooltipErrorMsg = '<span style=\"color: ' + this.config.styles['input-error-tooltip-font-color'] + '\">Date out of bounds!</span>';\n\t          return false;\n\t        }\n\t      }\n\t    }, {\n\t      key: 'isGreaterThanOrEqualTo',\n\t      value: function isGreaterThanOrEqualTo(endTimestamp, startTimestamp) {\n\t        if (endTimestamp >= startTimestamp) {\n\t          return true;\n\t        } else {\n\t          this.endTooltipErrorMsg = '<span style=\"color: ' + this.config.styles['input-error-tooltip-font-color'] + '\">Date must be greater than start date!</span>';\n\t          return false;\n\t        }\n\t      }\n\t    }, {\n\t      key: 'isSameOrBefore',\n\t      value: function isSameOrBefore(endTimestamp, absoluteEnd) {\n\t        if (endTimestamp <= absoluteEnd) {\n\t          return true;\n\t        } else {\n\t          this.endTooltipErrorMsg = '<span style=\"color: ' + this.config.styles['input-error-tooltip-font-color'] + '\">Date out of bounds!</span>';\n\t          return false;\n\t        }\n\t      }\n\t    }, {\n\t      key: 'diffIsGreaterThan',\n\t      value: function diffIsGreaterThan(actualDiff, minDiff) {\n\t        if (actualDiff > minDiff) {\n\t          return true;\n\t        } else {\n\t          this.startTooltipErrorMsg = this.endTooltipErrorMsg = '<span style=\"color: ' + this.config.styles['input-error-tooltip-font-color'] + '\">Zoom limit exceeded!</span>';\n\t          return false;\n\t        }\n\t      }\n\t    }, {\n\t      key: 'getTimestamp',\n\t      value: function getTimestamp(dateStr) {\n\t        var dateFormat = this.config.dateFormat,\n\t            dateFormatter = new dep.DateTimeFormatter(dateFormat);\n\t        return +dateFormatter.getNativeDate(dateStr);\n\t      }\n\t    }, {\n\t      key: 'getDate',\n\t      value: function getDate(timestamp) {\n\t        var dateFormat = this.config.dateFormat;\n\t        return this.DateTimeFormatter.formatAs(timestamp, dateFormat);\n\t      }\n\t\n\t      /**\n\t       * Sets the configurable options of the extension (e.g. cosmetics)\n\t       * @param {Object} configObj The configuration object containing various extension options\n\t       */\n\t\n\t    }, {\n\t      key: 'setConfig',\n\t      value: function setConfig(configObj) {}\n\t\n\t      /**\n\t       * Gets the configurable options of the extension (e.g. cosmetics)\n\t       * @return {object} configObj The configuration object containing various extension options\n\t       */\n\t\n\t    }, {\n\t      key: 'getConfig',\n\t      value: function getConfig() {\n\t        return {\n\t          calendarVisible: 'false'\n\t        };\n\t      }\n\t    }, {\n\t      key: 'createConfig',\n\t      value: function createConfig(extData) {\n\t        var config = {};\n\t        config.disabled = extData.disabled || 'false';\n\t        config.layout = extData.layout || 'inline';\n\t        config.orientation = extData.orientation || 'horizontal';\n\t        config.position = extData.position || 'top';\n\t        config.alignment = extData.alignment || 'right';\n\t        config.dateFormat = extData.dateFormat || '%d-%m-%Y';\n\t        config.fromText = extData.fromText || 'From:';\n\t        config.fromTooltipText = extData.fromTooltipText || 'From Date';\n\t        config.toText = extData.toText || 'To:';\n\t        config.toTooltipText = extData.toTooltipText || 'To Date';\n\t        config.styles = extData.styles || {\n\t          'width': 120,\n\t          'height': 22,\n\t\n\t          'font-family': '\"Lucida Grande\", sans-serif',\n\t          'font-size': 13,\n\t          'font-color': '#4B4B4B',\n\t\n\t          'input-fill': '#FFFFFF',\n\t          'input-border-thickness': 1,\n\t          'input-border-color': '#CED5D4',\n\t          'input-border-radius': 1,\n\t          'input-shadow-fill': '#000000',\n\t          'input-shadow-opacity': 0.35,\n\t\n\t          'input-focus-fill': '#FFFFFF',\n\t          'input-focus-border-thickness': 1,\n\t          'input-focus-border-color': '#1E1F1F',\n\t\n\t          'input-error-fill': '#FFEFEF',\n\t          'input-error-border-thickness': 1,\n\t          'input-error-border-color': '#D25353',\n\t          'input-error-tooltip-font-color': '#FF0000'\n\t        };\n\t        return config;\n\t      }\n\t\n\t      /**\n\t       * Fusioncharts life cycle method for extension\n\t       */\n\t\n\t    }, {\n\t      key: 'init',\n\t      value: function init(require) {\n\t        var instance = this;\n\t        require(['xAxis', 'graphics', 'chart', 'dataset', 'globalReactiveModel', 'spaceManagerInstance', 'extData', 'smartLabel', 'chartInstance', function (xAxis, graphics, chart, dataset, globalReactiveModel, spaceManagerInstance, extData, smartLabel, chartInstance) {\n\t          instance.xAxis = xAxis;\n\t          instance.graphics = graphics;\n\t          instance.chart = chart;\n\t          instance.dataset = dataset;\n\t          instance.globalReactiveModel = globalReactiveModel;\n\t          instance.spaceManagerInstance = spaceManagerInstance;\n\t          instance.config = instance.createConfig(extData);\n\t          instance.smartLabel = smartLabel;\n\t          instance.chartInstance = chartInstance;\n\t        }]);\n\t        instance.startDt = instance.globalReactiveModel.model['x-axis-visible-range-start'];\n\t        instance.endDt = instance.globalReactiveModel.model['x-axis-visible-range-end'];\n\t        instance.toolbars = [];\n\t        instance.measurement = {};\n\t        instance.toolbars.push(instance.createToolbar());\n\t        return instance;\n\t      }\n\t    }, {\n\t      key: 'createToolbar',\n\t      value: function createToolbar() {\n\t        var toolbar,\n\t            self = this,\n\t            fromDateLabel,\n\t            toDateLabel,\n\t            fromGroup,\n\t            toGroup,\n\t            fromFormattedDate,\n\t            toFormattedDate;\n\t\n\t        var fromDateEventConfig = {},\n\t            toDateEventConfig = {};\n\t\n\t        self.fromDate = {};\n\t        self.toDate = {};\n\t\n\t        fromFormattedDate = this.getDate(this.startDt);\n\t        toFormattedDate = this.getDate(this.endDt);\n\t        toolbar = new this.HorizontalToolbar({\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        });\n\t\n\t        toolbar.setConfig({\n\t          'fill': '#FFFFFF',\n\t          'borderThickness': 0\n\t        });\n\t\n\t        fromGroup = new this.toolbox.ComponentGroup({\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        });\n\t\n\t        toGroup = new this.toolbox.ComponentGroup({\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        });\n\t\n\t        fromGroup.setConfig({\n\t          'fill': '#FFFFFF',\n\t          'borderThickness': 0\n\t        });\n\t\n\t        toGroup.setConfig({\n\t          'fill': '#FFFFFF',\n\t          'borderThickness': 0\n\t        });\n\t\n\t        fromDateLabel = new this.toolbox.Label(this.config['fromText'], {\n\t          smartLabel: this.smartLabel,\n\t          paper: this.graphics.paper\n\t        }, {\n\t          text: {\n\t            style: {\n\t              'font-size': this.config.styles['font-size'],\n\t              'font-family': this.config.styles['font-family'],\n\t              'fill': this.config.styles['font-color']\n\t            }\n\t          },\n\t          container: {\n\t            'width': 40\n\t          }\n\t        });\n\t\n\t        toDateLabel = new this.toolbox.Label(this.config['toText'], {\n\t          smartLabel: this.smartLabel,\n\t          paper: this.graphics.paper\n\t        }, {\n\t          text: {\n\t            style: {\n\t              'font-size': this.config.styles['font-size'],\n\t              'font-family': this.config.styles['font-family'],\n\t              'fill': this.config.styles['font-color'],\n\t              'text-anchor': 'start'\n\t            }\n\t          },\n\t          container: {\n\t            'width': 40\n\t          }\n\t        });\n\t\n\t        self.fromDate = new this.toolbox.InputTextBoxSymbol({\n\t          width: this.config.styles['width'],\n\t          height: this.config.styles['height']\n\t        }, {\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        }, {\n\t          'strokeWidth': this.config.styles['input-border-thickness'],\n\t          'fill': this.config.styles['input-fill'],\n\t          'stroke': this.config.styles['input-border-color'],\n\t          'radius': this.config.styles['input-border-radius'],\n\t          'btnTextStyle': {\n\t            'fontFamily': this.config.styles['font-family'],\n\t            'fontSize': this.config.styles['font-size']\n\t          },\n\t          'shadow': {\n\t            'fill': this.config.styles['input-shadow-fill'],\n\t            'opacity': this.config.styles['input-shadow-opacity']\n\t          },\n\t          'label': fromFormattedDate,\n\t          'labelFill': this.config.styles['font-color']\n\t        });\n\t\n\t        self.fromDate.addCustomState('errored', {\n\t          config: {\n\t            hover: {\n\t              'fill': this.config.styles['input-error-fill'],\n\t              'stroke-width': this.config.styles['input-error-border-thickness'],\n\t              'stroke': this.config.styles['input-error-border-color']\n\t            },\n\t            normal: {\n\t              'fill': this.config.styles['input-error-fill'],\n\t              'stroke-width': this.config.styles['input-error-border-thickness'],\n\t              'stroke': this.config.styles['input-error-border-color']\n\t            },\n\t            pressed: {\n\t              'fill': this.config.styles['input-error-fill'],\n\t              'stroke-width': this.config.styles['input-error-border-thickness'],\n\t              'stroke': this.config.styles['input-error-border-color']\n\t            }\n\t          }\n\t        });\n\t\n\t        self.fromDate.setStateConfig({\n\t          pressed: {\n\t            config: {\n\t              pressed: {\n\t                'fill': this.config.styles['input-focus-fill'],\n\t                'stroke-width': this.config.styles['input-focus-border-thickness'],\n\t                'stroke': this.config.styles['input-focus-border-color']\n\t              },\n\t              normal: {\n\t                'fill': this.config.styles['input-focus-fill'],\n\t                'stroke-width': this.config.styles['input-focus-border-thickness'],\n\t                'stroke': this.config.styles['input-focus-border-color']\n\t              },\n\t              hover: {\n\t                'fill': this.config.styles['input-focus-fill'],\n\t                'stroke-width': this.config.styles['input-focus-border-thickness'],\n\t                'stroke': this.config.styles['input-focus-border-color']\n\t              }\n\t            }\n\t          },\n\t          enabled: {\n\t            config: {\n\t              pressed: {\n\t                'fill': this.config.styles['input-fill'],\n\t                'stroke-width': this.config.styles['input-border-thickness'],\n\t                'stroke': this.config.styles['input-border-color']\n\t              },\n\t              normal: {\n\t                'fill': this.config.styles['input-fill'],\n\t                'stroke-width': this.config.styles['input-border-thickness'],\n\t                'stroke': this.config.styles['input-border-color']\n\t              },\n\t              hover: {\n\t                'fill': this.config.styles['input-fill'],\n\t                'stroke-width': this.config.styles['input-border-thickness'],\n\t                'stroke': this.config.styles['input-border-color']\n\t              }\n\t            }\n\t          }\n\t        });\n\t\n\t        self.toDate = new this.toolbox.InputTextBoxSymbol({\n\t          width: this.config.styles['width'],\n\t          height: this.config.styles['height']\n\t        }, {\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        }, {\n\t          'strokeWidth': this.config.styles['input-border-thickness'],\n\t          'fill': this.config.styles['input-fill'],\n\t          'stroke': this.config.styles['input-border-color'],\n\t          'radius': this.config.styles['input-border-radius'],\n\t          'btnTextStyle': {\n\t            'fontFamily': this.config.styles['font-family'],\n\t            'fontSize': this.config.styles['font-size']\n\t          },\n\t          'shadow': {\n\t            'fill': this.config.styles['input-shadow-fill'],\n\t            'opacity': this.config.styles['input-shadow-opacity']\n\t          },\n\t          'label': toFormattedDate,\n\t          'labelFill': this.config.styles['font-color']\n\t        });\n\t\n\t        self.toDate.addCustomState('errored', {\n\t          config: {\n\t            hover: {\n\t              'fill': this.config.styles['input-error-fill'],\n\t              'stroke-width': this.config.styles['input-error-border-thickness'],\n\t              'stroke': this.config.styles['input-error-border-color']\n\t            },\n\t            normal: {\n\t              'fill': this.config.styles['input-error-fill'],\n\t              'stroke-width': this.config.styles['input-error-border-thickness'],\n\t              'stroke': this.config.styles['input-error-border-color']\n\t            },\n\t            pressed: {\n\t              'fill': this.config.styles['input-error-fill'],\n\t              'stroke-width': this.config.styles['input-error-border-thickness'],\n\t              'stroke': this.config.styles['input-error-border-color']\n\t            }\n\t          }\n\t        });\n\t\n\t        self.toDate.setStateConfig({\n\t          pressed: {\n\t            config: {\n\t              pressed: {\n\t                'fill': this.config.styles['input-focus-fill'],\n\t                'stroke-width': this.config.styles['input-focus-border-thickness'],\n\t                'stroke': this.config.styles['input-focus-border-color']\n\t              },\n\t              normal: {\n\t                'fill': this.config.styles['input-focus-fill'],\n\t                'stroke-width': this.config.styles['input-focus-border-thickness'],\n\t                'stroke': this.config.styles['input-focus-border-color']\n\t              },\n\t              hover: {\n\t                'fill': this.config.styles['input-focus-fill'],\n\t                'stroke-width': this.config.styles['input-focus-border-thickness'],\n\t                'stroke': this.config.styles['input-focus-border-color']\n\t              }\n\t            },\n\t            enabled: {\n\t              config: {\n\t                pressed: {\n\t                  'fill': this.config.styles['input-fill'],\n\t                  'stroke-width': this.config.styles['input-border-thickness'],\n\t                  'stroke': this.config.styles['input-border-color']\n\t                },\n\t                normal: {\n\t                  'fill': this.config.styles['input-fill'],\n\t                  'stroke-width': this.config.styles['input-border-thickness'],\n\t                  'stroke': this.config.styles['input-border-color']\n\t                },\n\t                hover: {\n\t                  'fill': this.config.styles['input-fill'],\n\t                  'stroke-width': this.config.styles['input-border-thickness'],\n\t                  'stroke': this.config.styles['input-border-color']\n\t                }\n\t              }\n\t            }\n\t          }\n\t        });\n\t\n\t        fromDateEventConfig = {\n\t          click: {\n\t            fn: function fn() {\n\t              self.fromDate.edit();\n\t              self.fromDate.updateVisual('pressed');\n\t            }\n\t          },\n\t          tooltext: self.config.fromTooltipText,\n\t          keypress: function keypress(e) {\n\t            var event = e || window.event,\n\t                charCode = event.which || event.keyCode;\n\t            if (charCode === 13) {\n\t              self.startDate = self.fromDate.getText();\n\t              if (self.fromDate.state !== 'errored') {\n\t                self.fromDate.blur();\n\t                self.fromDate.svgElems.node.tooltip(self.config.fromTooltipText);\n\t                self.fromDate.updateVisual('enabled');\n\t              } else {\n\t                self.fromDate.svgElems.node.tooltip(self.startTooltipErrorMsg);\n\t              }\n\t            }\n\t          },\n\t          textOnBlur: function textOnBlur() {\n\t            self.fromDate.blur();\n\t            self.startDate = self.fromDate.getText();\n\t            if (self.fromDate.state !== 'errored') {\n\t              self.fromDate.blur();\n\t              self.fromDate.svgElems.node.tooltip(self.config.fromTooltipText);\n\t              self.fromDate.updateVisual('enabled');\n\t            } else {\n\t              self.fromDate.svgElems.node.tooltip(self.startTooltipErrorMsg);\n\t            }\n\t          }\n\t        };\n\t\n\t        self.fromDate.attachEventHandlers(fromDateEventConfig);\n\t\n\t        toDateEventConfig = {\n\t          click: {\n\t            fn: function fn() {\n\t              self.toDate.edit();\n\t              self.toDate.updateVisual('pressed');\n\t            }\n\t          },\n\t          tooltext: self.config.toTooltipText,\n\t          keypress: function keypress(e) {\n\t            var event = e || window.event,\n\t                charCode = event.which || event.keyCode;\n\t            if (charCode === 13) {\n\t              self.endDate = self.toDate.getText();\n\t              if (self.toDate.state !== 'errored') {\n\t                self.toDate.blur();\n\t                self.toDate.svgElems.node.tooltip(self.config.toTooltipText);\n\t                self.toDate.updateVisual('enabled');\n\t              } else {\n\t                self.toDate.svgElems.node.tooltip(self.endTooltipErrorMsg);\n\t              }\n\t            }\n\t          },\n\t          textOnBlur: function textOnBlur() {\n\t            self.toDate.blur();\n\t            self.endDate = self.toDate.getText();\n\t            if (self.toDate.state !== 'errored') {\n\t              self.toDate.blur();\n\t              self.toDate.svgElems.node.tooltip(self.config.toTooltipText);\n\t              self.toDate.updateVisual('enabled');\n\t            } else {\n\t              self.toDate.svgElems.node.tooltip(self.endTooltipErrorMsg);\n\t            }\n\t          }\n\t        };\n\t\n\t        self.toDate.attachEventHandlers(toDateEventConfig);\n\t\n\t        fromGroup.addSymbol(fromDateLabel);\n\t        fromGroup.addSymbol(self.fromDate);\n\t        toGroup.addSymbol(toDateLabel);\n\t        toGroup.addSymbol(self.toDate);\n\t        toolbar.addComponent(fromGroup);\n\t        toolbar.addComponent(toGroup);\n\t        return toolbar;\n\t      }\n\t    }, {\n\t      key: 'getLogicalSpace',\n\t      value: function getLogicalSpace(availableWidth, availableHeight) {\n\t        var logicalSpace,\n\t            width = 0,\n\t            height = 0,\n\t            i,\n\t            ln;\n\t\n\t        availableWidth /= 2;\n\t\n\t        for (i = 0, ln = this.toolbars.length; i < ln; i++) {\n\t          logicalSpace = this.toolbars[i].getLogicalSpace(availableWidth, availableHeight);\n\t          width = Math.max(logicalSpace.width, width);\n\t          height += logicalSpace.height;\n\t          this.toolbars[i].width = logicalSpace.width;\n\t          this.toolbars[i].height = logicalSpace.height;\n\t        }\n\t        height += this.padding;\n\t        return {\n\t          width: width,\n\t          height: height\n\t        };\n\t      }\n\t    }, {\n\t      key: 'placeInCanvas',\n\t      value: function placeInCanvas() {\n\t        var _self = this;\n\t        _self.padding = 5;\n\t        _self.spaceManagerInstance.add([{\n\t          name: function name() {\n\t            return 'DateRangeChooserToolbox';\n\t          },\n\t          ref: function ref(obj) {\n\t            return obj['0'];\n\t          },\n\t          self: function self() {\n\t            return _self;\n\t          },\n\t          priority: function priority() {\n\t            return 2;\n\t          },\n\t          layout: function layout(obj) {\n\t            return obj[_self.config.layout];\n\t          },\n\t          orientation: [{\n\t            type: function type(obj) {\n\t              return obj[_self.config.orientation];\n\t            },\n\t            position: [{\n\t              type: function type(obj) {\n\t                return obj[_self.config.position];\n\t              },\n\t              alignment: [{\n\t                type: function type(obj) {\n\t                  return obj[_self.config.alignment];\n\t                },\n\t                dimensions: [function () {\n\t                  var parent = this.getParentComponentGroup();\n\t                  return _self.getLogicalSpace(parent.getWidth(), parent.getHeight());\n\t                }]\n\t              }]\n\t            }]\n\t          }]\n\t        }]);\n\t      }\n\t    }, {\n\t      key: 'setDrawingConfiguration',\n\t      value: function setDrawingConfiguration(x, y, width, height, group) {\n\t        var mes = this.measurement;\n\t        mes.x = x;\n\t        mes.y = y;\n\t        mes.width = width;\n\t        mes.height = height;\n\t\n\t        this.parentGroup = group;\n\t\n\t        return this;\n\t      }\n\t    }, {\n\t      key: 'draw',\n\t      value: function draw(x, y, width, height, group) {\n\t        var self = this,\n\t            measurement = self.measurement,\n\t            toolbars = self.toolbars,\n\t            ln = void 0,\n\t            i = void 0,\n\t            toolbar = void 0,\n\t            model = self.globalReactiveModel;\n\t\n\t        x = x === undefined ? measurement.x : x;\n\t        y = y === undefined ? measurement.y : y;\n\t        width = width === undefined ? measurement.width : width;\n\t        height = height === undefined ? measurement.height : height;\n\t        group = group === undefined ? self.parentGroup : group;\n\t        if (width && height) {\n\t          self.isDrawn = true;\n\t          for (i = 0, ln = toolbars.length; i < ln; i++) {\n\t            toolbar = toolbars[i];\n\t            toolbar.draw(x, y, group);\n\t          }\n\t          model.onPropsChange(['x-axis-visible-range-start', 'x-axis-visible-range-end'], function (start, end) {\n\t            // self.fromDate.blur(new Date(start[1]).toLocaleDateString());\n\t            // self.toDate.blur(new Date(end[1]).toLocaleDateString());\n\t            setTimeout(function () {\n\t              self.startDt = start[1];\n\t              self.fromDate.blur(self.getDate(start[1]));\n\t              self.fromDate.svgElems.node.tooltip(self.config.fromTooltipText);\n\t              self.fromDate.updateVisual('enabled');\n\t              self.endDt = end[1];\n\t              self.toDate.blur(self.getDate(end[1]));\n\t              self.toDate.svgElems.node.tooltip(self.config.toTooltipText);\n\t              self.toDate.updateVisual('enabled');\n\t            }, 100);\n\t          });\n\t        }\n\t        self.startDataset = self.globalReactiveModel.model['x-axis-absolute-range-start'];\n\t        self.endDataset = self.globalReactiveModel.model['x-axis-absolute-range-end'];\n\t        self.maxXAxisTicks = self.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n\t        self.maxXAxisTicks = self.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n\t        self.minDatestampDiff = self.globalReactiveModel.model['minimum-consecutive-datestamp-diff'];\n\t        self.minActiveInterval = self.maxXAxisTicks * self.minDatestampDiff;\n\t      }\n\t    }, {\n\t      key: 'startDate',\n\t      get: function get() {\n\t        return this.startDt;\n\t      },\n\t      set: function set(startDt) {\n\t        var startTimestamp = this.getTimestamp(startDt),\n\t            newDate = this.getDate(this.startDt),\n\t            absoluteStart = this.globalReactiveModel.model['x-axis-absolute-range-start'],\n\t            minDiff = this.minActiveInterval,\n\t            actualDiff = this.endDt - startTimestamp;\n\t        if (newDate !== startDt) {\n\t          if (this.isBeforeOrEqualTo(startTimestamp, this.endDt) && this.isSameOrAfter(startTimestamp, absoluteStart) && this.diffIsGreaterThan(actualDiff, minDiff)) {\n\t            this.startDt = startTimestamp;\n\t            this.globalReactiveModel.model['x-axis-visible-range-start'] = this.startDt;\n\t          } else {\n\t            this.fromDate.updateVisual('errored');\n\t          }\n\t        } else {\n\t          if (this.fromDate.state === 'errored') {\n\t            this.fromDate.updateVisual('enabled');\n\t          }\n\t        }\n\t      }\n\t    }, {\n\t      key: 'endDate',\n\t      get: function get() {\n\t        return this.endDt;\n\t      },\n\t      set: function set(endDt) {\n\t        var endTimestamp = this.getTimestamp(endDt),\n\t            newDate = this.getDate(this.endDt),\n\t            absoluteEnd = this.globalReactiveModel.model['x-axis-absolute-range-end'],\n\t            minDiff = this.minActiveInterval,\n\t            actualDiff = endTimestamp - this.startDt;\n\t        if (newDate !== endDt) {\n\t          if (this.isGreaterThanOrEqualTo(endTimestamp, this.startDt) && this.isSameOrBefore(endTimestamp, absoluteEnd) && this.diffIsGreaterThan(actualDiff, minDiff)) {\n\t            this.endDt = endTimestamp;\n\t            this.globalReactiveModel.model['x-axis-visible-range-end'] = this.endDt;\n\t          } else {\n\t            this.toDate.updateVisual('errored');\n\t          }\n\t        } else {\n\t          if (this.toDate.state === 'errored') {\n\t            this.toDate.updateVisual('enabled');\n\t          }\n\t        }\n\t      }\n\t    }]);\n\t\n\t    return DateRange;\n\t  }();\n\t\n\t  return DateRange;\n\t};\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// date-range-chooser-es5.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 43ffd89e1fc940abcffc","'use strict';\nconst DateRange = require('./fcts-ext-daterange');\n\nwindow.dr = new DateRange();\n\n;(function (env, factory) {\n  if (typeof module === 'object' && module.exports) {\n    module.exports = env.document\n       ? factory(env) : function (win) {\n         if (!win.document) {\n           throw new Error('Window with document not present');\n         }\n         return factory(win, true);\n       };\n  } else {\n    env.DateRangeChooser = factory(env, true);\n  }\n})(typeof window !== 'undefined' ? window : this, function (_window, windowExists) {\n  var FC = _window.FusionCharts;\n  FC.register('extension', ['private', 'date-range-chooser', function () {\n    var DateTimeFormatter = this.hcLib.DateTimeFormatter;\n    FC.registerComponent('extensions', 'date-range-chooser', DateRange({FusionCharts: FC,\n      DateTimeFormatter: DateTimeFormatter}));\n  }]);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 1\n// module chunks = 0","'use strict';\nmodule.exports = function (dep) {\n  /**\n   * Class representing the DateRange.\n   */\n  class DateRange {\n    constructor () {\n      /**\n       * @private\n       */\n      this.startDt = 0;\n      this.endDt = 0;\n      this.startDataset = 0;\n      this.endDataset = 0;\n      this.toolbox = dep.FusionCharts.getComponent('api', 'toolbox');\n      this.DateTimeFormatter = dep.DateTimeFormatter;\n      this.HorizontalToolbar = this.toolbox.HorizontalToolbar;\n      this.ComponentGroup = this.toolbox.ComponentGroup;\n      this.SymbolStore = this.toolbox.SymbolStore;\n      this.isDrawn = false;\n      this.startTooltipErrorMsg = '';\n      this.endTooltipErrorMsg = '';\n    }\n\n    /**\n     * An object representing the start and end dates.\n     * @type {DateRange.range}\n     */\n    get startDate () {\n      return this.startDt;\n    }\n\n    set startDate (startDt) {\n      let startTimestamp = this.getTimestamp(startDt),\n        newDate = this.getDate(this.startDt),\n        absoluteStart = this.globalReactiveModel.model['x-axis-absolute-range-start'],\n        minDiff = this.minActiveInterval,\n        actualDiff = this.endDt - startTimestamp;\n      if (newDate !== startDt) {\n        if (this.isBeforeOrEqualTo(startTimestamp, this.endDt) &&\n          this.isSameOrAfter(startTimestamp, absoluteStart) &&\n          this.diffIsGreaterThan(actualDiff, minDiff)) {\n          this.startDt = startTimestamp;\n          this.globalReactiveModel.model['x-axis-visible-range-start'] = this.startDt;\n        } else {\n          this.fromDate.updateVisual('errored');\n        }\n      } else {\n        if (this.fromDate.state === 'errored') {\n          this.fromDate.updateVisual('enabled');\n        }\n      }\n    }\n\n    // Time out of bounds\n    // Invalid date format\n    // Exceeding zoom limits\n\n    isBeforeOrEqualTo (startTimestamp, endTimestamp) {\n      if (startTimestamp <= endTimestamp) {\n        return true;\n      } else {\n        this.startTooltipErrorMsg =\n        '<span style=\"color: ' +\n        this.config.styles['input-error-tooltip-font-color'] +\n        '\">Date must be less than end date!</span>';\n        return false;\n      }\n    }\n\n    isSameOrAfter (startTimestamp, absoluteStart) {\n      if (startTimestamp >= absoluteStart) {\n        return true;\n      } else {\n        this.startTooltipErrorMsg =\n        '<span style=\"color: ' +\n        this.config.styles['input-error-tooltip-font-color'] +\n        '\">Date out of bounds!</span>';\n        return false;\n      }\n    }\n\n    get endDate () {\n      return this.endDt;\n    }\n\n    set endDate (endDt) {\n      let endTimestamp = this.getTimestamp(endDt),\n        newDate = this.getDate(this.endDt),\n        absoluteEnd = this.globalReactiveModel.model['x-axis-absolute-range-end'],\n        minDiff = this.minActiveInterval,\n        actualDiff = endTimestamp - this.startDt;\n      if (newDate !== endDt) {\n        if (this.isGreaterThanOrEqualTo(endTimestamp, this.startDt) &&\n          this.isSameOrBefore(endTimestamp, absoluteEnd) &&\n          this.diffIsGreaterThan(actualDiff, minDiff)) {\n          this.endDt = endTimestamp;\n          this.globalReactiveModel.model['x-axis-visible-range-end'] = this.endDt;\n        } else {\n          this.toDate.updateVisual('errored');\n        }\n      } else {\n        if (this.toDate.state === 'errored') {\n          this.toDate.updateVisual('enabled');\n        }\n      }\n    }\n\n    isGreaterThanOrEqualTo (endTimestamp, startTimestamp) {\n      if (endTimestamp >= startTimestamp) {\n        return true;\n      } else {\n        this.endTooltipErrorMsg =\n        '<span style=\"color: ' +\n        this.config.styles['input-error-tooltip-font-color'] +\n        '\">Date must be greater than start date!</span>';\n        return false;\n      }\n    }\n\n    isSameOrBefore (endTimestamp, absoluteEnd) {\n      if (endTimestamp <= absoluteEnd) {\n        return true;\n      } else {\n        this.endTooltipErrorMsg =\n        '<span style=\"color: ' +\n        this.config.styles['input-error-tooltip-font-color'] +\n        '\">Date out of bounds!</span>';\n        return false;\n      }\n    }\n\n    diffIsGreaterThan (actualDiff, minDiff) {\n      if (actualDiff > minDiff) {\n        return true;\n      } else {\n        this.startTooltipErrorMsg = this.endTooltipErrorMsg =\n        '<span style=\"color: ' +\n        this.config.styles['input-error-tooltip-font-color'] +\n        '\">Zoom limit exceeded!</span>';\n        return false;\n      }\n    }\n\n    getTimestamp (dateStr) {\n      let dateFormat = this.config.dateFormat,\n        dateFormatter = new dep.DateTimeFormatter(dateFormat);\n      return +dateFormatter.getNativeDate(dateStr);\n    }\n\n    getDate (timestamp) {\n      var dateFormat = this.config.dateFormat;\n      return this.DateTimeFormatter.formatAs(timestamp, dateFormat);\n    }\n\n    /**\n     * Sets the configurable options of the extension (e.g. cosmetics)\n     * @param {Object} configObj The configuration object containing various extension options\n     */\n    setConfig (configObj) {}\n\n    /**\n     * Gets the configurable options of the extension (e.g. cosmetics)\n     * @return {object} configObj The configuration object containing various extension options\n     */\n    getConfig () {\n      return {\n        calendarVisible: 'false'\n      };\n    }\n\n    createConfig (extData) {\n      let config = {};\n      config.disabled = extData.disabled || 'false';\n      config.layout = extData.layout || 'inline';\n      config.orientation = extData.orientation || 'horizontal';\n      config.position = extData.position || 'top';\n      config.alignment = extData.alignment || 'right';\n      config.dateFormat = extData.dateFormat || '%d-%m-%Y';\n      config.fromText = extData.fromText || 'From:';\n      config.fromTooltipText = extData.fromTooltipText || 'From Date';\n      config.toText = extData.toText || 'To:';\n      config.toTooltipText = extData.toTooltipText || 'To Date';\n      config.styles = extData.styles || {\n        'width': 120,\n        'height': 22,\n\n        'font-family': '\"Lucida Grande\", sans-serif',\n        'font-size': 13,\n        'font-color': '#4B4B4B',\n\n        'input-fill': '#FFFFFF',\n        'input-border-thickness': 1,\n        'input-border-color': '#CED5D4',\n        'input-border-radius': 1,\n        'input-shadow-fill': '#000000',\n        'input-shadow-opacity': 0.35,\n\n        'input-focus-fill': '#FFFFFF',\n        'input-focus-border-thickness': 1,\n        'input-focus-border-color': '#1E1F1F',\n\n        'input-error-fill': '#FFEFEF',\n        'input-error-border-thickness': 1,\n        'input-error-border-color': '#D25353',\n        'input-error-tooltip-font-color': '#FF0000'\n      };\n      return config;\n    }\n\n    /**\n     * Fusioncharts life cycle method for extension\n     */\n    init (require) {\n      var instance = this;\n      require([\n        'xAxis',\n        'graphics',\n        'chart',\n        'dataset',\n        'globalReactiveModel',\n        'spaceManagerInstance',\n        'extData',\n        'smartLabel',\n        'chartInstance',\n        function (\n          xAxis,\n          graphics,\n          chart,\n          dataset,\n          globalReactiveModel,\n          spaceManagerInstance,\n          extData,\n          smartLabel,\n          chartInstance) {\n          instance.xAxis = xAxis;\n          instance.graphics = graphics;\n          instance.chart = chart;\n          instance.dataset = dataset;\n          instance.globalReactiveModel = globalReactiveModel;\n          instance.spaceManagerInstance = spaceManagerInstance;\n          instance.config = instance.createConfig(extData);\n          instance.smartLabel = smartLabel;\n          instance.chartInstance = chartInstance;\n        }\n      ]);\n      instance.startDt = instance.globalReactiveModel.model['x-axis-visible-range-start'];\n      instance.endDt = instance.globalReactiveModel.model['x-axis-visible-range-end'];\n      instance.toolbars = [];\n      instance.measurement = {};\n      instance.toolbars.push(instance.createToolbar());\n      return instance;\n    };\n\n    createToolbar () {\n      var toolbar,\n        self = this,\n        fromDateLabel,\n        toDateLabel,\n        fromGroup,\n        toGroup,\n        fromFormattedDate,\n        toFormattedDate;\n\n      let fromDateEventConfig = {},\n        toDateEventConfig = {};\n\n      self.fromDate = {};\n      self.toDate = {};\n\n      fromFormattedDate = this.getDate(this.startDt);\n      toFormattedDate = this.getDate(this.endDt);\n      toolbar = new this.HorizontalToolbar({\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      });\n\n      toolbar.setConfig({\n        'fill': '#FFFFFF',\n        'borderThickness': 0\n      });\n\n      fromGroup = new this.toolbox.ComponentGroup({\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      });\n\n      toGroup = new this.toolbox.ComponentGroup({\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      });\n\n      fromGroup.setConfig({\n        'fill': '#FFFFFF',\n        'borderThickness': 0\n      });\n\n      toGroup.setConfig({\n        'fill': '#FFFFFF',\n        'borderThickness': 0\n      });\n\n      fromDateLabel = new this.toolbox.Label(\n        this.config['fromText'], {\n          smartLabel: this.smartLabel,\n          paper: this.graphics.paper\n        }, {\n          text: {\n            style: {\n              'font-size': this.config.styles['font-size'],\n              'font-family': this.config.styles['font-family'],\n              'fill': this.config.styles['font-color']\n            }\n          },\n          container: {\n            'width': 40\n          }\n        }\n      );\n\n      toDateLabel = new this.toolbox.Label(\n        this.config['toText'], {\n          smartLabel: this.smartLabel,\n          paper: this.graphics.paper\n        }, {\n          text: {\n            style: {\n              'font-size': this.config.styles['font-size'],\n              'font-family': this.config.styles['font-family'],\n              'fill': this.config.styles['font-color'],\n              'text-anchor': 'start'\n            }\n          },\n          container: {\n            'width': 40\n          }\n        }\n      );\n\n      self.fromDate = new this.toolbox.InputTextBoxSymbol({\n        width: this.config.styles['width'],\n        height: this.config.styles['height']\n      }, {\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      }, {\n        'strokeWidth': this.config.styles['input-border-thickness'],\n        'fill': this.config.styles['input-fill'],\n        'stroke': this.config.styles['input-border-color'],\n        'radius': this.config.styles['input-border-radius'],\n        'btnTextStyle': {\n          'fontFamily': this.config.styles['font-family'],\n          'fontSize': this.config.styles['font-size']\n        },\n        'shadow': {\n          'fill': this.config.styles['input-shadow-fill'],\n          'opacity': this.config.styles['input-shadow-opacity']\n        },\n        'label': fromFormattedDate,\n        'labelFill': this.config.styles['font-color']\n      });\n\n      self.fromDate.addCustomState('errored', {\n        config: {\n          hover: {\n            'fill': this.config.styles['input-error-fill'],\n            'stroke-width': this.config.styles['input-error-border-thickness'],\n            'stroke': this.config.styles['input-error-border-color']\n          },\n          normal: {\n            'fill': this.config.styles['input-error-fill'],\n            'stroke-width': this.config.styles['input-error-border-thickness'],\n            'stroke': this.config.styles['input-error-border-color']\n          },\n          pressed: {\n            'fill': this.config.styles['input-error-fill'],\n            'stroke-width': this.config.styles['input-error-border-thickness'],\n            'stroke': this.config.styles['input-error-border-color']\n          }\n        }\n      });\n\n      self.fromDate.setStateConfig({\n        pressed: {\n          config: {\n            pressed: {\n              'fill': this.config.styles['input-focus-fill'],\n              'stroke-width': this.config.styles['input-focus-border-thickness'],\n              'stroke': this.config.styles['input-focus-border-color']\n            },\n            normal: {\n              'fill': this.config.styles['input-focus-fill'],\n              'stroke-width': this.config.styles['input-focus-border-thickness'],\n              'stroke': this.config.styles['input-focus-border-color']\n            },\n            hover: {\n              'fill': this.config.styles['input-focus-fill'],\n              'stroke-width': this.config.styles['input-focus-border-thickness'],\n              'stroke': this.config.styles['input-focus-border-color']\n            }\n          }\n        },\n        enabled: {\n          config: {\n            pressed: {\n              'fill': this.config.styles['input-fill'],\n              'stroke-width': this.config.styles['input-border-thickness'],\n              'stroke': this.config.styles['input-border-color']\n            },\n            normal: {\n              'fill': this.config.styles['input-fill'],\n              'stroke-width': this.config.styles['input-border-thickness'],\n              'stroke': this.config.styles['input-border-color']\n            },\n            hover: {\n              'fill': this.config.styles['input-fill'],\n              'stroke-width': this.config.styles['input-border-thickness'],\n              'stroke': this.config.styles['input-border-color']\n            }\n          }\n        }\n      });\n\n      self.toDate = new this.toolbox.InputTextBoxSymbol({\n        width: this.config.styles['width'],\n        height: this.config.styles['height']\n      }, {\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      }, {\n        'strokeWidth': this.config.styles['input-border-thickness'],\n        'fill': this.config.styles['input-fill'],\n        'stroke': this.config.styles['input-border-color'],\n        'radius': this.config.styles['input-border-radius'],\n        'btnTextStyle': {\n          'fontFamily': this.config.styles['font-family'],\n          'fontSize': this.config.styles['font-size']\n        },\n        'shadow': {\n          'fill': this.config.styles['input-shadow-fill'],\n          'opacity': this.config.styles['input-shadow-opacity']\n        },\n        'label': toFormattedDate,\n        'labelFill': this.config.styles['font-color']\n      });\n\n      self.toDate.addCustomState('errored', {\n        config: {\n          hover: {\n            'fill': this.config.styles['input-error-fill'],\n            'stroke-width': this.config.styles['input-error-border-thickness'],\n            'stroke': this.config.styles['input-error-border-color']\n          },\n          normal: {\n            'fill': this.config.styles['input-error-fill'],\n            'stroke-width': this.config.styles['input-error-border-thickness'],\n            'stroke': this.config.styles['input-error-border-color']\n          },\n          pressed: {\n            'fill': this.config.styles['input-error-fill'],\n            'stroke-width': this.config.styles['input-error-border-thickness'],\n            'stroke': this.config.styles['input-error-border-color']\n          }\n        }\n      });\n\n      self.toDate.setStateConfig({\n        pressed: {\n          config: {\n            pressed: {\n              'fill': this.config.styles['input-focus-fill'],\n              'stroke-width': this.config.styles['input-focus-border-thickness'],\n              'stroke': this.config.styles['input-focus-border-color']\n            },\n            normal: {\n              'fill': this.config.styles['input-focus-fill'],\n              'stroke-width': this.config.styles['input-focus-border-thickness'],\n              'stroke': this.config.styles['input-focus-border-color']\n            },\n            hover: {\n              'fill': this.config.styles['input-focus-fill'],\n              'stroke-width': this.config.styles['input-focus-border-thickness'],\n              'stroke': this.config.styles['input-focus-border-color']\n            }\n          },\n          enabled: {\n            config: {\n              pressed: {\n                'fill': this.config.styles['input-fill'],\n                'stroke-width': this.config.styles['input-border-thickness'],\n                'stroke': this.config.styles['input-border-color']\n              },\n              normal: {\n                'fill': this.config.styles['input-fill'],\n                'stroke-width': this.config.styles['input-border-thickness'],\n                'stroke': this.config.styles['input-border-color']\n              },\n              hover: {\n                'fill': this.config.styles['input-fill'],\n                'stroke-width': this.config.styles['input-border-thickness'],\n                'stroke': this.config.styles['input-border-color']\n              }\n            }\n          }\n        }\n      });\n\n      fromDateEventConfig = {\n        click: {\n          fn: () => {\n            self.fromDate.edit();\n            self.fromDate.updateVisual('pressed');\n          }\n        },\n        tooltext: self.config.fromTooltipText,\n        keypress: (e) => {\n          let event = e || window.event,\n            charCode = event.which || event.keyCode;\n          if (charCode === 13) {\n            self.startDate = self.fromDate.getText();\n            if (self.fromDate.state !== 'errored') {\n              self.fromDate.blur();\n              self.fromDate.svgElems.node.tooltip(self.config.fromTooltipText);\n              self.fromDate.updateVisual('enabled');\n            } else {\n              self.fromDate.svgElems.node.tooltip(self.startTooltipErrorMsg);\n            }\n          }\n        },\n        textOnBlur: function () {\n          self.fromDate.blur();\n          self.startDate = self.fromDate.getText();\n          if (self.fromDate.state !== 'errored') {\n            self.fromDate.blur();\n            self.fromDate.svgElems.node.tooltip(self.config.fromTooltipText);\n            self.fromDate.updateVisual('enabled');\n          } else {\n            self.fromDate.svgElems.node.tooltip(self.startTooltipErrorMsg);\n          }\n        }\n      };\n\n      self.fromDate.attachEventHandlers(fromDateEventConfig);\n\n      toDateEventConfig = {\n        click: {\n          fn: () => {\n            self.toDate.edit();\n            self.toDate.updateVisual('pressed');\n          }\n        },\n        tooltext: self.config.toTooltipText,\n        keypress: (e) => {\n          let event = e || window.event,\n            charCode = event.which || event.keyCode;\n          if (charCode === 13) {\n            self.endDate = self.toDate.getText();\n            if (self.toDate.state !== 'errored') {\n              self.toDate.blur();\n              self.toDate.svgElems.node.tooltip(self.config.toTooltipText);\n              self.toDate.updateVisual('enabled');\n            } else {\n              self.toDate.svgElems.node.tooltip(self.endTooltipErrorMsg);\n            }\n          }\n        },\n        textOnBlur: function () {\n          self.toDate.blur();\n          self.endDate = self.toDate.getText();\n          if (self.toDate.state !== 'errored') {\n            self.toDate.blur();\n            self.toDate.svgElems.node.tooltip(self.config.toTooltipText);\n            self.toDate.updateVisual('enabled');\n          } else {\n            self.toDate.svgElems.node.tooltip(self.endTooltipErrorMsg);\n          }\n        }\n      };\n\n      self.toDate.attachEventHandlers(toDateEventConfig);\n\n      fromGroup.addSymbol(fromDateLabel);\n      fromGroup.addSymbol(self.fromDate);\n      toGroup.addSymbol(toDateLabel);\n      toGroup.addSymbol(self.toDate);\n      toolbar.addComponent(fromGroup);\n      toolbar.addComponent(toGroup);\n      return toolbar;\n    };\n\n    getLogicalSpace (availableWidth, availableHeight) {\n      var logicalSpace,\n        width = 0,\n        height = 0,\n        i,\n        ln;\n\n      availableWidth /= 2;\n\n      for (i = 0, ln = this.toolbars.length; i < ln; i++) {\n        logicalSpace = this.toolbars[i].getLogicalSpace(availableWidth, availableHeight);\n        width = Math.max(logicalSpace.width, width);\n        height += logicalSpace.height;\n        this.toolbars[i].width = logicalSpace.width;\n        this.toolbars[i].height = logicalSpace.height;\n      }\n      height += this.padding;\n      return {\n        width: width,\n        height: height\n      };\n    };\n\n    placeInCanvas () {\n      var self = this;\n      self.padding = 5;\n      self.spaceManagerInstance.add([{\n        name: function () {\n          return 'DateRangeChooserToolbox';\n        },\n        ref: function (obj) {\n          return obj['0'];\n        },\n        self: function () {\n          return self;\n        },\n        priority: function () {\n          return 2;\n        },\n        layout: function (obj) {\n          return obj[self.config.layout];\n        },\n        orientation: [{\n          type: function (obj) {\n            return obj[self.config.orientation];\n          },\n          position: [{\n            type: function (obj) {\n              return obj[self.config.position];\n            },\n            alignment: [{\n              type: function (obj) {\n                return obj[self.config.alignment];\n              },\n              dimensions: [function () {\n                var parent = this.getParentComponentGroup();\n                return self.getLogicalSpace(parent.getWidth(), parent.getHeight());\n              }]\n            }]\n          }]\n        }]\n      }]);\n    };\n\n    setDrawingConfiguration (x, y, width, height, group) {\n      var mes = this.measurement;\n      mes.x = x;\n      mes.y = y;\n      mes.width = width;\n      mes.height = height;\n\n      this.parentGroup = group;\n\n      return this;\n    };\n\n    draw (x, y, width, height, group) {\n      let self = this,\n        measurement = self.measurement,\n        toolbars = self.toolbars,\n        ln,\n        i,\n        toolbar,\n        model = self.globalReactiveModel;\n\n      x = x === undefined ? measurement.x : x;\n      y = y === undefined ? measurement.y : y;\n      width = width === undefined ? measurement.width : width;\n      height = height === undefined ? measurement.height : height;\n      group = group === undefined ? self.parentGroup : group;\n      if (width && height) {\n        self.isDrawn = true;\n        for (i = 0, ln = toolbars.length; i < ln; i++) {\n          toolbar = toolbars[i];\n          toolbar.draw(x, y, group);\n        }\n        model.onPropsChange(['x-axis-visible-range-start', 'x-axis-visible-range-end'],\n          (start, end) => {\n            // self.fromDate.blur(new Date(start[1]).toLocaleDateString());\n            // self.toDate.blur(new Date(end[1]).toLocaleDateString());\n            setTimeout(() => {\n              self.startDt = start[1];\n              self.fromDate.blur(self.getDate(start[1]));\n              self.fromDate.svgElems.node.tooltip(self.config.fromTooltipText);\n              self.fromDate.updateVisual('enabled');\n              self.endDt = end[1];\n              self.toDate.blur(self.getDate(end[1]));\n              self.toDate.svgElems.node.tooltip(self.config.toTooltipText);\n              self.toDate.updateVisual('enabled');\n            }, 100);\n          }\n        );\n      }\n      self.startDataset = self.globalReactiveModel.model['x-axis-absolute-range-start'];\n      self.endDataset = self.globalReactiveModel.model['x-axis-absolute-range-end'];\n      self.maxXAxisTicks = self.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n      self.maxXAxisTicks = self.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n      self.minDatestampDiff = self.globalReactiveModel.model['minimum-consecutive-datestamp-diff'];\n      self.minActiveInterval = self.maxXAxisTicks * self.minDatestampDiff;\n    };\n  }\n  return DateRange;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fcts-ext-daterange.js"],"sourceRoot":""}