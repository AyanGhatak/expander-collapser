{"version":3,"sources":["webpack:///date-range-chooser-es5.min.js","webpack:///webpack/bootstrap 454bd333e327c7f676a8","webpack:///./src/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/fcts-ext-daterange.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_typeof","Symbol","iterator","obj","constructor","prototype","DateRange","window","dr","env","factory","document","win","Error","DateRangeChooser","undefined","_window","windowExists","FC","FusionCharts","register","DateTimeFormatter","this","hcLib","registerComponent","webpackPolyfill","deprecate","paths","children","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","dep","startDt","endDt","startDataset","endDataset","toolbox","getComponent","HorizontalToolbar","ComponentGroup","SymbolStore","isDrawn","value","dateStr","dateFormat","extData","dateFormatter","getNativeDate","timestamp","date","Date","getDate","getMonth","getFullYear","configObj","calendarVisible","require","xAxis","graphics","chart","dataset","globalReactiveModel","spaceManagerInstance","smartLabel","chartInstance","model","toolbars","measurement","push","createToolbar","toolbar","fromDateLabel","toDateLabel","group","fromFormattedDate","toFormattedDate","self","fromDate","toDate","paper","chartContainer","container","setConfig","fill","borderThickness","Label","text","style","font-size","font-family","InputTextBoxSymbol","width","height","strokeWidth","stroke","symbolStrokeWidth","radius","margin","right","btnTextStyle","fontSize","label","labelFill","setStateConfig","pressed","config","stroke-width","normal","hover","attachEventHandlers","click","fn","edit","updateVisual","textOnBlur","blur","startDate","getText","endDate","x","y","rad","w","h","padX","padY","x1","x2","y1","y2","addSymbol","addComponent","availableWidth","availableHeight","logicalSpace","ln","getLogicalSpace","Math","max","padding","add","name","ref","priority","layout","orientation","type","position","alignment","dimensions","parent","getParentComponentGroup","getWidth","getHeight","mes","parentGroup","draw","onPropsChange","start","end","maxXAxisTicks","minDatestampDiff","minActiveInterval","get","set","startTimestamp","getTimestamp","absoluteStart","minDiff","actualDiff","console","error","endTimestamp","absoluteEnd"],"mappings":"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","file":"date-range-chooser-es5.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar DateRange = __webpack_require__(2);\n\t\n\twindow.dr = new DateRange();\n\t\n\t;(function (env, factory) {\n\t  if (( false ? 'undefined' : _typeof(module)) === 'object' && module.exports) {\n\t    module.exports = env.document ? factory(env) : function (win) {\n\t      if (!win.document) {\n\t        throw new Error('Window with document not present');\n\t      }\n\t      return factory(win, true);\n\t    };\n\t  } else {\n\t    env.DateRangeChooser = factory(env, true);\n\t  }\n\t})(typeof window !== 'undefined' ? window : undefined, function (_window, windowExists) {\n\t  var FC = _window.FusionCharts;\n\t  FC.register('extension', ['private', 'date-range-chooser', function () {\n\t    var DateTimeFormatter = this.hcLib.DateTimeFormatter;\n\t    FC.registerComponent('extensions', 'date-range-chooser', DateRange({ FusionCharts: FC,\n\t      DateTimeFormatter: DateTimeFormatter }));\n\t  }]);\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\n\t\tif(!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function() {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tmodule.exports = function (dep) {\n\t  /**\n\t   * Class representing the DateRange.\n\t   */\n\t  var DateRange = function () {\n\t    function DateRange() {\n\t      _classCallCheck(this, DateRange);\n\t\n\t      /**\n\t       * @private\n\t       */\n\t      this.startDt = 0;\n\t      this.endDt = 0;\n\t      this.startDataset = 0;\n\t      this.endDataset = 0;\n\t      this.toolbox = dep.FusionCharts.getComponent('api', 'toolbox');\n\t      this.HorizontalToolbar = this.toolbox.HorizontalToolbar;\n\t      this.ComponentGroup = this.toolbox.ComponentGroup;\n\t      this.SymbolStore = this.toolbox.SymbolStore;\n\t      this.isDrawn = false;\n\t    }\n\t\n\t    /**\n\t     * An object representing the start and end dates.\n\t     * @type {DateRange.range}\n\t     */\n\t\n\t\n\t    _createClass(DateRange, [{\n\t      key: 'getTimestamp',\n\t      value: function getTimestamp(dateStr) {\n\t        var dateFormat = this.extData.dateFormat || '%d-%m-%Y',\n\t            dateFormatter = new dep.DateTimeFormatter(dateFormat);\n\t        return +dateFormatter.getNativeDate(dateStr);\n\t      }\n\t    }, {\n\t      key: 'getDate',\n\t      value: function getDate(timestamp) {\n\t        var date = new Date(timestamp);\n\t        return date.getDate() + '-' + (date.getMonth() + 1) + '-' + date.getFullYear();\n\t      }\n\t\n\t      /**\n\t       * Sets the configurable options of the extension (e.g. cosmetics)\n\t       * @param {Object} configObj The configuration object containing various extension options\n\t       */\n\t\n\t    }, {\n\t      key: 'setConfig',\n\t      value: function setConfig(configObj) {}\n\t\n\t      /**\n\t       * Gets the configurable options of the extension (e.g. cosmetics)\n\t       * @return {object} configObj The configuration object containing various extension options\n\t       */\n\t\n\t    }, {\n\t      key: 'getConfig',\n\t      value: function getConfig() {\n\t        return {\n\t          calendarVisible: 'false'\n\t        };\n\t      }\n\t\n\t      /**\n\t       * Fusioncharts life cycle method for extension\n\t       */\n\t\n\t    }, {\n\t      key: 'init',\n\t      value: function init(require) {\n\t        var instance = this;\n\t        require(['xAxis', 'graphics', 'chart', 'dataset', 'globalReactiveModel', 'spaceManagerInstance', 'extData', 'smartLabel', 'chartInstance', function (xAxis, graphics, chart, dataset, globalReactiveModel, spaceManagerInstance, extData, smartLabel, chartInstance) {\n\t          instance.xAxis = xAxis;\n\t          instance.graphics = graphics;\n\t          instance.chart = chart;\n\t          instance.dataset = dataset;\n\t          instance.globalReactiveModel = globalReactiveModel;\n\t          instance.spaceManagerInstance = spaceManagerInstance;\n\t          instance.extData = extData;\n\t          instance.smartLabel = smartLabel;\n\t          instance.chartInstance = chartInstance;\n\t        }]);\n\t        instance.startDt = instance.globalReactiveModel.model['x-axis-visible-range-start'];\n\t        instance.endDt = instance.globalReactiveModel.model['x-axis-visible-range-end'];\n\t        instance.toolbars = [];\n\t        instance.measurement = {};\n\t        instance.toolbars.push(instance.createToolbar());\n\t        return instance;\n\t      }\n\t    }, {\n\t      key: 'createToolbar',\n\t      value: function createToolbar() {\n\t        var toolbar,\n\t            self = this,\n\t            fromDateLabel,\n\t            toDateLabel,\n\t            group,\n\t            fromFormattedDate,\n\t            toFormattedDate;\n\t\n\t        self.fromDate = {};\n\t        self.toDate = {};\n\t\n\t        fromFormattedDate = this.getDate(this.startDt);\n\t        toFormattedDate = this.getDate(this.endDt);\n\t        toolbar = new this.HorizontalToolbar({\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        });\n\t\n\t        toolbar.setConfig({\n\t          'fill': '#FFFFFF',\n\t          'borderThickness': 0\n\t        });\n\t\n\t        group = new this.toolbox.ComponentGroup({\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        });\n\t\n\t        group.setConfig({\n\t          'fill': '#FFFFFF',\n\t          'borderThickness': 0\n\t        });\n\t\n\t        fromDateLabel = new this.toolbox.Label('From:', {\n\t          smartLabel: this.smartLabel,\n\t          paper: this.graphics.paper\n\t        }, {\n\t          text: {\n\t            style: {\n\t              'font-size': '13',\n\t              'font-family': '\"Lucida Grande\", sans-serif',\n\t              // 'font-weight': 'bold',\n\t              'fill': '#4B4B4B'\n\t            }\n\t          }\n\t        });\n\t\n\t        toDateLabel = new this.toolbox.Label('To:', {\n\t          smartLabel: this.smartLabel,\n\t          paper: this.graphics.paper\n\t        }, {\n\t          text: {\n\t            style: {\n\t              'font-size': '13',\n\t              'font-family': '\"Lucida Grande\", sans-serif',\n\t              // 'font-weight': 'bold',\n\t              'fill': '#4B4B4B'\n\t            }\n\t          }\n\t        });\n\t\n\t        self.fromDate = new this.toolbox.InputTextBoxSymbol({\n\t          width: 120,\n\t          height: 22\n\t        }, {\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        }, {\n\t          'strokeWidth': 1,\n\t          'stroke': '#ced5d4',\n\t          'symbolStrokeWidth': 0,\n\t          'radius': 2,\n\t          'margin': {\n\t            'right': 22\n\t          },\n\t          'btnTextStyle': {\n\t            'font-family': '\"Lucida Grande\", sans-serif',\n\t            'fontSize': 13\n\t          },\n\t          'label': fromFormattedDate,\n\t          // 'customConfig': {\n\t          //   'errored': {\n\t          //     'hover': {\n\t          //       'fill': '#FFEFEF',\n\t          //       'stroke-width': 1,\n\t          //       'stroke': '#D25353'\n\t          //     },\n\t          //     'normal': {\n\t          //       'fill': '#FFEFEF',\n\t          //       'stroke-width': 1,\n\t          //       'stroke': '#D25353'\n\t          //     },\n\t          //     'pressed': {\n\t          //       'fill': '#FFEFEF',\n\t          //       'stroke-width': 1,\n\t          //       'stroke': '#D25353'\n\t          //     }\n\t          //   }\n\t          // },\n\t          'labelFill': '#696969'\n\t        });\n\t\n\t        self.fromDate.setStateConfig({\n\t          pressed: {\n\t            config: {\n\t              pressed: {\n\t                'fill': '#FFFFFF',\n\t                'stroke-width': 1,\n\t                'stroke': '#1E1F1F'\n\t              },\n\t              normal: {\n\t                'fill': '#FFFFFF',\n\t                'stroke-width': 1,\n\t                'stroke': '#1E1F1F'\n\t              },\n\t              hover: {\n\t                'fill': '#FFFFFF',\n\t                'stroke-width': 1,\n\t                // 'stroke': '#1E1F1F'\n\t                'stroke': '#0000FF'\n\t              }\n\t            }\n\t          }\n\t        });\n\t\n\t        self.toDate = new this.toolbox.InputTextBoxSymbol({\n\t          width: 120,\n\t          height: 22\n\t        }, {\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        }, {\n\t          'strokeWidth': 1,\n\t          'stroke': '#ced5d4',\n\t          'symbolStrokeWidth': 0,\n\t          'radius': 2,\n\t          'btnTextStyle': {\n\t            'font-family': '\"Lucida Grande\", sans-serif',\n\t            'fontSize': 13\n\t          },\n\t          'label': toFormattedDate,\n\t          // 'customConfig': {\n\t          //   'errored': {\n\t          //     'hover': {\n\t          //       'fill': '#FFEFEF',\n\t          //       'stroke-width': 1,\n\t          //       'stroke': '#D25353'\n\t          //     },\n\t          //     'normal': {\n\t          //       'fill': '#FFEFEF',\n\t          //       'stroke-width': 1,\n\t          //       'stroke': '#D25353'\n\t          //     },\n\t          //     'pressed': {\n\t          //       'fill': '#FFEFEF',\n\t          //       'stroke-width': 1,\n\t          //       'stroke': '#D25353'\n\t          //     }\n\t          //   }\n\t          // },\n\t          'labelFill': '#696969'\n\t        });\n\t\n\t        self.toDate.setStateConfig({\n\t          pressed: {\n\t            config: {\n\t              pressed: {\n\t                'fill': '#FFFFFF',\n\t                'stroke-width': 1,\n\t                'stroke': '#1E1F1F'\n\t              },\n\t              normal: {\n\t                'fill': '#FFFFFF',\n\t                'stroke-width': 1,\n\t                'stroke': '#1E1F1F'\n\t              },\n\t              hover: {\n\t                'fill': '#FFFFFF',\n\t                'stroke-width': 1,\n\t                'stroke': '#1E1F1F'\n\t              }\n\t            }\n\t          }\n\t        });\n\t\n\t        self.fromDate.attachEventHandlers({\n\t          click: {\n\t            fn: function fn() {\n\t              self.fromDate.edit();\n\t              self.fromDate.updateVisual('pressed');\n\t            }\n\t          },\n\t          textOnBlur: function textOnBlur() {\n\t            self.fromDate.blur();\n\t            self.startDate = self.fromDate.getText();\n\t            self.fromDate.updateVisual('enabled');\n\t          }\n\t        });\n\t\n\t        self.toDate.attachEventHandlers({\n\t          click: {\n\t            fn: function fn() {\n\t              self.toDate.edit();\n\t              self.toDate.updateVisual('pressed');\n\t            }\n\t          },\n\t          textOnBlur: function textOnBlur() {\n\t            self.toDate.blur();\n\t            self.endDate = self.toDate.getText();\n\t            self.toDate.updateVisual('enabled');\n\t          }\n\t        });\n\t\n\t        // Temporary. Required to render the text box correctly. Commenting this out distorts toolbox.\n\t        this.SymbolStore.register('textBoxIcon', function (x, y, rad, w, h, padX, padY) {\n\t          var x1 = x - w / 2 + padX / 2,\n\t              x2 = x + w / 2 - padX / 2,\n\t              y1 = y - h / 2 + padY / 2,\n\t              y2 = y + h / 2 - padY / 2;\n\t\n\t          return ['M', x1, y1, 'L', x2, y1, 'L', x2, y2, 'L', x1, y2, 'Z'];\n\t        });\n\t\n\t        group.addSymbol(fromDateLabel);\n\t        group.addSymbol(self.fromDate);\n\t        group.addSymbol(toDateLabel);\n\t        group.addSymbol(self.toDate);\n\t        toolbar.addComponent(group);\n\t        return toolbar;\n\t      }\n\t    }, {\n\t      key: 'getLogicalSpace',\n\t      value: function getLogicalSpace(availableWidth, availableHeight) {\n\t        var logicalSpace,\n\t            width = 0,\n\t            height = 0,\n\t            i,\n\t            ln;\n\t\n\t        availableWidth /= 2;\n\t\n\t        for (i = 0, ln = this.toolbars.length; i < ln; i++) {\n\t          logicalSpace = this.toolbars[i].getLogicalSpace(availableWidth, availableHeight);\n\t          width = Math.max(logicalSpace.width, width);\n\t          height += logicalSpace.height;\n\t          this.toolbars[i].width = logicalSpace.width;\n\t          this.toolbars[i].height = logicalSpace.height;\n\t        }\n\t        height += this.padding;\n\t        return {\n\t          width: width,\n\t          height: height\n\t        };\n\t      }\n\t    }, {\n\t      key: 'placeInCanvas',\n\t      value: function placeInCanvas() {\n\t        var _self = this;\n\t        _self.padding = 5;\n\t        _self.spaceManagerInstance.add([{\n\t          name: function name() {\n\t            return 'DateRangeChooserToolbox';\n\t          },\n\t          ref: function ref(obj) {\n\t            return obj['0'];\n\t          },\n\t          self: function self() {\n\t            return _self;\n\t          },\n\t          priority: function priority() {\n\t            return 2;\n\t          },\n\t          layout: function layout(obj) {\n\t            return obj[_self.extData.layout] || obj['inline'];\n\t          },\n\t          orientation: [{\n\t            type: function type(obj) {\n\t              return obj[_self.extData.orientation] || obj['horizontal'];\n\t            },\n\t            position: [{\n\t              type: function type(obj) {\n\t                return obj[_self.extData.position] || obj['top'];\n\t              },\n\t              alignment: [{\n\t                type: function type(obj) {\n\t                  return obj[_self.extData.alignment] || obj['right'];\n\t                },\n\t                dimensions: [function () {\n\t                  var parent = this.getParentComponentGroup();\n\t                  return _self.getLogicalSpace(parent.getWidth(), parent.getHeight());\n\t                }]\n\t              }]\n\t            }]\n\t          }]\n\t        }]);\n\t      }\n\t    }, {\n\t      key: 'setDrawingConfiguration',\n\t      value: function setDrawingConfiguration(x, y, width, height, group) {\n\t        var mes = this.measurement;\n\t        mes.x = x;\n\t        mes.y = y;\n\t        mes.width = width;\n\t        mes.height = height;\n\t\n\t        this.parentGroup = group;\n\t\n\t        return this;\n\t      }\n\t    }, {\n\t      key: 'draw',\n\t      value: function draw(x, y, width, height, group) {\n\t        var self = this,\n\t            measurement = self.measurement,\n\t            toolbars = self.toolbars,\n\t            ln = void 0,\n\t            i = void 0,\n\t            toolbar = void 0,\n\t            model = self.globalReactiveModel;\n\t\n\t        x = x === undefined ? measurement.x : x;\n\t        y = y === undefined ? measurement.y : y;\n\t        width = width === undefined ? measurement.width : width;\n\t        height = height === undefined ? measurement.height : height;\n\t        group = group === undefined ? self.parentGroup : group;\n\t        if (width && height) {\n\t          self.isDrawn = true;\n\t          for (i = 0, ln = toolbars.length; i < ln; i++) {\n\t            toolbar = toolbars[i];\n\t            toolbar.draw(x, y, group);\n\t          }\n\t          model.onPropsChange(['x-axis-visible-range-start', 'x-axis-visible-range-end'], function (start, end) {\n\t            // self.fromDate.blur(new Date(start[1]).toLocaleDateString());\n\t            // self.toDate.blur(new Date(end[1]).toLocaleDateString());\n\t            self.startDt = start[1];\n\t            self.fromDate.blur(self.getDate(start[1]));\n\t            self.endDt = end[1];\n\t            self.toDate.blur(self.getDate(end[1]));\n\t          });\n\t        }\n\t        self.startDataset = self.globalReactiveModel.model['x-axis-absolute-range-start'];\n\t        self.endDataset = self.globalReactiveModel.model['x-axis-absolute-range-end'];\n\t        self.maxXAxisTicks = self.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n\t        self.maxXAxisTicks = self.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n\t        self.minDatestampDiff = self.globalReactiveModel.model['minimum-consecutive-datestamp-diff'];\n\t        self.minActiveInterval = self.maxXAxisTicks * self.minDatestampDiff;\n\t      }\n\t    }, {\n\t      key: 'startDate',\n\t      get: function get() {\n\t        return this.startDt;\n\t      },\n\t      set: function set(startDt) {\n\t        var startTimestamp = this.getTimestamp(startDt),\n\t            absoluteStart = this.globalReactiveModel.model['x-axis-absolute-range-start'],\n\t            minDiff = this.minActiveInterval,\n\t            actualDiff = this.endDt - startTimestamp;\n\t        if (startTimestamp <= this.endDt && startTimestamp >= absoluteStart && actualDiff > minDiff) {\n\t          this.startDt = startTimestamp;\n\t          this.globalReactiveModel.model['x-axis-visible-range-start'] = this.startDt;\n\t        } else {\n\t          // this.fromDate.updateVisual('errored');\n\t          console.error('From Date error state!');\n\t        }\n\t      }\n\t    }, {\n\t      key: 'endDate',\n\t      get: function get() {\n\t        return this.endDt;\n\t      },\n\t      set: function set(endDt) {\n\t        var endTimestamp = this.getTimestamp(endDt),\n\t            absoluteEnd = this.globalReactiveModel.model['x-axis-absolute-range-end'],\n\t            minDiff = this.minActiveInterval,\n\t            actualDiff = endTimestamp - this.startDt;\n\t        if (endTimestamp >= this.startDt && endTimestamp <= absoluteEnd && actualDiff > minDiff) {\n\t          this.endDt = endTimestamp;\n\t          this.globalReactiveModel.model['x-axis-visible-range-end'] = this.endDt;\n\t        } else {\n\t          // this.toDate.updateVisual('errored');\n\t          console.error('To Date error state!');\n\t        }\n\t      }\n\t    }]);\n\t\n\t    return DateRange;\n\t  }();\n\t\n\t  return DateRange;\n\t};\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// date-range-chooser-es5.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 454bd333e327c7f676a8","'use strict';\nconst DateRange = require('./fcts-ext-daterange');\n\nwindow.dr = new DateRange();\n\n;(function (env, factory) {\n  if (typeof module === 'object' && module.exports) {\n    module.exports = env.document\n       ? factory(env) : function (win) {\n         if (!win.document) {\n           throw new Error('Window with document not present');\n         }\n         return factory(win, true);\n       };\n  } else {\n    env.DateRangeChooser = factory(env, true);\n  }\n})(typeof window !== 'undefined' ? window : this, function (_window, windowExists) {\n  var FC = _window.FusionCharts;\n  FC.register('extension', ['private', 'date-range-chooser', function () {\n    var DateTimeFormatter = this.hcLib.DateTimeFormatter;\n    FC.registerComponent('extensions', 'date-range-chooser', DateRange({FusionCharts: FC,\n      DateTimeFormatter: DateTimeFormatter}));\n  }]);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 1\n// module chunks = 0","'use strict';\nmodule.exports = function (dep) {\n  /**\n   * Class representing the DateRange.\n   */\n  class DateRange {\n    constructor () {\n      /**\n       * @private\n       */\n      this.startDt = 0;\n      this.endDt = 0;\n      this.startDataset = 0;\n      this.endDataset = 0;\n      this.toolbox = dep.FusionCharts.getComponent('api', 'toolbox');\n      this.HorizontalToolbar = this.toolbox.HorizontalToolbar;\n      this.ComponentGroup = this.toolbox.ComponentGroup;\n      this.SymbolStore = this.toolbox.SymbolStore;\n      this.isDrawn = false;\n    }\n\n    /**\n     * An object representing the start and end dates.\n     * @type {DateRange.range}\n     */\n    get startDate () {\n      return this.startDt;\n    }\n\n    set startDate (startDt) {\n      let startTimestamp = this.getTimestamp(startDt),\n        absoluteStart = this.globalReactiveModel.model['x-axis-absolute-range-start'],\n        minDiff = this.minActiveInterval,\n        actualDiff = this.endDt - startTimestamp;\n      if (startTimestamp <= this.endDt && startTimestamp >= absoluteStart && actualDiff > minDiff) {\n        this.startDt = startTimestamp;\n        this.globalReactiveModel.model['x-axis-visible-range-start'] = this.startDt;\n      } else {\n        // this.fromDate.updateVisual('errored');\n        console.error('From Date error state!');\n      }\n    }\n\n    get endDate () {\n      return this.endDt;\n    }\n\n    set endDate (endDt) {\n      let endTimestamp = this.getTimestamp(endDt),\n        absoluteEnd = this.globalReactiveModel.model['x-axis-absolute-range-end'],\n        minDiff = this.minActiveInterval,\n        actualDiff = endTimestamp - this.startDt;\n      if (endTimestamp >= this.startDt && endTimestamp <= absoluteEnd && actualDiff > minDiff) {\n        this.endDt = endTimestamp;\n        this.globalReactiveModel.model['x-axis-visible-range-end'] = this.endDt;\n      } else {\n        // this.toDate.updateVisual('errored');\n        console.error('To Date error state!');\n      }\n    }\n\n    getTimestamp (dateStr) {\n      let dateFormat = this.extData.dateFormat || '%d-%m-%Y',\n        dateFormatter = new dep.DateTimeFormatter(dateFormat);\n      return +dateFormatter.getNativeDate(dateStr);\n    }\n\n    getDate (timestamp) {\n      var date = new Date(timestamp);\n      return date.getDate() + '-' + (date.getMonth() + 1) + '-' + date.getFullYear();\n    }\n\n    /**\n     * Sets the configurable options of the extension (e.g. cosmetics)\n     * @param {Object} configObj The configuration object containing various extension options\n     */\n    setConfig (configObj) {}\n\n    /**\n     * Gets the configurable options of the extension (e.g. cosmetics)\n     * @return {object} configObj The configuration object containing various extension options\n     */\n    getConfig () {\n      return {\n        calendarVisible: 'false'\n      };\n    }\n\n    /**\n     * Fusioncharts life cycle method for extension\n     */\n    init (require) {\n      var instance = this;\n      require([\n        'xAxis',\n        'graphics',\n        'chart',\n        'dataset',\n        'globalReactiveModel',\n        'spaceManagerInstance',\n        'extData',\n        'smartLabel',\n        'chartInstance',\n        function (\n          xAxis,\n          graphics,\n          chart,\n          dataset,\n          globalReactiveModel,\n          spaceManagerInstance,\n          extData,\n          smartLabel,\n          chartInstance) {\n          instance.xAxis = xAxis;\n          instance.graphics = graphics;\n          instance.chart = chart;\n          instance.dataset = dataset;\n          instance.globalReactiveModel = globalReactiveModel;\n          instance.spaceManagerInstance = spaceManagerInstance;\n          instance.extData = extData;\n          instance.smartLabel = smartLabel;\n          instance.chartInstance = chartInstance;\n        }\n      ]);\n      instance.startDt = instance.globalReactiveModel.model['x-axis-visible-range-start'];\n      instance.endDt = instance.globalReactiveModel.model['x-axis-visible-range-end'];\n      instance.toolbars = [];\n      instance.measurement = {};\n      instance.toolbars.push(instance.createToolbar());\n      return instance;\n    };\n\n    createToolbar () {\n      var toolbar,\n        self = this,\n        fromDateLabel,\n        toDateLabel,\n        group,\n        fromFormattedDate,\n        toFormattedDate;\n\n      self.fromDate = {};\n      self.toDate = {};\n\n      fromFormattedDate = this.getDate(this.startDt);\n      toFormattedDate = this.getDate(this.endDt);\n      toolbar = new this.HorizontalToolbar({\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      });\n\n      toolbar.setConfig({\n        'fill': '#FFFFFF',\n        'borderThickness': 0\n      });\n\n      group = new this.toolbox.ComponentGroup({\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      });\n\n      group.setConfig({\n        'fill': '#FFFFFF',\n        'borderThickness': 0\n      });\n\n      fromDateLabel = new this.toolbox.Label(\n        'From:', {\n          smartLabel: this.smartLabel,\n          paper: this.graphics.paper\n        }, {\n          text: {\n            style: {\n              'font-size': '13',\n              'font-family': '\"Lucida Grande\", sans-serif',\n              // 'font-weight': 'bold',\n              'fill': '#4B4B4B'\n            }\n          }\n        }\n      );\n\n      toDateLabel = new this.toolbox.Label(\n        'To:', {\n          smartLabel: this.smartLabel,\n          paper: this.graphics.paper\n        }, {\n          text: {\n            style: {\n              'font-size': '13',\n              'font-family': '\"Lucida Grande\", sans-serif',\n              // 'font-weight': 'bold',\n              'fill': '#4B4B4B'\n            }\n          }\n        }\n      );\n\n      self.fromDate = new this.toolbox.InputTextBoxSymbol({\n        width: 120,\n        height: 22\n      }, {\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      }, {\n        'strokeWidth': 1,\n        'stroke': '#ced5d4',\n        'symbolStrokeWidth': 0,\n        'radius': 2,\n        'margin': {\n          'right': 22\n        },\n        'btnTextStyle': {\n          'font-family': '\"Lucida Grande\", sans-serif',\n          'fontSize': 13\n        },\n        'label': fromFormattedDate,\n        // 'customConfig': {\n        //   'errored': {\n        //     'hover': {\n        //       'fill': '#FFEFEF',\n        //       'stroke-width': 1,\n        //       'stroke': '#D25353'\n        //     },\n        //     'normal': {\n        //       'fill': '#FFEFEF',\n        //       'stroke-width': 1,\n        //       'stroke': '#D25353'\n        //     },\n        //     'pressed': {\n        //       'fill': '#FFEFEF',\n        //       'stroke-width': 1,\n        //       'stroke': '#D25353'\n        //     }\n        //   }\n        // },\n        'labelFill': '#696969'\n      });\n\n      self.fromDate.setStateConfig({\n        pressed: {\n          config: {\n            pressed: {\n              'fill': '#FFFFFF',\n              'stroke-width': 1,\n              'stroke': '#1E1F1F'\n            },\n            normal: {\n              'fill': '#FFFFFF',\n              'stroke-width': 1,\n              'stroke': '#1E1F1F'\n            },\n            hover: {\n              'fill': '#FFFFFF',\n              'stroke-width': 1,\n              // 'stroke': '#1E1F1F'\n              'stroke': '#0000FF'\n            }\n          }\n        }\n      });\n\n      self.toDate = new this.toolbox.InputTextBoxSymbol({\n        width: 120,\n        height: 22\n      }, {\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      }, {\n        'strokeWidth': 1,\n        'stroke': '#ced5d4',\n        'symbolStrokeWidth': 0,\n        'radius': 2,\n        'btnTextStyle': {\n          'font-family': '\"Lucida Grande\", sans-serif',\n          'fontSize': 13\n        },\n        'label': toFormattedDate,\n        // 'customConfig': {\n        //   'errored': {\n        //     'hover': {\n        //       'fill': '#FFEFEF',\n        //       'stroke-width': 1,\n        //       'stroke': '#D25353'\n        //     },\n        //     'normal': {\n        //       'fill': '#FFEFEF',\n        //       'stroke-width': 1,\n        //       'stroke': '#D25353'\n        //     },\n        //     'pressed': {\n        //       'fill': '#FFEFEF',\n        //       'stroke-width': 1,\n        //       'stroke': '#D25353'\n        //     }\n        //   }\n        // },\n        'labelFill': '#696969'\n      });\n\n      self.toDate.setStateConfig({\n        pressed: {\n          config: {\n            pressed: {\n              'fill': '#FFFFFF',\n              'stroke-width': 1,\n              'stroke': '#1E1F1F'\n            },\n            normal: {\n              'fill': '#FFFFFF',\n              'stroke-width': 1,\n              'stroke': '#1E1F1F'\n            },\n            hover: {\n              'fill': '#FFFFFF',\n              'stroke-width': 1,\n              'stroke': '#1E1F1F'\n            }\n          }\n        }\n      });\n\n      self.fromDate.attachEventHandlers({\n        click: {\n          fn: () => {\n            self.fromDate.edit();\n            self.fromDate.updateVisual('pressed');\n          }\n        },\n        textOnBlur: function () {\n          self.fromDate.blur();\n          self.startDate = self.fromDate.getText();\n          self.fromDate.updateVisual('enabled');\n        }\n      });\n\n      self.toDate.attachEventHandlers({\n        click: {\n          fn: () => {\n            self.toDate.edit();\n            self.toDate.updateVisual('pressed');\n          }\n        },\n        textOnBlur: function () {\n          self.toDate.blur();\n          self.endDate = self.toDate.getText();\n          self.toDate.updateVisual('enabled');\n        }\n      });\n\n      // Temporary. Required to render the text box correctly. Commenting this out distorts toolbox.\n      this.SymbolStore.register('textBoxIcon', function (x, y, rad, w, h, padX, padY) {\n        var x1 = x - w / 2 + padX / 2,\n          x2 = x + w / 2 - padX / 2,\n          y1 = y - h / 2 + padY / 2,\n          y2 = y + h / 2 - padY / 2;\n\n        return ['M', x1, y1, 'L', x2, y1, 'L', x2, y2, 'L', x1, y2, 'Z'];\n      });\n\n      group.addSymbol(fromDateLabel);\n      group.addSymbol(self.fromDate);\n      group.addSymbol(toDateLabel);\n      group.addSymbol(self.toDate);\n      toolbar.addComponent(group);\n      return toolbar;\n    };\n\n    getLogicalSpace (availableWidth, availableHeight) {\n      var logicalSpace,\n        width = 0,\n        height = 0,\n        i,\n        ln;\n\n      availableWidth /= 2;\n\n      for (i = 0, ln = this.toolbars.length; i < ln; i++) {\n        logicalSpace = this.toolbars[i].getLogicalSpace(availableWidth, availableHeight);\n        width = Math.max(logicalSpace.width, width);\n        height += logicalSpace.height;\n        this.toolbars[i].width = logicalSpace.width;\n        this.toolbars[i].height = logicalSpace.height;\n      }\n      height += this.padding;\n      return {\n        width: width,\n        height: height\n      };\n    };\n\n    placeInCanvas () {\n      var self = this;\n      self.padding = 5;\n      self.spaceManagerInstance.add([{\n        name: function () {\n          return 'DateRangeChooserToolbox';\n        },\n        ref: function (obj) {\n          return obj['0'];\n        },\n        self: function () {\n          return self;\n        },\n        priority: function () {\n          return 2;\n        },\n        layout: function (obj) {\n          return obj[self.extData.layout] || obj['inline'];\n        },\n        orientation: [{\n          type: function (obj) {\n            return obj[self.extData.orientation] || obj['horizontal'];\n          },\n          position: [{\n            type: function (obj) {\n              return obj[self.extData.position] || obj['top'];\n            },\n            alignment: [{\n              type: function (obj) {\n                return obj[self.extData.alignment] || obj['right'];\n              },\n              dimensions: [function () {\n                var parent = this.getParentComponentGroup();\n                return self.getLogicalSpace(parent.getWidth(), parent.getHeight());\n              }]\n            }]\n          }]\n        }]\n      }]);\n    };\n\n    setDrawingConfiguration (x, y, width, height, group) {\n      var mes = this.measurement;\n      mes.x = x;\n      mes.y = y;\n      mes.width = width;\n      mes.height = height;\n\n      this.parentGroup = group;\n\n      return this;\n    };\n\n    draw (x, y, width, height, group) {\n      let self = this,\n        measurement = self.measurement,\n        toolbars = self.toolbars,\n        ln,\n        i,\n        toolbar,\n        model = self.globalReactiveModel;\n\n      x = x === undefined ? measurement.x : x;\n      y = y === undefined ? measurement.y : y;\n      width = width === undefined ? measurement.width : width;\n      height = height === undefined ? measurement.height : height;\n      group = group === undefined ? self.parentGroup : group;\n      if (width && height) {\n        self.isDrawn = true;\n        for (i = 0, ln = toolbars.length; i < ln; i++) {\n          toolbar = toolbars[i];\n          toolbar.draw(x, y, group);\n        }\n        model.onPropsChange(['x-axis-visible-range-start', 'x-axis-visible-range-end'],\n          (start, end) => {\n            // self.fromDate.blur(new Date(start[1]).toLocaleDateString());\n            // self.toDate.blur(new Date(end[1]).toLocaleDateString());\n            self.startDt = start[1];\n            self.fromDate.blur(self.getDate(start[1]));\n            self.endDt = end[1];\n            self.toDate.blur(self.getDate(end[1]));\n          }\n        );\n      }\n      self.startDataset = self.globalReactiveModel.model['x-axis-absolute-range-start'];\n      self.endDataset = self.globalReactiveModel.model['x-axis-absolute-range-end'];\n      self.maxXAxisTicks = self.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n      self.maxXAxisTicks = self.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n      self.minDatestampDiff = self.globalReactiveModel.model['minimum-consecutive-datestamp-diff'];\n      self.minActiveInterval = self.maxXAxisTicks * self.minDatestampDiff;\n    };\n  }\n  return DateRange;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fcts-ext-daterange.js"],"sourceRoot":""}