{"version":3,"sources":["webpack:///date-range-chooser-es5.min.js","webpack:///webpack/bootstrap 4c142aecca0aa0391874","webpack:///./src/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/fcts-ext-daterange.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_typeof","Symbol","iterator","obj","constructor","prototype","DateRange","window","dr","env","factory","document","win","Error","DateRangeChooser","undefined","_window","windowExists","FC","FusionCharts","register","DateTimeFormatter","this","hcLib","registerComponent","webpackPolyfill","deprecate","paths","children","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","dep","startDt","endDt","startDataset","endDataset","toolbox","getComponent","HorizontalToolbar","ComponentGroup","SymbolStore","isDrawn","value","dateStr","dateFormat","config","dateFormatter","getNativeDate","timestamp","formatAs","configObj","calendarVisible","extData","disabled","layout","orientation","position","alignment","fromText","toText","styles","width","height","font-family","font-size","font-color","input-fill","input-border-thickness","input-border-color","input-border-radius","input-shadow-fill","input-shadow-opacity","input-focus-fill","input-focus-border-thickness","input-focus-border-color","input-error-fill","input-error-border-thickness","input-error-border-color","require","xAxis","graphics","chart","dataset","globalReactiveModel","spaceManagerInstance","smartLabel","chartInstance","createExtData","model","toolbars","measurement","push","createToolbar","toolbar","fromDateLabel","toDateLabel","group","fromFormattedDate","toFormattedDate","self","fromDate","toDate","getDate","paper","chartContainer","container","setConfig","fill","borderThickness","Label","text","style","InputTextBoxSymbol","strokeWidth","stroke","radius","btnTextStyle","fontSize","shadow","opacity","label","labelFill","addCustomState","hover","stroke-width","normal","pressed","setStateConfig","enabled","attachEventHandlers","click","fn","edit","updateVisual","keypress","e","event","charCode","which","keyCode","blur","startDate","getText","state","textOnBlur","endDate","x","y","rad","w","h","padX","padY","x1","x2","y1","y2","addSymbol","addComponent","availableWidth","availableHeight","logicalSpace","ln","getLogicalSpace","Math","max","padding","add","name","ref","priority","type","dimensions","parent","getParentComponentGroup","getWidth","getHeight","mes","parentGroup","draw","onPropsChange","start","end","maxXAxisTicks","minDatestampDiff","minActiveInterval","get","set","startTimestamp","getTimestamp","absoluteStart","minDiff","actualDiff","endTimestamp","absoluteEnd"],"mappings":"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","file":"date-range-chooser-es5.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar DateRange = __webpack_require__(2);\n\t\n\twindow.dr = new DateRange();\n\t\n\t;(function (env, factory) {\n\t  if (( false ? 'undefined' : _typeof(module)) === 'object' && module.exports) {\n\t    module.exports = env.document ? factory(env) : function (win) {\n\t      if (!win.document) {\n\t        throw new Error('Window with document not present');\n\t      }\n\t      return factory(win, true);\n\t    };\n\t  } else {\n\t    env.DateRangeChooser = factory(env, true);\n\t  }\n\t})(typeof window !== 'undefined' ? window : undefined, function (_window, windowExists) {\n\t  var FC = _window.FusionCharts;\n\t  FC.register('extension', ['private', 'date-range-chooser', function () {\n\t    var DateTimeFormatter = this.hcLib.DateTimeFormatter;\n\t    FC.registerComponent('extensions', 'date-range-chooser', DateRange({ FusionCharts: FC,\n\t      DateTimeFormatter: DateTimeFormatter }));\n\t  }]);\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\n\t\tif(!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function() {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tmodule.exports = function (dep) {\n\t  /**\n\t   * Class representing the DateRange.\n\t   */\n\t  var DateRange = function () {\n\t    function DateRange() {\n\t      _classCallCheck(this, DateRange);\n\t\n\t      /**\n\t       * @private\n\t       */\n\t      this.startDt = 0;\n\t      this.endDt = 0;\n\t      this.startDataset = 0;\n\t      this.endDataset = 0;\n\t      this.toolbox = dep.FusionCharts.getComponent('api', 'toolbox');\n\t      this.DateTimeFormatter = dep.DateTimeFormatter;\n\t      this.HorizontalToolbar = this.toolbox.HorizontalToolbar;\n\t      this.ComponentGroup = this.toolbox.ComponentGroup;\n\t      this.SymbolStore = this.toolbox.SymbolStore;\n\t      this.isDrawn = false;\n\t    }\n\t\n\t    /**\n\t     * An object representing the start and end dates.\n\t     * @type {DateRange.range}\n\t     */\n\t\n\t\n\t    _createClass(DateRange, [{\n\t      key: 'getTimestamp',\n\t      value: function getTimestamp(dateStr) {\n\t        var dateFormat = this.config.dateFormat,\n\t            dateFormatter = new dep.DateTimeFormatter(dateFormat);\n\t        return +dateFormatter.getNativeDate(dateStr);\n\t      }\n\t    }, {\n\t      key: 'getDate',\n\t      value: function getDate(timestamp) {\n\t        var dateFormat = this.config.dateFormat;\n\t        return this.DateTimeFormatter.formatAs(timestamp, dateFormat);\n\t      }\n\t\n\t      /**\n\t       * Sets the configurable options of the extension (e.g. cosmetics)\n\t       * @param {Object} configObj The configuration object containing various extension options\n\t       */\n\t\n\t    }, {\n\t      key: 'setConfig',\n\t      value: function setConfig(configObj) {}\n\t\n\t      /**\n\t       * Gets the configurable options of the extension (e.g. cosmetics)\n\t       * @return {object} configObj The configuration object containing various extension options\n\t       */\n\t\n\t    }, {\n\t      key: 'getConfig',\n\t      value: function getConfig() {\n\t        return {\n\t          calendarVisible: 'false'\n\t        };\n\t      }\n\t    }, {\n\t      key: 'createExtData',\n\t      value: function createExtData(extData) {\n\t        var config = {};\n\t        config.disabled = extData.disabled || 'false';\n\t        config.layout = extData.layout || 'inline';\n\t        config.orientation = extData.orientation || 'horizontal';\n\t        config.position = extData.position || 'top';\n\t        config.alignment = extData.alignment || 'right';\n\t        config.dateFormat = extData.dateFormat || '%d-%m-%Y';\n\t        config.fromText = extData.fromText || 'From:';\n\t        config.toText = extData.toText || 'To:';\n\t        config.styles = extData.styles || {\n\t          'width': 120,\n\t          'height': 22,\n\t\n\t          'font-family': '\"Lucida Grande\", sans-serif',\n\t          'font-size': 13,\n\t          'font-color': '#4B4B4B',\n\t\n\t          'input-fill': '#FFFFFF',\n\t          'input-border-thickness': 1,\n\t          'input-border-color': '#CED5D4',\n\t          'input-border-radius': 1,\n\t          'input-shadow-fill': '#000000',\n\t          'input-shadow-opacity': 0.35,\n\t\n\t          'input-focus-fill': '#FFFFFF',\n\t          'input-focus-border-thickness': 1,\n\t          'input-focus-border-color': '#1E1F1F',\n\t\n\t          'input-error-fill': '#FFEFEF',\n\t          'input-error-border-thickness': 1,\n\t          'input-error-border-color': '#D25353'\n\t        };\n\t        return config;\n\t      }\n\t\n\t      /**\n\t       * Fusioncharts life cycle method for extension\n\t       */\n\t\n\t    }, {\n\t      key: 'init',\n\t      value: function init(require) {\n\t        var instance = this;\n\t        require(['xAxis', 'graphics', 'chart', 'dataset', 'globalReactiveModel', 'spaceManagerInstance', 'extData', 'smartLabel', 'chartInstance', function (xAxis, graphics, chart, dataset, globalReactiveModel, spaceManagerInstance, extData, smartLabel, chartInstance) {\n\t          instance.xAxis = xAxis;\n\t          instance.graphics = graphics;\n\t          instance.chart = chart;\n\t          instance.dataset = dataset;\n\t          instance.globalReactiveModel = globalReactiveModel;\n\t          instance.spaceManagerInstance = spaceManagerInstance;\n\t          instance.config = instance.createExtData(extData);\n\t          instance.smartLabel = smartLabel;\n\t          instance.chartInstance = chartInstance;\n\t        }]);\n\t        instance.startDt = instance.globalReactiveModel.model['x-axis-visible-range-start'];\n\t        instance.endDt = instance.globalReactiveModel.model['x-axis-visible-range-end'];\n\t        instance.toolbars = [];\n\t        instance.measurement = {};\n\t        instance.toolbars.push(instance.createToolbar());\n\t        return instance;\n\t      }\n\t    }, {\n\t      key: 'createToolbar',\n\t      value: function createToolbar() {\n\t        var toolbar,\n\t            self = this,\n\t            fromDateLabel,\n\t            toDateLabel,\n\t            group,\n\t            fromFormattedDate,\n\t            toFormattedDate;\n\t\n\t        self.fromDate = {};\n\t        self.toDate = {};\n\t\n\t        fromFormattedDate = this.getDate(this.startDt);\n\t        toFormattedDate = this.getDate(this.endDt);\n\t        toolbar = new this.HorizontalToolbar({\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        });\n\t\n\t        toolbar.setConfig({\n\t          'fill': '#FFFFFF',\n\t          'borderThickness': 0\n\t        });\n\t\n\t        group = new this.toolbox.ComponentGroup({\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        });\n\t\n\t        group.setConfig({\n\t          'fill': '#FFFFFF',\n\t          'borderThickness': 0\n\t        });\n\t\n\t        fromDateLabel = new this.toolbox.Label(this.config['fromText'], {\n\t          smartLabel: this.smartLabel,\n\t          paper: this.graphics.paper\n\t        }, {\n\t          text: {\n\t            style: {\n\t              'font-size': this.config.styles['font-size'],\n\t              'font-family': this.config.styles['font-family'],\n\t              'fill': this.config.styles['font-color']\n\t            }\n\t          }\n\t        });\n\t\n\t        toDateLabel = new this.toolbox.Label(this.config['toText'], {\n\t          smartLabel: this.smartLabel,\n\t          paper: this.graphics.paper\n\t        }, {\n\t          text: {\n\t            style: {\n\t              'font-size': this.config.styles['font-size'],\n\t              'font-family': this.config.styles['font-family'],\n\t              'fill': this.config.styles['font-color']\n\t            }\n\t          }\n\t        });\n\t\n\t        self.fromDate = new this.toolbox.InputTextBoxSymbol({\n\t          width: this.config.styles['width'],\n\t          height: this.config.styles['height']\n\t        }, {\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        }, {\n\t          'strokeWidth': this.config.styles['input-border-thickness'],\n\t          'fill': this.config.styles['input-fill'],\n\t          'stroke': this.config.styles['input-border-color'],\n\t          'radius': this.config.styles['input-border-radius'],\n\t          'btnTextStyle': {\n\t            'font-family': this.config.styles['font-family'],\n\t            'fontSize': this.config.styles['font-size']\n\t          },\n\t          'shadow': {\n\t            'fill': this.config.styles['input-shadow-fill'],\n\t            'opacity': this.config.styles['input-shadow-opacity']\n\t          },\n\t          'label': fromFormattedDate,\n\t          'labelFill': this.config.styles['font-color']\n\t        });\n\t\n\t        self.fromDate.addCustomState('errored', {\n\t          config: {\n\t            hover: {\n\t              'fill': this.config.styles['input-error-fill'],\n\t              'stroke-width': this.config.styles['input-error-border-thickness'],\n\t              'stroke': this.config.styles['input-error-border-color']\n\t            },\n\t            normal: {\n\t              'fill': this.config.styles['input-error-fill'],\n\t              'stroke-width': this.config.styles['input-error-border-thickness'],\n\t              'stroke': this.config.styles['input-error-border-color']\n\t            },\n\t            pressed: {\n\t              'fill': this.config.styles['input-error-fill'],\n\t              'stroke-width': this.config.styles['input-error-border-thickness'],\n\t              'stroke': this.config.styles['input-error-border-color']\n\t            }\n\t          }\n\t        });\n\t\n\t        self.fromDate.setStateConfig({\n\t          pressed: {\n\t            config: {\n\t              pressed: {\n\t                'fill': this.config.styles['input-focus-fill'],\n\t                'stroke-width': this.config.styles['input-focus-border-thickness'],\n\t                'stroke': this.config.styles['input-focus-border-color']\n\t              },\n\t              normal: {\n\t                'fill': this.config.styles['input-focus-fill'],\n\t                'stroke-width': this.config.styles['input-focus-border-thickness'],\n\t                'stroke': this.config.styles['input-focus-border-color']\n\t              },\n\t              hover: {\n\t                'fill': this.config.styles['input-focus-fill'],\n\t                'stroke-width': this.config.styles['input-focus-border-thickness'],\n\t                'stroke': this.config.styles['input-focus-border-color']\n\t              }\n\t            }\n\t          },\n\t          enabled: {\n\t            config: {\n\t              pressed: {\n\t                'fill': this.config.styles['input-fill'],\n\t                'stroke-width': this.config.styles['input-border-thickness'],\n\t                'stroke': this.config.styles['input-border-color']\n\t              },\n\t              normal: {\n\t                'fill': this.config.styles['input-fill'],\n\t                'stroke-width': this.config.styles['input-border-thickness'],\n\t                'stroke': this.config.styles['input-border-color']\n\t              },\n\t              hover: {\n\t                'fill': this.config.styles['input-fill'],\n\t                'stroke-width': this.config.styles['input-border-thickness'],\n\t                'stroke': this.config.styles['input-border-color']\n\t              }\n\t            }\n\t          }\n\t        });\n\t\n\t        self.toDate = new this.toolbox.InputTextBoxSymbol({\n\t          width: this.config.styles['width'],\n\t          height: this.config.styles['height']\n\t        }, {\n\t          paper: this.graphics.paper,\n\t          chart: this.chart,\n\t          smartLabel: this.smartLabel,\n\t          chartContainer: this.graphics.container\n\t        }, {\n\t          'strokeWidth': this.config.styles['input-border-thickness'],\n\t          'fill': this.config.styles['input-fill'],\n\t          'stroke': this.config.styles['input-border-color'],\n\t          'radius': this.config.styles['input-border-radius'],\n\t          'btnTextStyle': {\n\t            'font-family': this.config.styles['font-family'],\n\t            'fontSize': this.config.styles['font-size']\n\t          },\n\t          'shadow': {\n\t            'fill': this.config.styles['input-shadow-fill'],\n\t            'opacity': this.config.styles['input-shadow-opacity']\n\t          },\n\t          'label': toFormattedDate,\n\t          'labelFill': this.config.styles['font-color']\n\t        });\n\t\n\t        self.toDate.addCustomState('errored', {\n\t          config: {\n\t            hover: {\n\t              'fill': this.config.styles['input-error-fill'],\n\t              'stroke-width': this.config.styles['input-error-border-thickness'],\n\t              'stroke': this.config.styles['input-error-border-color']\n\t            },\n\t            normal: {\n\t              'fill': this.config.styles['input-error-fill'],\n\t              'stroke-width': this.config.styles['input-error-border-thickness'],\n\t              'stroke': this.config.styles['input-error-border-color']\n\t            },\n\t            pressed: {\n\t              'fill': this.config.styles['input-error-fill'],\n\t              'stroke-width': this.config.styles['input-error-border-thickness'],\n\t              'stroke': this.config.styles['input-error-border-color']\n\t            }\n\t          }\n\t        });\n\t\n\t        self.toDate.setStateConfig({\n\t          pressed: {\n\t            config: {\n\t              pressed: {\n\t                'fill': this.config.styles['input-focus-fill'],\n\t                'stroke-width': this.config.styles['input-focus-border-thickness'],\n\t                'stroke': this.config.styles['input-focus-border-color']\n\t              },\n\t              normal: {\n\t                'fill': this.config.styles['input-focus-fill'],\n\t                'stroke-width': this.config.styles['input-focus-border-thickness'],\n\t                'stroke': this.config.styles['input-focus-border-color']\n\t              },\n\t              hover: {\n\t                'fill': this.config.styles['input-focus-fill'],\n\t                'stroke-width': this.config.styles['input-focus-border-thickness'],\n\t                'stroke': this.config.styles['input-focus-border-color']\n\t              }\n\t            },\n\t            enabled: {\n\t              config: {\n\t                pressed: {\n\t                  'fill': this.config.styles['input-fill'],\n\t                  'stroke-width': this.config.styles['input-border-thickness'],\n\t                  'stroke': this.config.styles['input-border-color']\n\t                },\n\t                normal: {\n\t                  'fill': this.config.styles['input-fill'],\n\t                  'stroke-width': this.config.styles['input-border-thickness'],\n\t                  'stroke': this.config.styles['input-border-color']\n\t                },\n\t                hover: {\n\t                  'fill': this.config.styles['input-fill'],\n\t                  'stroke-width': this.config.styles['input-border-thickness'],\n\t                  'stroke': this.config.styles['input-border-color']\n\t                }\n\t              }\n\t            }\n\t          }\n\t        });\n\t\n\t        self.fromDate.attachEventHandlers({\n\t          click: {\n\t            fn: function fn() {\n\t              self.fromDate.edit();\n\t              self.fromDate.updateVisual('pressed');\n\t            }\n\t          },\n\t          keypress: function keypress(e) {\n\t            var event = e || window.event,\n\t                charCode = event.which || event.keyCode;\n\t            if (charCode === 13) {\n\t              self.fromDate.blur();\n\t              self.startDate = self.fromDate.getText();\n\t              if (self.fromDate.state !== 'errored') {\n\t                self.fromDate.updateVisual('enabled');\n\t              }\n\t            }\n\t          },\n\t          textOnBlur: function textOnBlur() {\n\t            self.fromDate.blur();\n\t            self.startDate = self.fromDate.getText();\n\t            if (self.fromDate.state !== 'errored') {\n\t              self.fromDate.updateVisual('enabled');\n\t            }\n\t          }\n\t        });\n\t\n\t        self.toDate.attachEventHandlers({\n\t          click: {\n\t            fn: function fn() {\n\t              self.toDate.edit();\n\t              self.toDate.updateVisual('pressed');\n\t            }\n\t          },\n\t          keypress: function keypress(e) {\n\t            var event = e || window.event,\n\t                charCode = event.which || event.keyCode;\n\t            if (charCode === 13) {\n\t              self.toDate.blur();\n\t              self.endDate = self.toDate.getText();\n\t              if (self.toDate.state !== 'errored') {\n\t                self.toDate.updateVisual('enabled');\n\t              }\n\t            }\n\t          },\n\t          textOnBlur: function textOnBlur() {\n\t            self.toDate.blur();\n\t            self.endDate = self.toDate.getText();\n\t            if (self.toDate.state !== 'errored') {\n\t              self.toDate.updateVisual('enabled');\n\t            }\n\t          }\n\t        });\n\t\n\t        // Temporary. Required to render the text box correctly. Commenting this out distorts toolbox.\n\t        this.SymbolStore.register('textBoxIcon', function (x, y, rad, w, h, padX, padY) {\n\t          var x1 = x - w / 2 + padX / 2,\n\t              x2 = x + w / 2 - padX / 2,\n\t              y1 = y - h / 2 + padY / 2,\n\t              y2 = y + h / 2 - padY / 2;\n\t\n\t          return ['M', x1, y1, 'L', x2, y1, 'L', x2, y2, 'L', x1, y2, 'Z'];\n\t        });\n\t\n\t        group.addSymbol(fromDateLabel);\n\t        group.addSymbol(self.fromDate);\n\t        group.addSymbol(toDateLabel);\n\t        group.addSymbol(self.toDate);\n\t        toolbar.addComponent(group);\n\t        return toolbar;\n\t      }\n\t    }, {\n\t      key: 'getLogicalSpace',\n\t      value: function getLogicalSpace(availableWidth, availableHeight) {\n\t        var logicalSpace,\n\t            width = 0,\n\t            height = 0,\n\t            i,\n\t            ln;\n\t\n\t        availableWidth /= 2;\n\t\n\t        for (i = 0, ln = this.toolbars.length; i < ln; i++) {\n\t          logicalSpace = this.toolbars[i].getLogicalSpace(availableWidth, availableHeight);\n\t          width = Math.max(logicalSpace.width, width);\n\t          height += logicalSpace.height;\n\t          this.toolbars[i].width = logicalSpace.width;\n\t          this.toolbars[i].height = logicalSpace.height;\n\t        }\n\t        height += this.padding;\n\t        return {\n\t          width: width,\n\t          height: height\n\t        };\n\t      }\n\t    }, {\n\t      key: 'placeInCanvas',\n\t      value: function placeInCanvas() {\n\t        var _self = this;\n\t        _self.padding = 5;\n\t        _self.spaceManagerInstance.add([{\n\t          name: function name() {\n\t            return 'DateRangeChooserToolbox';\n\t          },\n\t          ref: function ref(obj) {\n\t            return obj['0'];\n\t          },\n\t          self: function self() {\n\t            return _self;\n\t          },\n\t          priority: function priority() {\n\t            return 2;\n\t          },\n\t          layout: function layout(obj) {\n\t            return obj[_self.config.layout];\n\t          },\n\t          orientation: [{\n\t            type: function type(obj) {\n\t              return obj[_self.config.orientation];\n\t            },\n\t            position: [{\n\t              type: function type(obj) {\n\t                return obj[_self.config.position];\n\t              },\n\t              alignment: [{\n\t                type: function type(obj) {\n\t                  return obj[_self.config.alignment];\n\t                },\n\t                dimensions: [function () {\n\t                  var parent = this.getParentComponentGroup();\n\t                  return _self.getLogicalSpace(parent.getWidth(), parent.getHeight());\n\t                }]\n\t              }]\n\t            }]\n\t          }]\n\t        }]);\n\t      }\n\t    }, {\n\t      key: 'setDrawingConfiguration',\n\t      value: function setDrawingConfiguration(x, y, width, height, group) {\n\t        var mes = this.measurement;\n\t        mes.x = x;\n\t        mes.y = y;\n\t        mes.width = width;\n\t        mes.height = height;\n\t\n\t        this.parentGroup = group;\n\t\n\t        return this;\n\t      }\n\t    }, {\n\t      key: 'draw',\n\t      value: function draw(x, y, width, height, group) {\n\t        var self = this,\n\t            measurement = self.measurement,\n\t            toolbars = self.toolbars,\n\t            ln = void 0,\n\t            i = void 0,\n\t            toolbar = void 0,\n\t            model = self.globalReactiveModel;\n\t\n\t        x = x === undefined ? measurement.x : x;\n\t        y = y === undefined ? measurement.y : y;\n\t        width = width === undefined ? measurement.width : width;\n\t        height = height === undefined ? measurement.height : height;\n\t        group = group === undefined ? self.parentGroup : group;\n\t        if (width && height) {\n\t          self.isDrawn = true;\n\t          for (i = 0, ln = toolbars.length; i < ln; i++) {\n\t            toolbar = toolbars[i];\n\t            toolbar.draw(x, y, group);\n\t          }\n\t          model.onPropsChange(['x-axis-visible-range-start', 'x-axis-visible-range-end'], function (start, end) {\n\t            // self.fromDate.blur(new Date(start[1]).toLocaleDateString());\n\t            // self.toDate.blur(new Date(end[1]).toLocaleDateString());\n\t            self.startDt = start[1];\n\t            self.fromDate.blur(self.getDate(start[1]));\n\t            self.fromDate.updateVisual('enabled');\n\t            self.endDt = end[1];\n\t            self.toDate.blur(self.getDate(end[1]));\n\t            self.fromDate.updateVisual('enabled');\n\t          });\n\t        }\n\t        self.startDataset = self.globalReactiveModel.model['x-axis-absolute-range-start'];\n\t        self.endDataset = self.globalReactiveModel.model['x-axis-absolute-range-end'];\n\t        self.maxXAxisTicks = self.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n\t        self.maxXAxisTicks = self.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n\t        self.minDatestampDiff = self.globalReactiveModel.model['minimum-consecutive-datestamp-diff'];\n\t        self.minActiveInterval = self.maxXAxisTicks * self.minDatestampDiff;\n\t      }\n\t    }, {\n\t      key: 'startDate',\n\t      get: function get() {\n\t        return this.startDt;\n\t      },\n\t      set: function set(startDt) {\n\t        var startTimestamp = this.getTimestamp(startDt),\n\t            absoluteStart = this.globalReactiveModel.model['x-axis-absolute-range-start'],\n\t            minDiff = this.minActiveInterval,\n\t            actualDiff = this.endDt - startTimestamp;\n\t        if (startTimestamp <= this.endDt && startTimestamp >= absoluteStart && actualDiff > minDiff) {\n\t          this.startDt = startTimestamp;\n\t          this.globalReactiveModel.model['x-axis-visible-range-start'] = this.startDt;\n\t        } else {\n\t          this.fromDate.updateVisual('errored');\n\t        }\n\t      }\n\t    }, {\n\t      key: 'endDate',\n\t      get: function get() {\n\t        return this.endDt;\n\t      },\n\t      set: function set(endDt) {\n\t        var endTimestamp = this.getTimestamp(endDt),\n\t            absoluteEnd = this.globalReactiveModel.model['x-axis-absolute-range-end'],\n\t            minDiff = this.minActiveInterval,\n\t            actualDiff = endTimestamp - this.startDt;\n\t        if (endTimestamp >= this.startDt && endTimestamp <= absoluteEnd && actualDiff > minDiff) {\n\t          this.endDt = endTimestamp;\n\t          this.globalReactiveModel.model['x-axis-visible-range-end'] = this.endDt;\n\t        } else {\n\t          this.toDate.updateVisual('errored');\n\t        }\n\t      }\n\t    }]);\n\t\n\t    return DateRange;\n\t  }();\n\t\n\t  return DateRange;\n\t};\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// date-range-chooser-es5.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4c142aecca0aa0391874","'use strict';\nconst DateRange = require('./fcts-ext-daterange');\n\nwindow.dr = new DateRange();\n\n;(function (env, factory) {\n  if (typeof module === 'object' && module.exports) {\n    module.exports = env.document\n       ? factory(env) : function (win) {\n         if (!win.document) {\n           throw new Error('Window with document not present');\n         }\n         return factory(win, true);\n       };\n  } else {\n    env.DateRangeChooser = factory(env, true);\n  }\n})(typeof window !== 'undefined' ? window : this, function (_window, windowExists) {\n  var FC = _window.FusionCharts;\n  FC.register('extension', ['private', 'date-range-chooser', function () {\n    var DateTimeFormatter = this.hcLib.DateTimeFormatter;\n    FC.registerComponent('extensions', 'date-range-chooser', DateRange({FusionCharts: FC,\n      DateTimeFormatter: DateTimeFormatter}));\n  }]);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 1\n// module chunks = 0","'use strict';\nmodule.exports = function (dep) {\n  /**\n   * Class representing the DateRange.\n   */\n  class DateRange {\n    constructor () {\n      /**\n       * @private\n       */\n      this.startDt = 0;\n      this.endDt = 0;\n      this.startDataset = 0;\n      this.endDataset = 0;\n      this.toolbox = dep.FusionCharts.getComponent('api', 'toolbox');\n      this.DateTimeFormatter = dep.DateTimeFormatter;\n      this.HorizontalToolbar = this.toolbox.HorizontalToolbar;\n      this.ComponentGroup = this.toolbox.ComponentGroup;\n      this.SymbolStore = this.toolbox.SymbolStore;\n      this.isDrawn = false;\n    }\n\n    /**\n     * An object representing the start and end dates.\n     * @type {DateRange.range}\n     */\n    get startDate () {\n      return this.startDt;\n    }\n\n    set startDate (startDt) {\n      let startTimestamp = this.getTimestamp(startDt),\n        absoluteStart = this.globalReactiveModel.model['x-axis-absolute-range-start'],\n        minDiff = this.minActiveInterval,\n        actualDiff = this.endDt - startTimestamp;\n      if (startTimestamp <= this.endDt && startTimestamp >= absoluteStart && actualDiff > minDiff) {\n        this.startDt = startTimestamp;\n        this.globalReactiveModel.model['x-axis-visible-range-start'] = this.startDt;\n      } else {\n        this.fromDate.updateVisual('errored');\n      }\n    }\n\n    get endDate () {\n      return this.endDt;\n    }\n\n    set endDate (endDt) {\n      let endTimestamp = this.getTimestamp(endDt),\n        absoluteEnd = this.globalReactiveModel.model['x-axis-absolute-range-end'],\n        minDiff = this.minActiveInterval,\n        actualDiff = endTimestamp - this.startDt;\n      if (endTimestamp >= this.startDt && endTimestamp <= absoluteEnd && actualDiff > minDiff) {\n        this.endDt = endTimestamp;\n        this.globalReactiveModel.model['x-axis-visible-range-end'] = this.endDt;\n      } else {\n        this.toDate.updateVisual('errored');\n      }\n    }\n\n    getTimestamp (dateStr) {\n      let dateFormat = this.config.dateFormat,\n        dateFormatter = new dep.DateTimeFormatter(dateFormat);\n      return +dateFormatter.getNativeDate(dateStr);\n    }\n\n    getDate (timestamp) {\n      var dateFormat = this.config.dateFormat;\n      return this.DateTimeFormatter.formatAs(timestamp, dateFormat);\n    }\n\n    /**\n     * Sets the configurable options of the extension (e.g. cosmetics)\n     * @param {Object} configObj The configuration object containing various extension options\n     */\n    setConfig (configObj) {}\n\n    /**\n     * Gets the configurable options of the extension (e.g. cosmetics)\n     * @return {object} configObj The configuration object containing various extension options\n     */\n    getConfig () {\n      return {\n        calendarVisible: 'false'\n      };\n    }\n\n    createExtData (extData) {\n      let config = {};\n      config.disabled = extData.disabled || 'false';\n      config.layout = extData.layout || 'inline';\n      config.orientation = extData.orientation || 'horizontal';\n      config.position = extData.position || 'top';\n      config.alignment = extData.alignment || 'right';\n      config.dateFormat = extData.dateFormat || '%d-%m-%Y';\n      config.fromText = extData.fromText || 'From:';\n      config.toText = extData.toText || 'To:';\n      config.styles = extData.styles || {\n        'width': 120,\n        'height': 22,\n\n        'font-family': '\"Lucida Grande\", sans-serif',\n        'font-size': 13,\n        'font-color': '#4B4B4B',\n\n        'input-fill': '#FFFFFF',\n        'input-border-thickness': 1,\n        'input-border-color': '#CED5D4',\n        'input-border-radius': 1,\n        'input-shadow-fill': '#000000',\n        'input-shadow-opacity': 0.35,\n\n        'input-focus-fill': '#FFFFFF',\n        'input-focus-border-thickness': 1,\n        'input-focus-border-color': '#1E1F1F',\n\n        'input-error-fill': '#FFEFEF',\n        'input-error-border-thickness': 1,\n        'input-error-border-color': '#D25353'\n      };\n      return config;\n    }\n\n    /**\n     * Fusioncharts life cycle method for extension\n     */\n    init (require) {\n      var instance = this;\n      require([\n        'xAxis',\n        'graphics',\n        'chart',\n        'dataset',\n        'globalReactiveModel',\n        'spaceManagerInstance',\n        'extData',\n        'smartLabel',\n        'chartInstance',\n        function (\n          xAxis,\n          graphics,\n          chart,\n          dataset,\n          globalReactiveModel,\n          spaceManagerInstance,\n          extData,\n          smartLabel,\n          chartInstance) {\n          instance.xAxis = xAxis;\n          instance.graphics = graphics;\n          instance.chart = chart;\n          instance.dataset = dataset;\n          instance.globalReactiveModel = globalReactiveModel;\n          instance.spaceManagerInstance = spaceManagerInstance;\n          instance.config = instance.createExtData(extData);\n          instance.smartLabel = smartLabel;\n          instance.chartInstance = chartInstance;\n        }\n      ]);\n      instance.startDt = instance.globalReactiveModel.model['x-axis-visible-range-start'];\n      instance.endDt = instance.globalReactiveModel.model['x-axis-visible-range-end'];\n      instance.toolbars = [];\n      instance.measurement = {};\n      instance.toolbars.push(instance.createToolbar());\n      return instance;\n    };\n\n    createToolbar () {\n      var toolbar,\n        self = this,\n        fromDateLabel,\n        toDateLabel,\n        group,\n        fromFormattedDate,\n        toFormattedDate;\n\n      self.fromDate = {};\n      self.toDate = {};\n\n      fromFormattedDate = this.getDate(this.startDt);\n      toFormattedDate = this.getDate(this.endDt);\n      toolbar = new this.HorizontalToolbar({\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      });\n\n      toolbar.setConfig({\n        'fill': '#FFFFFF',\n        'borderThickness': 0\n      });\n\n      group = new this.toolbox.ComponentGroup({\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      });\n\n      group.setConfig({\n        'fill': '#FFFFFF',\n        'borderThickness': 0\n      });\n\n      fromDateLabel = new this.toolbox.Label(\n        this.config['fromText'], {\n          smartLabel: this.smartLabel,\n          paper: this.graphics.paper\n        }, {\n          text: {\n            style: {\n              'font-size': this.config.styles['font-size'],\n              'font-family': this.config.styles['font-family'],\n              'fill': this.config.styles['font-color']\n            }\n          }\n        }\n      );\n\n      toDateLabel = new this.toolbox.Label(\n        this.config['toText'], {\n          smartLabel: this.smartLabel,\n          paper: this.graphics.paper\n        }, {\n          text: {\n            style: {\n              'font-size': this.config.styles['font-size'],\n              'font-family': this.config.styles['font-family'],\n              'fill': this.config.styles['font-color']\n            }\n          }\n        }\n      );\n\n      self.fromDate = new this.toolbox.InputTextBoxSymbol({\n        width: this.config.styles['width'],\n        height: this.config.styles['height']\n      }, {\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      }, {\n        'strokeWidth': this.config.styles['input-border-thickness'],\n        'fill': this.config.styles['input-fill'],\n        'stroke': this.config.styles['input-border-color'],\n        'radius': this.config.styles['input-border-radius'],\n        'btnTextStyle': {\n          'font-family': this.config.styles['font-family'],\n          'fontSize': this.config.styles['font-size']\n        },\n        'shadow': {\n          'fill': this.config.styles['input-shadow-fill'],\n          'opacity': this.config.styles['input-shadow-opacity']\n        },\n        'label': fromFormattedDate,\n        'labelFill': this.config.styles['font-color']\n      });\n\n      self.fromDate.addCustomState('errored', {\n        config: {\n          hover: {\n            'fill': this.config.styles['input-error-fill'],\n            'stroke-width': this.config.styles['input-error-border-thickness'],\n            'stroke': this.config.styles['input-error-border-color']\n          },\n          normal: {\n            'fill': this.config.styles['input-error-fill'],\n            'stroke-width': this.config.styles['input-error-border-thickness'],\n            'stroke': this.config.styles['input-error-border-color']\n          },\n          pressed: {\n            'fill': this.config.styles['input-error-fill'],\n            'stroke-width': this.config.styles['input-error-border-thickness'],\n            'stroke': this.config.styles['input-error-border-color']\n          }\n        }\n      });\n\n      self.fromDate.setStateConfig({\n        pressed: {\n          config: {\n            pressed: {\n              'fill': this.config.styles['input-focus-fill'],\n              'stroke-width': this.config.styles['input-focus-border-thickness'],\n              'stroke': this.config.styles['input-focus-border-color']\n            },\n            normal: {\n              'fill': this.config.styles['input-focus-fill'],\n              'stroke-width': this.config.styles['input-focus-border-thickness'],\n              'stroke': this.config.styles['input-focus-border-color']\n            },\n            hover: {\n              'fill': this.config.styles['input-focus-fill'],\n              'stroke-width': this.config.styles['input-focus-border-thickness'],\n              'stroke': this.config.styles['input-focus-border-color']\n            }\n          }\n        },\n        enabled: {\n          config: {\n            pressed: {\n              'fill': this.config.styles['input-fill'],\n              'stroke-width': this.config.styles['input-border-thickness'],\n              'stroke': this.config.styles['input-border-color']\n            },\n            normal: {\n              'fill': this.config.styles['input-fill'],\n              'stroke-width': this.config.styles['input-border-thickness'],\n              'stroke': this.config.styles['input-border-color']\n            },\n            hover: {\n              'fill': this.config.styles['input-fill'],\n              'stroke-width': this.config.styles['input-border-thickness'],\n              'stroke': this.config.styles['input-border-color']\n            }\n          }\n        }\n      });\n\n      self.toDate = new this.toolbox.InputTextBoxSymbol({\n        width: this.config.styles['width'],\n        height: this.config.styles['height']\n      }, {\n        paper: this.graphics.paper,\n        chart: this.chart,\n        smartLabel: this.smartLabel,\n        chartContainer: this.graphics.container\n      }, {\n        'strokeWidth': this.config.styles['input-border-thickness'],\n        'fill': this.config.styles['input-fill'],\n        'stroke': this.config.styles['input-border-color'],\n        'radius': this.config.styles['input-border-radius'],\n        'btnTextStyle': {\n          'font-family': this.config.styles['font-family'],\n          'fontSize': this.config.styles['font-size']\n        },\n        'shadow': {\n          'fill': this.config.styles['input-shadow-fill'],\n          'opacity': this.config.styles['input-shadow-opacity']\n        },\n        'label': toFormattedDate,\n        'labelFill': this.config.styles['font-color']\n      });\n\n      self.toDate.addCustomState('errored', {\n        config: {\n          hover: {\n            'fill': this.config.styles['input-error-fill'],\n            'stroke-width': this.config.styles['input-error-border-thickness'],\n            'stroke': this.config.styles['input-error-border-color']\n          },\n          normal: {\n            'fill': this.config.styles['input-error-fill'],\n            'stroke-width': this.config.styles['input-error-border-thickness'],\n            'stroke': this.config.styles['input-error-border-color']\n          },\n          pressed: {\n            'fill': this.config.styles['input-error-fill'],\n            'stroke-width': this.config.styles['input-error-border-thickness'],\n            'stroke': this.config.styles['input-error-border-color']\n          }\n        }\n      });\n\n      self.toDate.setStateConfig({\n        pressed: {\n          config: {\n            pressed: {\n              'fill': this.config.styles['input-focus-fill'],\n              'stroke-width': this.config.styles['input-focus-border-thickness'],\n              'stroke': this.config.styles['input-focus-border-color']\n            },\n            normal: {\n              'fill': this.config.styles['input-focus-fill'],\n              'stroke-width': this.config.styles['input-focus-border-thickness'],\n              'stroke': this.config.styles['input-focus-border-color']\n            },\n            hover: {\n              'fill': this.config.styles['input-focus-fill'],\n              'stroke-width': this.config.styles['input-focus-border-thickness'],\n              'stroke': this.config.styles['input-focus-border-color']\n            }\n          },\n          enabled: {\n            config: {\n              pressed: {\n                'fill': this.config.styles['input-fill'],\n                'stroke-width': this.config.styles['input-border-thickness'],\n                'stroke': this.config.styles['input-border-color']\n              },\n              normal: {\n                'fill': this.config.styles['input-fill'],\n                'stroke-width': this.config.styles['input-border-thickness'],\n                'stroke': this.config.styles['input-border-color']\n              },\n              hover: {\n                'fill': this.config.styles['input-fill'],\n                'stroke-width': this.config.styles['input-border-thickness'],\n                'stroke': this.config.styles['input-border-color']\n              }\n            }\n          }\n        }\n      });\n\n      self.fromDate.attachEventHandlers({\n        click: {\n          fn: () => {\n            self.fromDate.edit();\n            self.fromDate.updateVisual('pressed');\n          }\n        },\n        keypress: (e) => {\n          let event = e || window.event,\n            charCode = event.which || event.keyCode;\n          if (charCode === 13) {\n            self.fromDate.blur();\n            self.startDate = self.fromDate.getText();\n            if (self.fromDate.state !== 'errored') {\n              self.fromDate.updateVisual('enabled');\n            }\n          }\n        },\n        textOnBlur: function () {\n          self.fromDate.blur();\n          self.startDate = self.fromDate.getText();\n          if (self.fromDate.state !== 'errored') {\n            self.fromDate.updateVisual('enabled');\n          }\n        }\n      });\n\n      self.toDate.attachEventHandlers({\n        click: {\n          fn: () => {\n            self.toDate.edit();\n            self.toDate.updateVisual('pressed');\n          }\n        },\n        keypress: (e) => {\n          let event = e || window.event,\n            charCode = event.which || event.keyCode;\n          if (charCode === 13) {\n            self.toDate.blur();\n            self.endDate = self.toDate.getText();\n            if (self.toDate.state !== 'errored') {\n              self.toDate.updateVisual('enabled');\n            }\n          }\n        },\n        textOnBlur: function () {\n          self.toDate.blur();\n          self.endDate = self.toDate.getText();\n          if (self.toDate.state !== 'errored') {\n            self.toDate.updateVisual('enabled');\n          }\n        }\n      });\n\n      // Temporary. Required to render the text box correctly. Commenting this out distorts toolbox.\n      this.SymbolStore.register('textBoxIcon', function (x, y, rad, w, h, padX, padY) {\n        var x1 = x - w / 2 + padX / 2,\n          x2 = x + w / 2 - padX / 2,\n          y1 = y - h / 2 + padY / 2,\n          y2 = y + h / 2 - padY / 2;\n\n        return ['M', x1, y1, 'L', x2, y1, 'L', x2, y2, 'L', x1, y2, 'Z'];\n      });\n\n      group.addSymbol(fromDateLabel);\n      group.addSymbol(self.fromDate);\n      group.addSymbol(toDateLabel);\n      group.addSymbol(self.toDate);\n      toolbar.addComponent(group);\n      return toolbar;\n    };\n\n    getLogicalSpace (availableWidth, availableHeight) {\n      var logicalSpace,\n        width = 0,\n        height = 0,\n        i,\n        ln;\n\n      availableWidth /= 2;\n\n      for (i = 0, ln = this.toolbars.length; i < ln; i++) {\n        logicalSpace = this.toolbars[i].getLogicalSpace(availableWidth, availableHeight);\n        width = Math.max(logicalSpace.width, width);\n        height += logicalSpace.height;\n        this.toolbars[i].width = logicalSpace.width;\n        this.toolbars[i].height = logicalSpace.height;\n      }\n      height += this.padding;\n      return {\n        width: width,\n        height: height\n      };\n    };\n\n    placeInCanvas () {\n      var self = this;\n      self.padding = 5;\n      self.spaceManagerInstance.add([{\n        name: function () {\n          return 'DateRangeChooserToolbox';\n        },\n        ref: function (obj) {\n          return obj['0'];\n        },\n        self: function () {\n          return self;\n        },\n        priority: function () {\n          return 2;\n        },\n        layout: function (obj) {\n          return obj[self.config.layout];\n        },\n        orientation: [{\n          type: function (obj) {\n            return obj[self.config.orientation];\n          },\n          position: [{\n            type: function (obj) {\n              return obj[self.config.position];\n            },\n            alignment: [{\n              type: function (obj) {\n                return obj[self.config.alignment];\n              },\n              dimensions: [function () {\n                var parent = this.getParentComponentGroup();\n                return self.getLogicalSpace(parent.getWidth(), parent.getHeight());\n              }]\n            }]\n          }]\n        }]\n      }]);\n    };\n\n    setDrawingConfiguration (x, y, width, height, group) {\n      var mes = this.measurement;\n      mes.x = x;\n      mes.y = y;\n      mes.width = width;\n      mes.height = height;\n\n      this.parentGroup = group;\n\n      return this;\n    };\n\n    draw (x, y, width, height, group) {\n      let self = this,\n        measurement = self.measurement,\n        toolbars = self.toolbars,\n        ln,\n        i,\n        toolbar,\n        model = self.globalReactiveModel;\n\n      x = x === undefined ? measurement.x : x;\n      y = y === undefined ? measurement.y : y;\n      width = width === undefined ? measurement.width : width;\n      height = height === undefined ? measurement.height : height;\n      group = group === undefined ? self.parentGroup : group;\n      if (width && height) {\n        self.isDrawn = true;\n        for (i = 0, ln = toolbars.length; i < ln; i++) {\n          toolbar = toolbars[i];\n          toolbar.draw(x, y, group);\n        }\n        model.onPropsChange(['x-axis-visible-range-start', 'x-axis-visible-range-end'],\n          (start, end) => {\n            // self.fromDate.blur(new Date(start[1]).toLocaleDateString());\n            // self.toDate.blur(new Date(end[1]).toLocaleDateString());\n            self.startDt = start[1];\n            self.fromDate.blur(self.getDate(start[1]));\n            self.fromDate.updateVisual('enabled');\n            self.endDt = end[1];\n            self.toDate.blur(self.getDate(end[1]));\n            self.fromDate.updateVisual('enabled');\n          }\n        );\n      }\n      self.startDataset = self.globalReactiveModel.model['x-axis-absolute-range-start'];\n      self.endDataset = self.globalReactiveModel.model['x-axis-absolute-range-end'];\n      self.maxXAxisTicks = self.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n      self.maxXAxisTicks = self.globalReactiveModel.model['x-axis-maximum-allowed-ticks'];\n      self.minDatestampDiff = self.globalReactiveModel.model['minimum-consecutive-datestamp-diff'];\n      self.minActiveInterval = self.maxXAxisTicks * self.minDatestampDiff;\n    };\n  }\n  return DateRange;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fcts-ext-daterange.js"],"sourceRoot":""}