{"version":3,"sources":["webpack:///expander-collapser-es5.min.js","webpack:///webpack/bootstrap fd45ac663ed19a4ce95d","webpack:///./src/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/fcts-ext-expandercollapser.js","webpack:///./src/fcts-ext-sidepanel.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_typeof","Symbol","iterator","obj","constructor","prototype","DateRange","SidePanel","env","factory","document","win","Error","DateRangeChooser","window","undefined","_window","windowExists","FC","FusionCharts","FusionCalendar","register","DateTimeFormatter","this","hcLib","registerComponent","webpackPolyfill","deprecate","paths","children","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","dep","toolbox","getComponent","btns","contextualObj","calculatedObj","HorizontalToolbar","ComponentGroup","createObjectAssign","value","assign","varArgs","to","index","arguments","nextSource","nextKey","hasOwnProperty","buttonConf","text","config","states","state","button","styles","extData","paper","graphics","d3","getInstances","self","setConfig","namespace","appendSelector","addCssRules","getIndividualClassNames","getClassName","eventListeners","attachEventHandlers","click","bind","label","dependencies","chart","smartLabel","chartContainer","container","Label","require","canvasConfig","markerManager","reactiveModel","globalReactiveModel","spaceManagerInstance","chartInstance","extDataUser","disabled","default-select","all-button","contextual-button","calculated-button","posWrtCanvas","anchor-align","layout","position","alignment","orientation","customMultipliers","millisecond","second","minute","hour","day","month","year","padding","height","radius","className","style","fill","stroke-width","stroke","labelFill","strokeWidth","fontFamily","font-size","line-height","letter-spacing","hover","cursor","font-weight","font-family","measurement","toolbar","createToolbar","count","group","borderThickness","componentArr","push","createD3Label","priority","name","getModuleName","createD3Button","margin","right","left","expandButton","previousWidth","fullview","maxSpace","diff","width","console","log","cacheByName","adjustWidth","logicalSpace","getLogicalSpace","addComponent","classNames","cssAddRule","symbolArr","len","addSymbol","availableWidth","availableHeight","minSpace","minArr","buttons","emptyList","addSymbols","max","min","add","ref","type","dimensions","parent","getParentComponentGroup","getWidth","getHeight","x","y","mes","parentGroup","component","btn","totalWidth","arr","tPad","hSpace","pop","list","getDrawableComponentList","draw","KPIIndicator","showKPI","tsInstance","resizeTo","block","vertical","middle","getSidePanelSpace","drawPanel","hidePanel","createDIV","selection","cls","styleObj","str","join","child","selectAll","data","enter","append","merge","attr","html","childStyle","headStyleObj","head","select","j","len1","remove"],"mappings":"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","file":"expander-collapser-es5.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar DateRange = __webpack_require__(2);\n\tvar SidePanel = __webpack_require__(3);\n\t;(function (env, factory) {\n\t  if (( false ? 'undefined' : _typeof(module)) === 'object' && module.exports) {\n\t    module.exports = env.document ? factory(env) : function (win) {\n\t      if (!win.document) {\n\t        throw new Error('Window with document not present');\n\t      }\n\t      return factory(win, true);\n\t    };\n\t  } else {\n\t    env.DateRangeChooser = factory(env, true);\n\t  }\n\t})(typeof window !== 'undefined' ? window : undefined, function (_window, windowExists) {\n\t  var FC = _window.FusionCharts,\n\t      FusionCalendar = _window.FusionCalendar;\n\t  FC.register('extension', ['private', 'expander-collapser', function () {\n\t    var DateTimeFormatter = this.hcLib.DateTimeFormatter;\n\t    FC.registerComponent('extensions', 'expander-collapser', DateRange({\n\t      FusionCharts: FC,\n\t      DateTimeFormatter: DateTimeFormatter\n\t    }));\n\t    FC.registerComponent('extensions', 'expander-collapser2', DateRange({\n\t      FusionCharts: FC,\n\t      DateTimeFormatter: DateTimeFormatter\n\t    }));\n\t\n\t    FC.registerComponent('extensions', 'SidePanel', SidePanel({\n\t      FusionCharts: FC,\n\t      DateTimeFormatter: DateTimeFormatter\n\t    }));\n\t    // FC.registerComponent('extensions', 'expander-collapser3', DateRange({\n\t    //   FusionCharts: FC,\n\t    //   DateTimeFormatter: DateTimeFormatter\n\t    // }));\n\t    // FC.registerComponent('extensions', 'expander-collapser4', DateRange({\n\t    //   FusionCharts: FC,\n\t    //   DateTimeFormatter: DateTimeFormatter\n\t    // }));\n\t  }]);\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tmodule.exports = function (dep) {\n\t  /**\n\t   * Class representing the DateRange\n\t   */\n\t  var DateRange = function () {\n\t    function DateRange() {\n\t      _classCallCheck(this, DateRange);\n\t\n\t      /**\n\t      * @private\n\t      */\n\t      if (typeof dep.FusionCharts === 'function') {\n\t        this.toolbox = dep.FusionCharts.getComponent('api', 'toolbox');\n\t      } else {\n\t        throw new Error('Unable to find FusionCharts.');\n\t      }\n\t      this.btns = {\n\t        contextualObj: {},\n\t        calculatedObj: {}\n\t      };\n\t      this.HorizontalToolbar = this.toolbox.HorizontalToolbar;\n\t      this.ComponentGroup = this.toolbox.ComponentGroup;\n\t      this.createObjectAssign();\n\t    }\n\t\n\t    _createClass(DateRange, [{\n\t      key: 'createObjectAssign',\n\t      value: function createObjectAssign() {\n\t        if (typeof Object.assign !== 'function') {\n\t          Object.assign = function (target, varArgs) {\n\t            'use strict';\n\t\n\t            if (target == null) {\n\t              throw new TypeError('Cannot convert undefined or null to object');\n\t            }\n\t\n\t            var to = Object(target);\n\t\n\t            for (var index = 1; index < arguments.length; index++) {\n\t              var nextSource = arguments[index];\n\t\n\t              if (nextSource != null) {\n\t                for (var nextKey in nextSource) {\n\t                  // Avoid bugs when hasOwnProperty is shadowed\n\t                  if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n\t                    to[nextKey] = nextSource[nextKey];\n\t                  }\n\t                }\n\t              }\n\t            }\n\t            return to;\n\t          };\n\t        }\n\t      }\n\t    }, {\n\t      key: 'createD3Button',\n\t      value: function createD3Button(buttonConf) {\n\t        var key,\n\t            text,\n\t            config,\n\t            states,\n\t            state,\n\t            btn,\n\t            button,\n\t            styles = this.extData.button,\n\t            paper = this.graphics.paper,\n\t            d3 = paper.getInstances().d3,\n\t            self = this;\n\t\n\t        text = buttonConf.text;\n\t        config = buttonConf.config;\n\t\n\t        button = d3.button(text).setConfig(config);\n\t        button.namespace('fusioncharts');\n\t        button.appendSelector('standarperiodselector');\n\t        self.addCssRules(button.getIndividualClassNames(button.getClassName()), styles);\n\t        states = styles.states;\n\t        for (state in states) {\n\t          self.addCssRules(button.getIndividualClassNames(button.config.states[state]), styles.states[state]);\n\t        }\n\t\n\t        buttonConf.eventListeners && button.attachEventHandlers({\n\t          click: buttonConf.eventListeners.click.bind(button)\n\t        });\n\t        return button;\n\t      }\n\t    }, {\n\t      key: 'createD3Label',\n\t      value: function createD3Label(label) {\n\t        var key,\n\t            text,\n\t            config,\n\t            instance,\n\t            styles = this.extData.label,\n\t            self = this,\n\t            button,\n\t            dependencies = {\n\t          paper: self.graphics.paper,\n\t          chart: self.chart,\n\t          smartLabel: self.smartLabel,\n\t          chartContainer: self.graphics.container\n\t        };\n\t\n\t        text = label.text;\n\t        config = label.config;\n\t        instance = new self.toolbox.Label(text, dependencies, config);\n\t        // self[key].namespace('fusioncharts');\n\t        // self[key].appendSelector('daterange');\n\t        self.addCssRules(instance.getIndividualClassNames(instance.getClassName()), styles);\n\t        return instance;\n\t      }\n\t    }, {\n\t      key: 'init',\n\t\n\t\n\t      /**\n\t       * Fusioncharts life cycle method for extension\n\t       */\n\t      value: function init(require) {\n\t        var instance = this;\n\t        require(['graphics', 'chart', 'canvasConfig', 'MarkerManager', 'reactiveModel', 'globalReactiveModel', 'spaceManagerInstance', 'smartLabel', 'extData', 'chartInstance', function (graphics, chart, canvasConfig, markerManager, reactiveModel, globalReactiveModel, spaceManagerInstance, smartLabel, extData, chartInstance) {\n\t          instance.graphics = graphics;\n\t          instance.chart = chart;\n\t          instance.markerManager = markerManager;\n\t          instance.canvasConfig = canvasConfig;\n\t          instance.reactiveModel = reactiveModel;\n\t          instance.globalReactiveModel = globalReactiveModel;\n\t          instance.spaceManagerInstance = spaceManagerInstance;\n\t          instance.smartLabel = smartLabel;\n\t          instance.extDataUser = extData;\n\t          instance.chartInstance = chartInstance;\n\t        }]);\n\t        instance.extData = {\n\t          'disabled': false,\n\t          'default-select': 'ALL',\n\t          'all-button': true,\n\t          'contextual-button': true,\n\t          'calculated-button': true,\n\t          'posWrtCanvas': 'top',\n\t          'anchor-align': 'right',\n\t          'layout': 'inline',\n\t          'position': 'top',\n\t          'alignment': 'left',\n\t          'orientation': 'horizontal',\n\t          'customMultipliers': {\n\t            'millisecond': [1, 500],\n\t            'second': [1, 5, 15, 30],\n\t            'minute': [1, 5, 15, 30],\n\t            'hour': [1, 3, 6, 12],\n\t            'day': [1, 7, 15],\n\t            'month': [1, 3, 6],\n\t            'year': [1, 3, 5]\n\t          },\n\t          padding: 0,\n\t          button: {\n\t            height: 22,\n\t            radius: 1,\n\t            className: 'standard-period-selector',\n\t            container: {\n\t              style: {\n\t                fill: '#FFFFFF',\n\t                'stroke-width': '1px',\n\t                stroke: '#CED5D4',\n\t                labelFill: '#4b4b4b',\n\t                strokeWidth: '1px'\n\t                // 'input-shadow-fill': '#000000',\n\t                // 'input-shadow-opacity': 0.35,\n\t              }\n\t            },\n\t            text: {\n\t              style: {\n\t                'fontFamily': '\"Lucida Grande\", sans-serif',\n\t                'font-size': '13px',\n\t                'fill': '#4b4b4b',\n\t                'line-height': '1px',\n\t                'letter-spacing': '-0.04em'\n\t              }\n\t            },\n\t            states: {\n\t              hover: {\n\t                className: 'standard-period-selector-state-hover',\n\t                container: {\n\t                  style: {\n\t                    cursor: 'pointer',\n\t                    fill: '#f7f7f7'\n\t                  }\n\t                }\n\t              }\n\t            }\n\t          },\n\t          label: {\n\t            className: 'standard-period-selector-label',\n\t            text: {\n\t              style: {\n\t                'font-weight': 'bold',\n\t                'font-family': '\"Lucida Grande\", sans-serif',\n\t                'font-size': '13px',\n\t                'fill': '#4b4b4b'\n\t              }\n\t            },\n\t            container: {\n\t              height: 22\n\t            }\n\t          }\n\t        };\n\t\n\t        instance.config = instance.extData;\n\t        Object.assign(instance.extData, instance.extDataUser);\n\t        instance.measurement = {};\n\t        instance.toolbar = instance.createToolbar();\n\t        return instance;\n\t      }\n\t    }, {\n\t      key: 'createToolbar',\n\t\n\t\n\t      // creates toolbar\n\t      value: function createToolbar() {\n\t        if (!window.count) {\n\t          window.count = 0;\n\t        }\n\t        window.count += 1;\n\t\n\t        var self = this,\n\t            buttonGroup,\n\t            toolbar,\n\t            allButton,\n\t            label,\n\t            group,\n\t            dependencies = {\n\t          paper: self.graphics.paper,\n\t          chart: self.chart,\n\t          smartLabel: self.smartLabel,\n\t          chartContainer: self.graphics.container\n\t        },\n\t            obj = {\n\t          fill: '#fff',\n\t          borderThickness: 0\n\t        },\n\t            button;\n\t\n\t        // initiating the toolbar\n\t        toolbar = new self.HorizontalToolbar(dependencies);\n\t        toolbar.setConfig(obj);\n\t\n\t        // making group for the extension label\n\t        group = this.group = new self.toolbox.ComponentGroup(dependencies);\n\t\n\t        group.setConfig(obj);\n\t\n\t        // extension label\n\t        label = {\n\t          height: 22,\n\t          text: 'Zoom:',\n\t          group: group,\n\t          config: {\n\t            height: 22\n\t          }\n\t        };\n\t\n\t        self.componentArr = [];\n\t\n\t        self.componentArr.push({\n\t          instance: self.createD3Label(label),\n\t          priority: 1\n\t        });\n\t        var obj = {},\n\t            name = self.getModuleName();\n\t\n\t        for (var i = 0; i < 6; i++) {\n\t          button = {};\n\t          button.instance = self.createD3Button({\n\t            text: 'BUTTON' + i,\n\t            config: {\n\t              margin: {\n\t                right: 5,\n\t                left: 5\n\t              }\n\t            },\n\t            group: group\n\t          });\n\t          button.id = 'id';\n\t          button.priority = 2;\n\t          this.componentArr.push(button);\n\t        };\n\t\n\t        this.expandButton = {\n\t          instance: self.createD3Button({\n\t            text: '>>',\n\t            config: {\n\t              margin: {\n\t                right: 2,\n\t                left: 2\n\t              }\n\t            },\n\t            group: group,\n\t            eventListeners: {\n\t              click: function click() {\n\t                var fullview = self.fullview,\n\t                    previousWidth = self.previousWidth,\n\t                    maxSpace = self.maxSpace,\n\t                    diff = maxSpace.width - previousWidth;\n\t                console.log('diff', diff);\n\t                self.spaceManagerInstance.cacheByName(name).adjustWidth(diff);\n\t              }\n\t            }\n\t          })\n\t        };\n\t\n\t        this.expandButton.logicalSpace = button.instance.getLogicalSpace();\n\t        this.expandButton.priority = 0;\n\t\n\t        // self.createD3Buttons({\n\t        //   'expander': {\n\t        //     text: '>>',\n\t        //     config: {\n\t        //       margin: {\n\t        //         right: 2,\n\t        //         left: 2\n\t        //       }\n\t        //     },\n\t        //     group: group,\n\t        //     eventListeners: {\n\t        //       click: function () {\n\t        //         self.expand = !self.expand;\n\t        //         for (var key in self.btns) {\n\t        //           obj = self.btns[key];\n\t        //           /button/.test(key) && (self.expand ? obj.btn.hide() : obj.btn.show());\n\t        //         }\n\t        //         self.toolbar.redraw();\n\t        //       }\n\t        //     }\n\t        //   }\n\t        // });\n\t\n\t        // adding group and button group to toolbar\n\t        toolbar.addComponent(group);\n\t        self.toolbar = toolbar;\n\t        return toolbar;\n\t      }\n\t    }, {\n\t      key: 'addCssRules',\n\t      value: function addCssRules(classNames, styles) {\n\t        var key,\n\t            className,\n\t            paper = this.graphics.paper;\n\t        for (key in classNames) {\n\t          className = classNames[key];\n\t          switch (key) {\n\t            case 'container':\n\t              styles.container && paper.cssAddRule('.' + className, styles.container.style);\n\t              break;\n\t            case 'text':\n\t              styles.text && paper.cssAddRule('.' + className, styles.text.style);\n\t          }\n\t        }\n\t      }\n\t    }, {\n\t      key: 'addSymbols',\n\t      value: function addSymbols(symbolArr) {\n\t        var i,\n\t            len,\n\t            group = this.group;\n\t\n\t        for (i = 0, len = symbolArr.length; i < len; i++) {\n\t          group.addSymbol(symbolArr[i].instance);\n\t        }\n\t      }\n\t    }, {\n\t      key: 'getLogicalSpace',\n\t      value: function getLogicalSpace(availableWidth, availableHeight) {\n\t        var buttons = this.buttons,\n\t            minArr = [this.expandButton],\n\t            minSpace,\n\t            maxSpace;\n\t\n\t        this.group.emptyList();\n\t        this.addSymbols(minArr);\n\t        minSpace = this.toolbar.getLogicalSpace(availableWidth, availableHeight);\n\t        console.log('minWidth', minSpace.width);\n\t        this.group.emptyList();\n\t\n\t        this.addSymbols(this.componentArr);\n\t\n\t        this.maxSpace = maxSpace = this.toolbar.getLogicalSpace(availableWidth, availableHeight);\n\t\n\t        return {\n\t          width: {\n\t            max: maxSpace.width,\n\t            min: minSpace.width\n\t          },\n\t          height: maxSpace.height\n\t        };\n\t      }\n\t    }, {\n\t      key: 'getModuleName',\n\t      value: function getModuleName() {\n\t        return 'ExpanderCollapser' + window.count;\n\t      }\n\t    }, {\n\t      key: 'placeInCanvas',\n\t      value: function placeInCanvas() {\n\t        var _self = this;\n\t        _self.spaceManagerInstance.add([{\n\t          name: function name() {\n\t            return _self.getModuleName();\n\t          },\n\t          ref: function ref(obj) {\n\t            return obj['0'];\n\t          },\n\t          self: function self() {\n\t            return _self;\n\t          },\n\t          priority: function priority() {\n\t            return 2;\n\t          },\n\t          layout: function layout(obj) {\n\t            return obj[_self.config.layout];\n\t          },\n\t          orientation: [{\n\t            type: function type(obj) {\n\t              return obj[_self.config.orientation];\n\t            },\n\t            position: [{\n\t              type: function type(obj) {\n\t                return obj[_self.config.position];\n\t              },\n\t              alignment: [{\n\t                type: function type(obj) {\n\t                  return obj[_self.config.alignment];\n\t                },\n\t                dimensions: [function () {\n\t                  var parent = this.getParentComponentGroup();\n\t                  return _self.getLogicalSpace(parent.getWidth(), parent.getHeight());\n\t                }]\n\t              }]\n\t            }]\n\t          }]\n\t        }]);\n\t      }\n\t    }, {\n\t      key: 'setDrawingConfiguration',\n\t      value: function setDrawingConfiguration(x, y, width, height, group) {\n\t        var mes = this.measurement;\n\t        mes.x = x;\n\t        mes.y = y;\n\t        mes.width = width;\n\t        mes.height = height;\n\t\n\t        this.parentGroup = group;\n\t\n\t        return this;\n\t      }\n\t    }, {\n\t      key: 'getDrawableComponentList',\n\t      value: function getDrawableComponentList(width, height) {\n\t        var componentArr = this.componentArr,\n\t            totalWidth = 0,\n\t            len,\n\t            component,\n\t            arr = [],\n\t            i,\n\t            logicalSpace,\n\t            group = this.group,\n\t            toolbar = this.toolbar,\n\t            padding = group.config.padding,\n\t            margin = group.config.margin,\n\t            tPad = toolbar.config.padding,\n\t            btn,\n\t            hSpace = tPad.left + tPad.right + padding.left + padding.right + margin.left + margin.right;\n\t\n\t        width -= hSpace;\n\t\n\t        for (i = 0, len = componentArr.length; i < len; i++) {\n\t          component = componentArr[i];\n\t          logicalSpace = component.instance.getLogicalSpace();\n\t          this.previousWidth = totalWidth;\n\t          totalWidth += logicalSpace.width;\n\t          if (totalWidth > width) {\n\t            totalWidth -= logicalSpace.width;\n\t            break;\n\t          }\n\t          arr.push(component.instance);\n\t        }\n\t\n\t        logicalSpace = this.expandButton.instance.getLogicalSpace();\n\t\n\t        if (arr.length !== len) {\n\t          totalWidth += logicalSpace.width;\n\t          if (totalWidth > width) {\n\t            btn = arr.pop();\n\t            totalWidth -= btn.getLogicalSpace().width;\n\t          }\n\t          arr.push(this.expandButton.instance);\n\t        }\n\t\n\t        this.previousWidth = totalWidth + hSpace;\n\t        return arr;\n\t      }\n\t    }, {\n\t      key: 'draw',\n\t      value: function draw(x, y, width, height, group) {\n\t        var self = this,\n\t            measurement = self.measurement,\n\t            toolbar = self.toolbar,\n\t            list = void 0;\n\t\n\t        x = x === undefined ? measurement.x : x;\n\t        y = y === undefined ? measurement.y : y;\n\t        width = width === undefined ? measurement.width : width;\n\t        height = height === undefined ? measurement.height : height;\n\t        group = group === undefined ? self.parentGroup : group;\n\t        if (width && height) {\n\t          this.group.emptyList();\n\t          list = this.getDrawableComponentList(width, height);\n\t          this.group.addSymbol(list);\n\t          toolbar.getLogicalSpace(width, height);\n\t          toolbar.draw(x, y, group);\n\t        }\n\t      }\n\t    }]);\n\t\n\t    return DateRange;\n\t  }();\n\t\n\t  return DateRange;\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tmodule.exports = function (dep) {\n\t  /**\n\t   * Class representing the DateRange\n\t   */\n\t  var KPIIndicator = function () {\n\t    function KPIIndicator() {\n\t      _classCallCheck(this, KPIIndicator);\n\t\n\t      /**\n\t      * @private\n\t      */\n\t      if (typeof dep.FusionCharts === 'function') {\n\t        this.toolbox = dep.FusionCharts.getComponent('api', 'toolbox');\n\t      } else {\n\t        throw new Error('Unable to find FusionCharts.');\n\t      }\n\t      this.btns = {\n\t        contextualObj: {},\n\t        calculatedObj: {}\n\t      };\n\t      this.HorizontalToolbar = this.toolbox.HorizontalToolbar;\n\t      this.ComponentGroup = this.toolbox.ComponentGroup;\n\t      this.createObjectAssign();\n\t    }\n\t\n\t    _createClass(KPIIndicator, [{\n\t      key: 'createObjectAssign',\n\t      value: function createObjectAssign() {\n\t        if (typeof Object.assign !== 'function') {\n\t          Object.assign = function (target, varArgs) {\n\t            'use strict';\n\t\n\t            if (target == null) {\n\t              throw new TypeError('Cannot convert undefined or null to object');\n\t            }\n\t\n\t            var to = Object(target);\n\t\n\t            for (var index = 1; index < arguments.length; index++) {\n\t              var nextSource = arguments[index];\n\t\n\t              if (nextSource != null) {\n\t                for (var nextKey in nextSource) {\n\t                  // Avoid bugs when hasOwnProperty is shadowed\n\t                  if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n\t                    to[nextKey] = nextSource[nextKey];\n\t                  }\n\t                }\n\t              }\n\t            }\n\t            return to;\n\t          };\n\t        }\n\t      }\n\t    }, {\n\t      key: 'createD3Button',\n\t      value: function createD3Button(buttonConf) {\n\t        var key,\n\t            text,\n\t            config,\n\t            states,\n\t            state,\n\t            btn,\n\t            button,\n\t            styles = this.extData.button,\n\t            paper = this.graphics.paper,\n\t            d3 = paper.getInstances().d3,\n\t            self = this;\n\t\n\t        text = buttonConf.text;\n\t        config = buttonConf.config;\n\t\n\t        button = d3.button(text).setConfig(config);\n\t        button.namespace('fusioncharts');\n\t        button.appendSelector('standarperiodselector');\n\t        self.addCssRules(button.getIndividualClassNames(button.getClassName()), styles);\n\t        states = styles.states;\n\t        for (state in states) {\n\t          self.addCssRules(button.getIndividualClassNames(button.config.states[state]), styles.states[state]);\n\t        }\n\t\n\t        buttonConf.eventListeners && button.attachEventHandlers({\n\t          click: buttonConf.eventListeners.click.bind(button)\n\t        });\n\t        return button;\n\t      }\n\t    }, {\n\t      key: 'createD3Label',\n\t      value: function createD3Label(label) {\n\t        var key,\n\t            text,\n\t            config,\n\t            instance,\n\t            styles = this.extData.label,\n\t            self = this,\n\t            button,\n\t            dependencies = {\n\t          paper: self.graphics.paper,\n\t          chart: self.chart,\n\t          smartLabel: self.smartLabel,\n\t          chartContainer: self.graphics.container\n\t        };\n\t\n\t        text = label.text;\n\t        config = label.config;\n\t        instance = new self.toolbox.Label(text, dependencies, config);\n\t        // self[key].namespace('fusioncharts');\n\t        // self[key].appendSelector('daterange');\n\t        self.addCssRules(instance.getIndividualClassNames(instance.getClassName()), styles);\n\t        return instance;\n\t      }\n\t    }, {\n\t      key: 'init',\n\t\n\t\n\t      /**\n\t       * Fusioncharts life cycle method for extension\n\t       */\n\t      value: function init(require) {\n\t        var instance = this;\n\t        require(['graphics', 'chart', 'canvasConfig', 'MarkerManager', 'reactiveModel', 'globalReactiveModel', 'spaceManagerInstance', 'smartLabel', 'extData', 'chartInstance', function (graphics, chart, canvasConfig, markerManager, reactiveModel, globalReactiveModel, spaceManagerInstance, smartLabel, extData, chartInstance) {\n\t          instance.graphics = graphics;\n\t          instance.chart = chart;\n\t          instance.markerManager = markerManager;\n\t          instance.canvasConfig = canvasConfig;\n\t          instance.reactiveModel = reactiveModel;\n\t          instance.globalReactiveModel = globalReactiveModel;\n\t          instance.spaceManagerInstance = spaceManagerInstance;\n\t          instance.smartLabel = smartLabel;\n\t          instance.extDataUser = extData;\n\t          instance.chartInstance = chartInstance;\n\t        }]);\n\t        instance.extData = {\n\t          'disabled': false,\n\t          'default-select': 'ALL',\n\t          'all-button': true,\n\t          'contextual-button': true,\n\t          'calculated-button': true,\n\t          'posWrtCanvas': 'top',\n\t          'anchor-align': 'right',\n\t          'layout': 'inline',\n\t          'position': 'top',\n\t          'alignment': 'right',\n\t          'orientation': 'horizontal',\n\t          'customMultipliers': {\n\t            'millisecond': [1, 500],\n\t            'second': [1, 5, 15, 30],\n\t            'minute': [1, 5, 15, 30],\n\t            'hour': [1, 3, 6, 12],\n\t            'day': [1, 7, 15],\n\t            'month': [1, 3, 6],\n\t            'year': [1, 3, 5]\n\t          },\n\t          padding: 0,\n\t          button: {\n\t            height: 22,\n\t            radius: 1,\n\t            className: 'standard-period-selector',\n\t            container: {\n\t              style: {\n\t                fill: '#FFFFFF',\n\t                'stroke-width': '1px',\n\t                stroke: '#CED5D4',\n\t                labelFill: '#4b4b4b',\n\t                strokeWidth: '1px'\n\t                // 'input-shadow-fill': '#000000',\n\t                // 'input-shadow-opacity': 0.35,\n\t              }\n\t            },\n\t            text: {\n\t              style: {\n\t                'fontFamily': '\"Lucida Grande\", sans-serif',\n\t                'font-size': '13px',\n\t                'fill': '#4b4b4b',\n\t                'line-height': '1px',\n\t                'letter-spacing': '-0.04em'\n\t              }\n\t            },\n\t            states: {\n\t              hover: {\n\t                className: 'standard-period-selector-state-hover',\n\t                container: {\n\t                  style: {\n\t                    cursor: 'pointer',\n\t                    fill: '#f7f7f7'\n\t                  }\n\t                }\n\t              }\n\t            }\n\t          },\n\t          label: {\n\t            className: 'standard-period-selector-label',\n\t            text: {\n\t              style: {\n\t                'font-weight': 'bold',\n\t                'font-family': '\"Lucida Grande\", sans-serif',\n\t                'font-size': '13px',\n\t                'fill': '#4b4b4b'\n\t              }\n\t            },\n\t            container: {\n\t              height: 22\n\t            }\n\t          }\n\t        };\n\t\n\t        instance.config = instance.extData;\n\t        Object.assign(instance.extData, instance.extDataUser);\n\t        instance.measurement = {};\n\t        instance.toolbar = instance.createToolbar();\n\t        return instance;\n\t      }\n\t    }, {\n\t      key: 'createToolbar',\n\t\n\t\n\t      // creates toolbar\n\t      value: function createToolbar() {\n\t        if (!window.count) {\n\t          window.count = 0;\n\t        }\n\t        window.count += 1;\n\t\n\t        var self = this,\n\t            buttonGroup,\n\t            toolbar,\n\t            allButton,\n\t            label,\n\t            group,\n\t            dependencies = {\n\t          paper: self.graphics.paper,\n\t          chart: self.chart,\n\t          smartLabel: self.smartLabel,\n\t          chartContainer: self.graphics.container\n\t        },\n\t            obj = {\n\t          fill: '#fff',\n\t          borderThickness: 0\n\t        },\n\t            button;\n\t\n\t        // initiating the toolbar\n\t        toolbar = new self.HorizontalToolbar(dependencies);\n\t        toolbar.setConfig(obj);\n\t\n\t        // making group for the extension label\n\t        group = this.group = new self.toolbox.ComponentGroup(dependencies);\n\t\n\t        group.setConfig(obj);\n\t\n\t        // extension label\n\t        label = {\n\t          height: 22,\n\t          text: 'Zoom:',\n\t          group: group,\n\t          config: {\n\t            height: 22\n\t          }\n\t        };\n\t\n\t        self.componentArr = [];\n\t\n\t        var obj = {},\n\t            name = self.getModuleName();\n\t\n\t        this.componentArr.push({\n\t          instance: self.createD3Button({\n\t            text: 'Set Min',\n\t            config: {\n\t              margin: {\n\t                right: 5,\n\t                left: 5\n\t              }\n\t            },\n\t            group: group\n\t          }),\n\t          id: 'id',\n\t          priority: 2\n\t        }, {\n\t          instance: self.createD3Button({\n\t            text: 'Show KPI',\n\t            config: {\n\t              margin: {\n\t                right: 5,\n\t                left: 5\n\t              }\n\t            },\n\t            group: group,\n\t            eventListeners: {\n\t              click: function click() {\n\t                self.showKPI = !self.showKPI;\n\t                tsInstance.resizeTo();\n\t              }\n\t            }\n\t          }),\n\t          id: 'id',\n\t          priority: 2\n\t        });\n\t\n\t        // self.createD3Buttons({\n\t        //   'expander': {\n\t        //     text: '>>',\n\t        //     config: {\n\t        //       margin: {\n\t        //         right: 2,\n\t        //         left: 2\n\t        //       }\n\t        //     },\n\t        //     group: group,\n\t        //     eventListeners: {\n\t        //       click: function () {\n\t        //         self.expand = !self.expand;\n\t        //         for (var key in self.btns) {\n\t        //           obj = self.btns[key];\n\t        //           /button/.test(key) && (self.expand ? obj.btn.hide() : obj.btn.show());\n\t        //         }\n\t        //         self.toolbar.redraw();\n\t        //       }\n\t        //     }\n\t        //   }\n\t        // });\n\t\n\t        // adding group and button group to toolbar\n\t        toolbar.addComponent(group);\n\t        self.toolbar = toolbar;\n\t        return toolbar;\n\t      }\n\t    }, {\n\t      key: 'addCssRules',\n\t      value: function addCssRules(classNames, styles) {\n\t        var key,\n\t            className,\n\t            paper = this.graphics.paper;\n\t        for (key in classNames) {\n\t          className = classNames[key];\n\t          switch (key) {\n\t            case 'container':\n\t              styles.container && paper.cssAddRule('.' + className, styles.container.style);\n\t              break;\n\t            case 'text':\n\t              styles.text && paper.cssAddRule('.' + className, styles.text.style);\n\t          }\n\t        }\n\t      }\n\t    }, {\n\t      key: 'addSymbols',\n\t      value: function addSymbols(symbolArr) {\n\t        var i,\n\t            len,\n\t            group = this.group;\n\t\n\t        for (i = 0, len = symbolArr.length; i < len; i++) {\n\t          group.addSymbol(symbolArr[i].instance);\n\t        }\n\t      }\n\t    }, {\n\t      key: 'getLogicalSpace',\n\t      value: function getLogicalSpace(availableWidth, availableHeight) {\n\t        var buttons = this.buttons,\n\t            minArr = this.componentArr,\n\t            minSpace,\n\t            maxSpace;\n\t\n\t        this.group.emptyList();\n\t        this.addSymbols(minArr);\n\t        minSpace = this.toolbar.getLogicalSpace(availableWidth, availableHeight);\n\t        console.log('minWidth', minSpace.width);\n\t        this.group.emptyList();\n\t\n\t        this.addSymbols(this.componentArr);\n\t\n\t        this.maxSpace = maxSpace = this.toolbar.getLogicalSpace(availableWidth, availableHeight);\n\t\n\t        return {\n\t          width: {\n\t            max: maxSpace.width,\n\t            min: minSpace.width\n\t          },\n\t          height: maxSpace.height\n\t        };\n\t      }\n\t    }, {\n\t      key: 'getSidePanelSpace',\n\t      value: function getSidePanelSpace(availableWidth, availableHeight) {\n\t        return {\n\t          width: this.showKPI ? 100 : 0,\n\t          height: this.showKPI ? 1 : 0\n\t        };\n\t      }\n\t    }, {\n\t      key: 'getModuleName',\n\t      value: function getModuleName() {\n\t        return 'ExpanderCollapser' + window.count;\n\t      }\n\t    }, {\n\t      key: 'placeInCanvas',\n\t      value: function placeInCanvas() {\n\t        var _self = this;\n\t        _self.spaceManagerInstance.add([{\n\t          name: function name() {\n\t            return _self.getModuleName();\n\t          },\n\t          ref: function ref(obj) {\n\t            return obj['0'];\n\t          },\n\t          self: function self() {\n\t            return _self;\n\t          },\n\t          priority: function priority() {\n\t            return 2;\n\t          },\n\t          layout: function layout(obj) {\n\t            return obj[_self.config.layout];\n\t          },\n\t          orientation: [{\n\t            type: function type(obj) {\n\t              return obj[_self.config.orientation];\n\t            },\n\t            position: [{\n\t              type: function type(obj) {\n\t                return obj[_self.config.position];\n\t              },\n\t              alignment: [{\n\t                type: function type(obj) {\n\t                  return obj[_self.config.alignment];\n\t                },\n\t                dimensions: [function () {\n\t                  var parent = this.getParentComponentGroup();\n\t                  return _self.getLogicalSpace(parent.getWidth(), parent.getHeight());\n\t                }]\n\t              }]\n\t            }]\n\t          }]\n\t        }]);\n\t\n\t        _self.spaceManagerInstance.add([{\n\t          name: function name() {\n\t            return 'sidepanel';\n\t          },\n\t          ref: function ref(obj) {\n\t            return obj['0'];\n\t          },\n\t          self: function self() {\n\t            return _self;\n\t          },\n\t          priority: function priority() {\n\t            return 2;\n\t          },\n\t          layout: function layout(obj) {\n\t            return obj.block;\n\t          },\n\t          orientation: [{\n\t            type: function type(obj) {\n\t              return obj.vertical;\n\t            },\n\t            position: [{\n\t              type: function type(obj) {\n\t                return obj.right;\n\t              },\n\t              alignment: [{\n\t                type: function type(obj) {\n\t                  return obj.middle;\n\t                },\n\t                dimensions: [function () {\n\t                  var parent = this.getParentComponentGroup();\n\t                  return _self.getSidePanelSpace(parent.getWidth(), parent.getHeight());\n\t                }]\n\t              }]\n\t            }]\n\t          }]\n\t        }]);\n\t      }\n\t    }, {\n\t      key: 'setDrawingConfiguration',\n\t      value: function setDrawingConfiguration(x, y, width, height, group) {\n\t        var mes = this.measurement;\n\t        mes.x = x;\n\t        mes.y = y;\n\t        mes.width = width;\n\t        mes.height = height;\n\t\n\t        this.parentGroup = group;\n\t\n\t        return this;\n\t      }\n\t    }, {\n\t      key: 'draw',\n\t      value: function draw(x, y, width, height, group) {\n\t        var self = this,\n\t            measurement = self.measurement,\n\t            toolbar = self.toolbar,\n\t            list = void 0;\n\t\n\t        x = x === undefined ? measurement.x : x;\n\t        y = y === undefined ? measurement.y : y;\n\t        width = width === undefined ? measurement.width : width;\n\t        height = height === undefined ? measurement.height : height;\n\t        group = group === undefined ? self.parentGroup : group;\n\t        if (width && height) {\n\t          toolbar.draw(x, y, group);\n\t          this.showKPI ? this.drawPanel(x + width, y) : this.hidePanel();\n\t        }\n\t      }\n\t    }, {\n\t      key: 'drawPanel',\n\t      value: function drawPanel(x, y) {\n\t        var childStyle = {\n\t          left: '10px',\n\t          'font-weight': 'normal',\n\t          padding: '2px'\n\t        },\n\t            headStyleObj = {\n\t          padding: '10px',\n\t          'font-weight': 'bold'\n\t        };\n\t        var data = [{\n\t          head: {\n\t            text: ['Visible Data'],\n\t            style: headStyleObj\n\t          },\n\t          style: {\n\t            margin: '5px'\n\t          },\n\t          children: [{\n\t            text: ['Maximum', 30],\n\t            style: childStyle\n\t          }, {\n\t            text: ['Minimum', 30],\n\t            style: childStyle\n\t          }, {\n\t            text: ['Standard Deviation', 30],\n\t            style: childStyle\n\t          }, {\n\t            text: ['Average', 30],\n\t            style: childStyle\n\t          }]\n\t        }, {\n\t          head: {\n\t            text: ['Full Data'],\n\t            style: headStyleObj\n\t          },\n\t          style: {\n\t            margin: '5px'\n\t          },\n\t          children: [{\n\t            text: ['Maximum', 30],\n\t            style: childStyle\n\t          }, {\n\t            text: ['Minimum', 30],\n\t            style: childStyle\n\t          }, {\n\t            text: ['Standard Deviation', 30],\n\t            style: childStyle\n\t          }, {\n\t            text: ['Average', 30],\n\t            style: childStyle\n\t          }]\n\t        }];\n\t\n\t        var parent,\n\t            selection = d3.select(this.graphics.container).selectAll('.test').data([1]);\n\t\n\t        selection = selection.enter().append('div').merge(selection).attr('class', 'test').style(\"left\", x + \"px\").style('position', 'absolute').style('display', 'block').style(\"top\", y + \"px\");\n\t\n\t        function createDIV(text, selection, cls, styleObj) {\n\t          var str = text.join(':'),\n\t              child = selection.selectAll('.' + cls).data([1]);\n\t\n\t          child = child.enter().append('div').merge(child).attr('class', cls).html(str).style('position', 'relative');\n\t\n\t          for (var obj in styleObj) {\n\t            child.style(obj, styleObj[obj]);\n\t          }\n\t\n\t          return child;\n\t        }\n\t\n\t        for (var i = 0, len = data.length; i < len; i += 1) {\n\t          createDIV([], selection, data[i].head.text[0] + '_container', data[i].style);\n\t          parent = createDIV(data[i].head.text, selection, data[i].head.text[0], data[i].head.style);\n\t          if (data[i].children) {\n\t            for (var j = 0, len1 = data[i].children.length; j < len1; j += 1) {\n\t              createDIV(data[i].children[j].text, parent, data[i].text + '_' + data[i].children[j].text[0], data[i].children[j].style);\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }, {\n\t      key: 'hidePanel',\n\t      value: function hidePanel() {\n\t        d3.select(this.graphics.container).select('.test').remove();\n\t      }\n\t    }]);\n\t\n\t    return KPIIndicator;\n\t  }();\n\t\n\t  return KPIIndicator;\n\t};\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// expander-collapser-es5.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fd45ac663ed19a4ce95d","'use strict';\nconst DateRange = require('./fcts-ext-expandercollapser');\nconst SidePanel = require('./fcts-ext-sidepanel.js');\n;(function (env, factory) {\n  if (typeof module === 'object' && module.exports) {\n    module.exports = env.document\n       ? factory(env) : function (win) {\n         if (!win.document) {\n           throw new Error('Window with document not present');\n         }\n         return factory(win, true);\n       };\n  } else {\n    env.DateRangeChooser = factory(env, true);\n  }\n})(typeof window !== 'undefined' ? window : this, function (_window, windowExists) {\n  var FC = _window.FusionCharts,\n    FusionCalendar = _window.FusionCalendar;\n  FC.register('extension', ['private', 'expander-collapser', function () {\n    var DateTimeFormatter = this.hcLib.DateTimeFormatter;\n    FC.registerComponent('extensions', 'expander-collapser', DateRange({\n      FusionCharts: FC,\n      DateTimeFormatter: DateTimeFormatter\n    }));\n    FC.registerComponent('extensions', 'expander-collapser2', DateRange({\n      FusionCharts: FC,\n      DateTimeFormatter: DateTimeFormatter\n    }));\n\n    FC.registerComponent('extensions', 'SidePanel', SidePanel({\n      FusionCharts: FC,\n      DateTimeFormatter: DateTimeFormatter\n    }));\n    // FC.registerComponent('extensions', 'expander-collapser3', DateRange({\n    //   FusionCharts: FC,\n    //   DateTimeFormatter: DateTimeFormatter\n    // }));\n    // FC.registerComponent('extensions', 'expander-collapser4', DateRange({\n    //   FusionCharts: FC,\n    //   DateTimeFormatter: DateTimeFormatter\n    // }));\n  }]);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 1\n// module chunks = 0","'use strict';\nmodule.exports = function (dep) {\n  /**\n   * Class representing the DateRange\n   */\n  class DateRange {\n    constructor() {\n      /**\n      * @private\n      */\n      if (typeof dep.FusionCharts === 'function') {\n        this.toolbox = dep.FusionCharts.getComponent('api', 'toolbox');\n      } else {\n        throw new Error('Unable to find FusionCharts.');\n      }\n      this.btns = {\n        contextualObj: {},\n        calculatedObj: {}\n      };\n      this.HorizontalToolbar = this.toolbox.HorizontalToolbar;\n      this.ComponentGroup = this.toolbox.ComponentGroup;\n      this.createObjectAssign();\n    }\n\n    createObjectAssign () {\n      if (typeof Object.assign !== 'function') {\n        Object.assign = function (target, varArgs) {\n          'use strict';\n          if (target == null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n          }\n\n          var to = Object(target);\n\n          for (let index = 1; index < arguments.length; index++) {\n            let nextSource = arguments[index];\n\n            if (nextSource != null) {\n              for (let nextKey in nextSource) {\n                // Avoid bugs when hasOwnProperty is shadowed\n                if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                  to[nextKey] = nextSource[nextKey];\n                }\n              }\n            }\n          }\n          return to;\n        };\n      }\n    }\n\n    createD3Button (buttonConf) {\n      var key,\n        text,\n        config,\n        states,\n        state,\n        btn,\n        button,\n        styles = this.extData.button,\n        paper = this.graphics.paper,\n        d3 = paper.getInstances().d3,\n        self = this;\n\n      text = buttonConf.text;\n      config = buttonConf.config;\n\n      button = d3.button(text).setConfig(config);\n      button.namespace('fusioncharts');\n      button.appendSelector('standarperiodselector');\n      self.addCssRules(button.getIndividualClassNames(button.getClassName()), styles);\n      states = styles.states;\n      for (state in states) {\n        self.addCssRules(button.getIndividualClassNames(button.config.states[state]), styles.states[state]);\n      }\n\n      buttonConf.eventListeners && button.attachEventHandlers({\n        click: buttonConf.eventListeners.click.bind(button)\n      });\n      return button;\n    };\n\n    createD3Label (label) {\n      var key,\n        text,\n        config,\n        instance,\n        styles = this.extData.label,\n        self = this,\n        button,\n        dependencies = {\n          paper: self.graphics.paper,\n          chart: self.chart,\n          smartLabel: self.smartLabel,\n          chartContainer: self.graphics.container\n        };\n\n      text = label.text;\n      config = label.config;\n      instance = new self.toolbox.Label(text, dependencies, config);\n      // self[key].namespace('fusioncharts');\n      // self[key].appendSelector('daterange');\n      self.addCssRules(instance.getIndividualClassNames(instance.getClassName()), styles);\n      return instance;\n    };\n\n    /**\n     * Fusioncharts life cycle method for extension\n     */\n    init (require) {\n      var instance = this;\n      require([\n        'graphics',\n        'chart',\n        'canvasConfig',\n        'MarkerManager',\n        'reactiveModel',\n        'globalReactiveModel',\n        'spaceManagerInstance',\n        'smartLabel',\n        'extData',\n        'chartInstance',\n        function (\n              graphics,\n              chart,\n              canvasConfig,\n              markerManager,\n              reactiveModel,\n              globalReactiveModel,\n              spaceManagerInstance,\n              smartLabel,\n              extData,\n              chartInstance) {\n          instance.graphics = graphics;\n          instance.chart = chart;\n          instance.markerManager = markerManager;\n          instance.canvasConfig = canvasConfig;\n          instance.reactiveModel = reactiveModel;\n          instance.globalReactiveModel = globalReactiveModel;\n          instance.spaceManagerInstance = spaceManagerInstance;\n          instance.smartLabel = smartLabel;\n          instance.extDataUser = extData;\n          instance.chartInstance = chartInstance;\n        }\n      ]);\n      instance.extData = {\n        'disabled': false,\n        'default-select': 'ALL',\n        'all-button': true,\n        'contextual-button': true,\n        'calculated-button': true,\n        'posWrtCanvas': 'top',\n        'anchor-align': 'right',\n        'layout': 'inline',\n        'position': 'top',\n        'alignment': 'left',\n        'orientation': 'horizontal',\n        'customMultipliers': {\n          'millisecond': [1, 500],\n          'second': [1, 5, 15, 30],\n          'minute': [1, 5, 15, 30],\n          'hour': [1, 3, 6, 12],\n          'day': [1, 7, 15],\n          'month': [1, 3, 6],\n          'year': [1, 3, 5]\n        },\n        padding: 0,\n        button: {\n          height: 22,\n          radius: 1,\n          className: 'standard-period-selector',\n          container: {\n            style: {\n              fill: '#FFFFFF',\n              'stroke-width': '1px',\n              stroke: '#CED5D4',\n              labelFill: '#4b4b4b',\n              strokeWidth: '1px'\n              // 'input-shadow-fill': '#000000',\n              // 'input-shadow-opacity': 0.35,\n            }\n          },\n          text: {\n            style: {\n              'fontFamily': '\"Lucida Grande\", sans-serif',\n              'font-size': '13px',\n              'fill': '#4b4b4b',\n              'line-height': '1px',\n              'letter-spacing': '-0.04em'\n            }\n          },\n          states: {\n            hover: {\n              className: 'standard-period-selector-state-hover',\n              container: {\n                style: {\n                  cursor: 'pointer',\n                  fill: '#f7f7f7'\n                }\n              }\n            }\n          }\n        },\n        label: {\n          className: 'standard-period-selector-label',\n          text: {\n            style: {\n              'font-weight': 'bold',\n              'font-family': '\"Lucida Grande\", sans-serif',\n              'font-size': '13px',\n              'fill': '#4b4b4b'\n            }\n          },\n          container: {\n            height: 22\n          }\n        }\n      };\n\n      instance.config = instance.extData;\n      Object.assign(instance.extData, instance.extDataUser);\n      instance.measurement = {};\n      instance.toolbar = instance.createToolbar();\n      return instance;\n    };\n\n    // creates toolbar\n    createToolbar () {\n      if (!window.count) {\n        window.count = 0;\n      }\n      window.count += 1;\n\n      var self = this,\n        buttonGroup,\n        toolbar,\n        allButton,\n        label,\n        group,\n        dependencies = {\n          paper: self.graphics.paper,\n          chart: self.chart,\n          smartLabel: self.smartLabel,\n          chartContainer: self.graphics.container\n        },\n        obj = {\n          fill: '#fff',\n          borderThickness: 0\n        },\n        button;\n\n      // initiating the toolbar\n      toolbar = new self.HorizontalToolbar(dependencies);\n      toolbar.setConfig(obj);\n\n      // making group for the extension label\n      group = this.group = new self.toolbox.ComponentGroup(dependencies);\n\n      group.setConfig(obj);\n\n      // extension label\n      label = {\n        height: 22,\n        text: 'Zoom:',\n        group: group,\n        config: {\n          height: 22\n        }\n      };\n\n\n\n      self.componentArr = [];\n\n      self.componentArr.push({\n        instance: self.createD3Label(label),\n        priority: 1\n      });\n      var obj = {},\n        name = self.getModuleName();\n\n      for (let i = 0; i < 6; i++) {\n        button = {};\n        button.instance = self.createD3Button({\n          text: 'BUTTON' + i,\n          config: {\n            margin: {\n              right: 5,\n              left: 5\n            }\n          },\n          group: group\n        });\n        button.id = 'id';\n        button.priority = 2;\n        this.componentArr.push(button);\n      };\n\n      this.expandButton = {\n        instance: self.createD3Button({\n          text: '>>',\n          config: {\n            margin: {\n              right: 2,\n              left: 2\n            }\n          },\n          group: group,\n          eventListeners: {\n            click: function () {\n              var fullview = self.fullview,\n                previousWidth = self.previousWidth,\n                maxSpace = self.maxSpace,\n                diff = maxSpace.width - previousWidth;\n                console.log('diff', diff);\n              self.spaceManagerInstance.cacheByName(name).adjustWidth(diff);\n            }\n          }\n        })\n      };\n\n      this.expandButton.logicalSpace = button.instance.getLogicalSpace();\n      this.expandButton.priority = 0;\n\n\n      // self.createD3Buttons({\n      //   'expander': {\n      //     text: '>>',\n      //     config: {\n      //       margin: {\n      //         right: 2,\n      //         left: 2\n      //       }\n      //     },\n      //     group: group,\n      //     eventListeners: {\n      //       click: function () {\n      //         self.expand = !self.expand;\n      //         for (var key in self.btns) {\n      //           obj = self.btns[key];\n      //           /button/.test(key) && (self.expand ? obj.btn.hide() : obj.btn.show());\n      //         }\n      //         self.toolbar.redraw();\n      //       }\n      //     }\n      //   }\n      // });\n\n      // adding group and button group to toolbar\n      toolbar.addComponent(group);\n      self.toolbar = toolbar;\n      return toolbar;\n    };\n\n    addCssRules (classNames, styles) {\n      var key,\n        className,\n        paper = this.graphics.paper;\n      for (key in classNames) {\n        className = classNames[key];\n        switch (key) {\n          case 'container':\n            styles.container && paper.cssAddRule('.' + className, styles.container.style);\n            break;\n          case 'text':\n            styles.text && paper.cssAddRule('.' + className, styles.text.style);\n        }\n      }\n    };\n\n    addSymbols (symbolArr) {\n      var i, len,\n        group = this.group;\n\n      for (i = 0, len = symbolArr.length; i < len; i++) {\n        group.addSymbol(symbolArr[i].instance);\n      }\n    };\n\n    getLogicalSpace (availableWidth, availableHeight) {\n      var buttons = this.buttons,\n        minArr = [this.expandButton],\n        minSpace,\n        maxSpace;\n\n      this.group.emptyList();\n      this.addSymbols(minArr);\n      minSpace = this.toolbar.getLogicalSpace(availableWidth, availableHeight);\n      console.log('minWidth', minSpace.width);\n      this.group.emptyList();\n\n      this.addSymbols(this.componentArr);\n\n      this.maxSpace = maxSpace = this.toolbar.getLogicalSpace(availableWidth, availableHeight);\n\n      return {\n        width: {\n          max: maxSpace.width,\n          min: minSpace.width\n        },\n        height: maxSpace.height\n      };\n    };\n\n    getModuleName () {\n      return 'ExpanderCollapser' + window.count;\n    }\n\n    placeInCanvas () {\n      var self = this;\n      self.spaceManagerInstance.add([{\n        name: function () {\n          return self.getModuleName();\n        },\n        ref: function (obj) {\n          return obj['0'];\n        },\n        self: function () {\n          return self;\n        },\n        priority: function () {\n          return 2;\n        },\n        layout: function (obj) {\n          return obj[self.config.layout];\n        },\n        orientation: [{\n          type: function (obj) {\n            return obj[self.config.orientation];\n          },\n          position: [{\n            type: function (obj) {\n              return obj[self.config.position];\n            },\n            alignment: [{\n              type: function (obj) {\n                return obj[self.config.alignment];\n              },\n              dimensions: [function () {\n                var parent = this.getParentComponentGroup();\n                return self.getLogicalSpace(parent.getWidth(), parent.getHeight());\n              }]\n            }]\n          }]\n        }]\n      }]);\n    };\n\n    setDrawingConfiguration (x, y, width, height, group) {\n      var mes = this.measurement;\n      mes.x = x;\n      mes.y = y;\n      mes.width = width;\n      mes.height = height;\n\n      this.parentGroup = group;\n\n      return this;\n    };\n\n    getDrawableComponentList (width, height) {\n      var componentArr = this.componentArr,\n        totalWidth = 0,\n        len,\n        component,\n        arr = [],\n        i,\n        logicalSpace,\n        group = this.group,\n        toolbar = this.toolbar,\n        padding = group.config.padding,\n        margin = group.config.margin,\n        tPad = toolbar.config.padding,\n        btn,\n        hSpace = tPad.left + tPad.right + padding.left + padding.right + margin.left + margin.right;\n\n\n      width -= hSpace;\n\n      for (i = 0, len = componentArr.length; i < len; i++) {\n        component = componentArr[i];\n        logicalSpace = component.instance.getLogicalSpace();\n        this.previousWidth = totalWidth;\n        totalWidth += logicalSpace.width;\n        if (totalWidth > width) {\n          totalWidth -= logicalSpace.width;\n          break;\n        }\n        arr.push(component.instance);\n      }\n\n      logicalSpace = this.expandButton.instance.getLogicalSpace();\n\n      if (arr.length !== len) {\n        totalWidth += logicalSpace.width;\n        if (totalWidth > width) {\n          btn = arr.pop();\n          totalWidth -= btn.getLogicalSpace().width;\n        }\n        arr.push(this.expandButton.instance);\n      }\n\n      this.previousWidth = totalWidth + hSpace;\n      return arr;\n    }\n\n    draw (x, y, width, height, group) {\n      let self = this,\n        measurement = self.measurement,\n        toolbar = self.toolbar,\n        list;\n\n      x = x === undefined ? measurement.x : x;\n      y = y === undefined ? measurement.y : y;\n      width = width === undefined ? measurement.width : width;\n      height = height === undefined ? measurement.height : height;\n      group = group === undefined ? self.parentGroup : group;\n      if (width && height) {\n        this.group.emptyList();\n        list = this.getDrawableComponentList(width, height);\n        this.group.addSymbol(list);\n        toolbar.getLogicalSpace(width, height);\n        toolbar.draw(x, y, group);\n      }\n    };\n  }\n  return DateRange;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fcts-ext-expandercollapser.js","'use strict';\nmodule.exports = function (dep) {\n  /**\n   * Class representing the DateRange\n   */\n  class KPIIndicator {\n    constructor() {\n      /**\n      * @private\n      */\n      if (typeof dep.FusionCharts === 'function') {\n        this.toolbox = dep.FusionCharts.getComponent('api', 'toolbox');\n      } else {\n        throw new Error('Unable to find FusionCharts.');\n      }\n      this.btns = {\n        contextualObj: {},\n        calculatedObj: {}\n      };\n      this.HorizontalToolbar = this.toolbox.HorizontalToolbar;\n      this.ComponentGroup = this.toolbox.ComponentGroup;\n      this.createObjectAssign();\n    }\n\n    createObjectAssign () {\n      if (typeof Object.assign !== 'function') {\n        Object.assign = function (target, varArgs) {\n          'use strict';\n          if (target == null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n          }\n\n          var to = Object(target);\n\n          for (let index = 1; index < arguments.length; index++) {\n            let nextSource = arguments[index];\n\n            if (nextSource != null) {\n              for (let nextKey in nextSource) {\n                // Avoid bugs when hasOwnProperty is shadowed\n                if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                  to[nextKey] = nextSource[nextKey];\n                }\n              }\n            }\n          }\n          return to;\n        };\n      }\n    }\n\n    createD3Button (buttonConf) {\n      var key,\n        text,\n        config,\n        states,\n        state,\n        btn,\n        button,\n        styles = this.extData.button,\n        paper = this.graphics.paper,\n        d3 = paper.getInstances().d3,\n        self = this;\n\n      text = buttonConf.text;\n      config = buttonConf.config;\n\n      button = d3.button(text).setConfig(config);\n      button.namespace('fusioncharts');\n      button.appendSelector('standarperiodselector');\n      self.addCssRules(button.getIndividualClassNames(button.getClassName()), styles);\n      states = styles.states;\n      for (state in states) {\n        self.addCssRules(button.getIndividualClassNames(button.config.states[state]), styles.states[state]);\n      }\n\n      buttonConf.eventListeners && button.attachEventHandlers({\n        click: buttonConf.eventListeners.click.bind(button)\n      });\n      return button;\n    };\n\n    createD3Label (label) {\n      var key,\n        text,\n        config,\n        instance,\n        styles = this.extData.label,\n        self = this,\n        button,\n        dependencies = {\n          paper: self.graphics.paper,\n          chart: self.chart,\n          smartLabel: self.smartLabel,\n          chartContainer: self.graphics.container\n        };\n\n      text = label.text;\n      config = label.config;\n      instance = new self.toolbox.Label(text, dependencies, config);\n      // self[key].namespace('fusioncharts');\n      // self[key].appendSelector('daterange');\n      self.addCssRules(instance.getIndividualClassNames(instance.getClassName()), styles);\n      return instance;\n    };\n\n    /**\n     * Fusioncharts life cycle method for extension\n     */\n    init (require) {\n      var instance = this;\n      require([\n        'graphics',\n        'chart',\n        'canvasConfig',\n        'MarkerManager',\n        'reactiveModel',\n        'globalReactiveModel',\n        'spaceManagerInstance',\n        'smartLabel',\n        'extData',\n        'chartInstance',\n        function (\n              graphics,\n              chart,\n              canvasConfig,\n              markerManager,\n              reactiveModel,\n              globalReactiveModel,\n              spaceManagerInstance,\n              smartLabel,\n              extData,\n              chartInstance) {\n          instance.graphics = graphics;\n          instance.chart = chart;\n          instance.markerManager = markerManager;\n          instance.canvasConfig = canvasConfig;\n          instance.reactiveModel = reactiveModel;\n          instance.globalReactiveModel = globalReactiveModel;\n          instance.spaceManagerInstance = spaceManagerInstance;\n          instance.smartLabel = smartLabel;\n          instance.extDataUser = extData;\n          instance.chartInstance = chartInstance;\n        }\n      ]);\n      instance.extData = {\n        'disabled': false,\n        'default-select': 'ALL',\n        'all-button': true,\n        'contextual-button': true,\n        'calculated-button': true,\n        'posWrtCanvas': 'top',\n        'anchor-align': 'right',\n        'layout': 'inline',\n        'position': 'top',\n        'alignment': 'right',\n        'orientation': 'horizontal',\n        'customMultipliers': {\n          'millisecond': [1, 500],\n          'second': [1, 5, 15, 30],\n          'minute': [1, 5, 15, 30],\n          'hour': [1, 3, 6, 12],\n          'day': [1, 7, 15],\n          'month': [1, 3, 6],\n          'year': [1, 3, 5]\n        },\n        padding: 0,\n        button: {\n          height: 22,\n          radius: 1,\n          className: 'standard-period-selector',\n          container: {\n            style: {\n              fill: '#FFFFFF',\n              'stroke-width': '1px',\n              stroke: '#CED5D4',\n              labelFill: '#4b4b4b',\n              strokeWidth: '1px'\n              // 'input-shadow-fill': '#000000',\n              // 'input-shadow-opacity': 0.35,\n            }\n          },\n          text: {\n            style: {\n              'fontFamily': '\"Lucida Grande\", sans-serif',\n              'font-size': '13px',\n              'fill': '#4b4b4b',\n              'line-height': '1px',\n              'letter-spacing': '-0.04em'\n            }\n          },\n          states: {\n            hover: {\n              className: 'standard-period-selector-state-hover',\n              container: {\n                style: {\n                  cursor: 'pointer',\n                  fill: '#f7f7f7'\n                }\n              }\n            }\n          }\n        },\n        label: {\n          className: 'standard-period-selector-label',\n          text: {\n            style: {\n              'font-weight': 'bold',\n              'font-family': '\"Lucida Grande\", sans-serif',\n              'font-size': '13px',\n              'fill': '#4b4b4b'\n            }\n          },\n          container: {\n            height: 22\n          }\n        }\n      };\n\n      instance.config = instance.extData;\n      Object.assign(instance.extData, instance.extDataUser);\n      instance.measurement = {};\n      instance.toolbar = instance.createToolbar();\n      return instance;\n    };\n\n    // creates toolbar\n    createToolbar () {\n      if (!window.count) {\n        window.count = 0;\n      }\n      window.count += 1;\n\n      var self = this,\n        buttonGroup,\n        toolbar,\n        allButton,\n        label,\n        group,\n        dependencies = {\n          paper: self.graphics.paper,\n          chart: self.chart,\n          smartLabel: self.smartLabel,\n          chartContainer: self.graphics.container\n        },\n        obj = {\n          fill: '#fff',\n          borderThickness: 0\n        },\n        button;\n\n      // initiating the toolbar\n      toolbar = new self.HorizontalToolbar(dependencies);\n      toolbar.setConfig(obj);\n\n      // making group for the extension label\n      group = this.group = new self.toolbox.ComponentGroup(dependencies);\n\n      group.setConfig(obj);\n\n      // extension label\n      label = {\n        height: 22,\n        text: 'Zoom:',\n        group: group,\n        config: {\n          height: 22\n        }\n      };\n\n\n\n      self.componentArr = [];\n\n      var obj = {},\n        name = self.getModuleName();\n\n\n      this.componentArr.push({\n        instance: self.createD3Button({\n          text: 'Set Min',\n          config: {\n            margin: {\n              right: 5,\n              left: 5\n            }\n          },\n          group: group\n        }),\n        id: 'id',\n        priority: 2\n      }, {\n        instance: self.createD3Button({\n          text: 'Show KPI',\n          config: {\n            margin: {\n              right: 5,\n              left: 5\n            }\n          },\n          group: group,\n          eventListeners: {\n            click: function () {\n              self.showKPI = !self.showKPI;\n              tsInstance.resizeTo();\n            }\n          }\n        }),\n        id: 'id',\n        priority: 2\n      });\n\n      // self.createD3Buttons({\n      //   'expander': {\n      //     text: '>>',\n      //     config: {\n      //       margin: {\n      //         right: 2,\n      //         left: 2\n      //       }\n      //     },\n      //     group: group,\n      //     eventListeners: {\n      //       click: function () {\n      //         self.expand = !self.expand;\n      //         for (var key in self.btns) {\n      //           obj = self.btns[key];\n      //           /button/.test(key) && (self.expand ? obj.btn.hide() : obj.btn.show());\n      //         }\n      //         self.toolbar.redraw();\n      //       }\n      //     }\n      //   }\n      // });\n\n      // adding group and button group to toolbar\n      toolbar.addComponent(group);\n      self.toolbar = toolbar;\n      return toolbar;\n    };\n\n    addCssRules (classNames, styles) {\n      var key,\n        className,\n        paper = this.graphics.paper;\n      for (key in classNames) {\n        className = classNames[key];\n        switch (key) {\n          case 'container':\n            styles.container && paper.cssAddRule('.' + className, styles.container.style);\n            break;\n          case 'text':\n            styles.text && paper.cssAddRule('.' + className, styles.text.style);\n        }\n      }\n    };\n\n    addSymbols (symbolArr) {\n      var i, len,\n        group = this.group;\n\n      for (i = 0, len = symbolArr.length; i < len; i++) {\n        group.addSymbol(symbolArr[i].instance);\n      }\n    };\n\n    getLogicalSpace (availableWidth, availableHeight) {\n      var buttons = this.buttons,\n        minArr = this.componentArr,\n        minSpace,\n        maxSpace;\n\n      this.group.emptyList();\n      this.addSymbols(minArr);\n      minSpace = this.toolbar.getLogicalSpace(availableWidth, availableHeight);\n      console.log('minWidth', minSpace.width);\n      this.group.emptyList();\n\n      this.addSymbols(this.componentArr);\n\n      this.maxSpace = maxSpace = this.toolbar.getLogicalSpace(availableWidth, availableHeight);\n\n      return {\n        width: {\n          max: maxSpace.width,\n          min: minSpace.width\n        },\n        height: maxSpace.height\n      };\n    };\n\n    getSidePanelSpace (availableWidth, availableHeight) {\n      return {\n        width: this.showKPI ? 100 : 0,\n        height: this.showKPI ? 1 : 0\n      }\n    }\n\n    getModuleName () {\n      return 'ExpanderCollapser' + window.count;\n    }\n\n    placeInCanvas () {\n      var self = this;\n      self.spaceManagerInstance.add([{\n        name: function () {\n          return self.getModuleName();\n        },\n        ref: function (obj) {\n          return obj['0'];\n        },\n        self: function () {\n          return self;\n        },\n        priority: function () {\n          return 2;\n        },\n        layout: function (obj) {\n          return obj[self.config.layout];\n        },\n        orientation: [{\n          type: function (obj) {\n            return obj[self.config.orientation];\n          },\n          position: [{\n            type: function (obj) {\n              return obj[self.config.position];\n            },\n            alignment: [{\n              type: function (obj) {\n                return obj[self.config.alignment];\n              },\n              dimensions: [function () {\n                var parent = this.getParentComponentGroup();\n                return self.getLogicalSpace(parent.getWidth(), parent.getHeight());\n              }]\n            }]\n          }]\n        }]\n      }]);\n\n      self.spaceManagerInstance.add([{\n        name: function () {\n          return 'sidepanel'\n        },\n        ref: function (obj) {\n          return obj['0'];\n        },\n        self: function () {\n          return self;\n        },\n        priority: function () {\n          return 2;\n        },\n        layout: function (obj) {\n          return obj.block;\n        },\n        orientation: [{\n          type: function (obj) {\n            return obj.vertical;\n          },\n          position: [{\n            type: function (obj) {\n              return obj.right;\n            },\n            alignment: [{\n              type: function (obj) {\n                return obj.middle\n              },\n              dimensions: [function () {\n                var parent = this.getParentComponentGroup();\n                return self.getSidePanelSpace(parent.getWidth(), parent.getHeight());\n              }]\n            }]\n          }]\n        }]\n      }]);\n    };\n\n    setDrawingConfiguration (x, y, width, height, group) {\n      var mes = this.measurement;\n      mes.x = x;\n      mes.y = y;\n      mes.width = width;\n      mes.height = height;\n\n      this.parentGroup = group;\n\n      return this;\n    };\n\n    draw (x, y, width, height, group) {\n      let self = this,\n        measurement = self.measurement,\n        toolbar = self.toolbar,\n        list;\n\n      x = x === undefined ? measurement.x : x;\n      y = y === undefined ? measurement.y : y;\n      width = width === undefined ? measurement.width : width;\n      height = height === undefined ? measurement.height : height;\n      group = group === undefined ? self.parentGroup : group;\n      if (width && height) {\n        toolbar.draw(x, y, group);\n        this.showKPI ? this.drawPanel(x + width , y) : this.hidePanel();\n      }\n    };\n\n    drawPanel (x, y) {\n      var childStyle = {\n        left: '10px',\n        'font-weight': 'normal',\n        padding: '2px'\n      },\n      headStyleObj = {\n        padding: '10px',\n        'font-weight': 'bold'\n      };\n      var data = [{\n        head: {\n          text: ['Visible Data'],\n          style: headStyleObj\n        },\n        style: {\n          margin: '5px'\n        },\n        children: [{\n          text: ['Maximum', 30],\n          style: childStyle\n        },{\n          text: ['Minimum', 30],\n          style: childStyle\n        },{\n          text: ['Standard Deviation', 30],\n          style: childStyle\n        },{\n          text: ['Average', 30],\n          style: childStyle\n        }]\n      }, {\n        head: {\n          text: ['Full Data'],\n          style: headStyleObj\n        },\n        style: {\n          margin: '5px'\n        },\n        children: [{\n          text: ['Maximum', 30],\n          style: childStyle\n        },{\n          text: ['Minimum', 30],\n          style: childStyle\n        },{\n          text: ['Standard Deviation', 30],\n          style: childStyle\n        },{\n          text: ['Average', 30],\n          style: childStyle\n        }]\n      }];\n\n      var parent,\n        selection = d3.select(this.graphics.container)\n        .selectAll('.test')\n        .data([1]);\n\n      selection = selection\n      .enter()\n      .append('div')\n      .merge(selection)\n      .attr('class', 'test')\n      .style(\"left\", (x + \"px\"))\n      .style('position', 'absolute')\n      .style('display', 'block')\n      .style(\"top\", (y +\"px\"));\n\n      function createDIV(text, selection, cls, styleObj) {\n        var str = text.join(':'),\n          child = selection\n          .selectAll('.' + cls)\n          .data([1]);\n\n          child = child\n          .enter()\n          .append('div')\n          .merge(child)\n          .attr('class', cls)\n          .html(str)\n          .style('position', 'relative');\n\n\n          for (var obj in styleObj) {\n            child.style(obj, styleObj[obj]);\n          }\n\n          return child;\n        }\n\n      for (var i = 0, len = data.length; i < len; i += 1) {\n        createDIV([], selection, data[i].head.text[0] + '_container', data[i].style);\n        parent = createDIV(data[i].head.text, selection, data[i].head.text[0], data[i].head.style);\n        if (data[i].children) {\n          for (var j = 0, len1 = data[i].children.length; j < len1; j += 1) {\n            createDIV(data[i].children[j].text, parent, data[i].text + '_' + data[i].children[j].text[0], data[i].children[j].style);\n          }\n        }\n      }\n\n\n    }\n\n    hidePanel() {\n      d3.select(this.graphics.container)\n      .select('.test')\n      .remove();\n    }\n  }\n  return KPIIndicator;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fcts-ext-sidepanel.js"],"sourceRoot":""}